{
  "swagger": "2.0",
  "info": {
    "title": "message/user.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "UserTCPService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/user/gender/set": {
      "post": {
        "summary": "Set gender",
        "operationId": "UserTCPService_SetGender",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/messageSCSetGender"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/messageCSSetGender"
            }
          }
        ],
        "tags": [
          "UserTCPService"
        ]
      }
    },
    "/user/login": {
      "post": {
        "summary": "Login",
        "operationId": "UserTCPService_Login",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/messageSCLogin"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/messageCSLogin"
            }
          }
        ],
        "tags": [
          "UserTCPService"
        ]
      }
    },
    "/user/name/update": {
      "post": {
        "summary": "Update name",
        "operationId": "UserTCPService_UpdateName",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/messageSCUpdateName"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/messageCSUpdateName"
            }
          }
        ],
        "tags": [
          "UserTCPService"
        ]
      }
    }
  },
  "definitions": {
    "messageCSLogin": {
      "type": "object",
      "properties": {
        "reconnect": {
          "type": "boolean",
          "description": "Whether it is a reconnection. When the client discovers that the network is disconnected during the online period and executes automatic reconnection, it is true."
        }
      },
      "title": "Request: Login"
    },
    "messageCSSetGender": {
      "type": "object",
      "properties": {
        "gender": {
          "type": "integer",
          "format": "int32",
          "title": "Gender. Same as ActorProto.gender"
        }
      },
      "title": "Request: Set gender"
    },
    "messageCSUpdateName": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name"
        }
      },
      "title": "Request: Update name"
    },
    "messageHeroProto": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64",
          "title": "Hero ID"
        },
        "dataId": {
          "type": "string",
          "format": "uint64",
          "title": "Hero DataID"
        },
        "level": {
          "type": "string",
          "format": "uint64",
          "title": "Hero level"
        }
      },
      "title": "Hero"
    },
    "messageItemPackProto": {
      "type": "object",
      "properties": {
        "dataId": {
          "type": "string",
          "format": "int64",
          "title": "Pack DataID"
        },
        "receivedAt": {
          "type": "string",
          "format": "int64",
          "title": "Received time"
        }
      },
      "title": "Pack structure"
    },
    "messageItemRecoverableProto": {
      "type": "object",
      "properties": {
        "count": {
          "type": "string",
          "format": "uint64",
          "title": "Current amount"
        },
        "max": {
          "type": "string",
          "format": "uint64",
          "title": "Maximum"
        },
        "recoverPerSecond": {
          "type": "number",
          "format": "float",
          "title": "Recovery speed, n/s"
        },
        "updatedAt": {
          "type": "string",
          "format": "int64",
          "title": "Last updated timestamp, unit: second"
        }
      },
      "title": "Recoverable numeric properties"
    },
    "messageSCLogin": {
      "type": "object",
      "properties": {
        "code": {
          "$ref": "#/definitions/messageSCLoginCode",
          "title": "Status code"
        },
        "serverTime": {
          "type": "string",
          "format": "int64",
          "title": "Server timestamp, accurate to seconds"
        },
        "user": {
          "$ref": "#/definitions/messageUserProto",
          "title": "Player data"
        },
        "created": {
          "type": "boolean",
          "title": "Whether the player is new"
        }
      },
      "title": "Response: Login"
    },
    "messageSCLoginCode": {
      "type": "string",
      "enum": [
        "ErrServer",
        "Success",
        "ErrAccountIdNotExist",
        "ErrAccountBanned"
      ],
      "default": "ErrServer",
      "title": "- ErrServer: Please try again later\n - Success: Success\n - ErrAccountIdNotExist: Account does not exist\n - ErrAccountBanned: Account banned"
    },
    "messageSCSetGender": {
      "type": "object",
      "properties": {
        "code": {
          "$ref": "#/definitions/messageSCSetGenderCode",
          "title": "Status code"
        }
      },
      "title": "Response: Set gender"
    },
    "messageSCSetGenderCode": {
      "type": "string",
      "enum": [
        "ErrServer",
        "Success",
        "ErrGenderIllegal",
        "ErrGenderSet"
      ],
      "default": "ErrServer",
      "title": "- ErrServer: Please try again later\n - Success: Success\n - ErrGenderIllegal: Gender is illegal\n - ErrGenderSet: Gender has been set"
    },
    "messageSCUpdateName": {
      "type": "object",
      "properties": {
        "code": {
          "$ref": "#/definitions/messageSCUpdateNameCode",
          "title": "Status code"
        },
        "isIllegal": {
          "type": "boolean"
        }
      },
      "title": "Response: Update name"
    },
    "messageSCUpdateNameCode": {
      "type": "string",
      "enum": [
        "ErrServer",
        "Success",
        "ErrNameIllegal",
        "ErrNameNotChanged"
      ],
      "default": "ErrServer",
      "title": "- ErrServer: Please try again later\n - Success: Success\n - ErrNameIllegal: Name is illegal\n - ErrNameNotChanged: Name not changed"
    },
    "messageUserBasicProto": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "id, globally unique string"
        },
        "name": {
          "type": "string",
          "title": "Name"
        },
        "nameSeq": {
          "type": "string",
          "format": "uint64",
          "title": "Duplicate name suffix"
        },
        "gender": {
          "type": "integer",
          "format": "int32",
          "title": "Gender. 0:default 1:male 2:female"
        }
      },
      "title": "Basic information"
    },
    "messageUserHeroListProto": {
      "type": "object",
      "properties": {
        "heroes": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/messageHeroProto"
          },
          "title": "All heroes"
        }
      },
      "title": "Hero list"
    },
    "messageUserProto": {
      "type": "object",
      "properties": {
        "basic": {
          "$ref": "#/definitions/messageUserBasicProto",
          "title": "Basic information"
        },
        "storage": {
          "$ref": "#/definitions/messageUserStorageProto",
          "title": "Item storage"
        },
        "heroList": {
          "$ref": "#/definitions/messageUserHeroListProto",
          "title": "Hero list"
        },
        "room": {
          "$ref": "#/definitions/messageUserRoomProto",
          "title": "Room"
        }
      },
      "title": "User data"
    },
    "messageUserRoomProto": {
      "type": "object",
      "properties": {
        "roomId": {
          "type": "string",
          "format": "int64",
          "title": "Room ID"
        }
      }
    },
    "messageUserStorageProto": {
      "type": "object",
      "properties": {
        "amounts": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "format": "uint64"
          },
          "title": "Numeric items\u003citem config ID, amount\u003e"
        },
        "packs": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/messageItemPackProto"
          },
          "title": "Packs\u003cpack ID, amount\u003e"
        },
        "recoverableItems": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/messageItemRecoverableProto"
          },
          "title": "Recoverable items\u003cconfig ID, properties\u003e"
        }
      },
      "title": "Storage"
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
