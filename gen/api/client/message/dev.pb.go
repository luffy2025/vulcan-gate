// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: message/dev.proto

package climsg

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SCDevList_Code int32

const (
	SCDevList_ErrServer SCDevList_Code = 0 // Please try again later
	SCDevList_Success   SCDevList_Code = 1 // Success
)

// Enum value maps for SCDevList_Code.
var (
	SCDevList_Code_name = map[int32]string{
		0: "ErrServer",
		1: "Success",
	}
	SCDevList_Code_value = map[string]int32{
		"ErrServer": 0,
		"Success":   1,
	}
)

func (x SCDevList_Code) Enum() *SCDevList_Code {
	p := new(SCDevList_Code)
	*p = x
	return p
}

func (x SCDevList_Code) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SCDevList_Code) Descriptor() protoreflect.EnumDescriptor {
	return file_message_dev_proto_enumTypes[0].Descriptor()
}

func (SCDevList_Code) Type() protoreflect.EnumType {
	return &file_message_dev_proto_enumTypes[0]
}

func (x SCDevList_Code) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SCDevList_Code.Descriptor instead.
func (SCDevList_Code) EnumDescriptor() ([]byte, []int) {
	return file_message_dev_proto_rawDescGZIP(), []int{1, 0}
}

type SCDevExecute_Code int32

const (
	SCDevExecute_ErrServer       SCDevExecute_Code = 0 // Please try again later
	SCDevExecute_Success         SCDevExecute_Code = 1 // Success
	SCDevExecute_ErrModNotExist  SCDevExecute_Code = 2 // Command module does not exist
	SCDevExecute_ErrNameNotExist SCDevExecute_Code = 3 // Command name does not exist
	SCDevExecute_ErrArgNotExist  SCDevExecute_Code = 4 // Parameter does not exist
	SCDevExecute_ErrArgIllegal   SCDevExecute_Code = 5 // Parameter error
	SCDevExecute_ErrArgFormat    SCDevExecute_Code = 6 // Parameter format error
)

// Enum value maps for SCDevExecute_Code.
var (
	SCDevExecute_Code_name = map[int32]string{
		0: "ErrServer",
		1: "Success",
		2: "ErrModNotExist",
		3: "ErrNameNotExist",
		4: "ErrArgNotExist",
		5: "ErrArgIllegal",
		6: "ErrArgFormat",
	}
	SCDevExecute_Code_value = map[string]int32{
		"ErrServer":       0,
		"Success":         1,
		"ErrModNotExist":  2,
		"ErrNameNotExist": 3,
		"ErrArgNotExist":  4,
		"ErrArgIllegal":   5,
		"ErrArgFormat":    6,
	}
)

func (x SCDevExecute_Code) Enum() *SCDevExecute_Code {
	p := new(SCDevExecute_Code)
	*p = x
	return p
}

func (x SCDevExecute_Code) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SCDevExecute_Code) Descriptor() protoreflect.EnumDescriptor {
	return file_message_dev_proto_enumTypes[1].Descriptor()
}

func (SCDevExecute_Code) Type() protoreflect.EnumType {
	return &file_message_dev_proto_enumTypes[1]
}

func (x SCDevExecute_Code) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SCDevExecute_Code.Descriptor instead.
func (SCDevExecute_Code) EnumDescriptor() ([]byte, []int) {
	return file_message_dev_proto_rawDescGZIP(), []int{3, 0}
}

// Request: Dev command list
type CSDevList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CSDevList) Reset() {
	*x = CSDevList{}
	mi := &file_message_dev_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSDevList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSDevList) ProtoMessage() {}

func (x *CSDevList) ProtoReflect() protoreflect.Message {
	mi := &file_message_dev_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSDevList.ProtoReflect.Descriptor instead.
func (*CSDevList) Descriptor() ([]byte, []int) {
	return file_message_dev_proto_rawDescGZIP(), []int{0}
}

// Response: Dev command list
type SCDevList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          SCDevList_Code         `protobuf:"varint,1,opt,name=code,proto3,enum=message.SCDevList_Code" json:"code,omitempty"`
	Commands      []*DevCmdProto         `protobuf:"bytes,2,rep,name=commands,proto3" json:"commands,omitempty"` // Dev command list
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SCDevList) Reset() {
	*x = SCDevList{}
	mi := &file_message_dev_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SCDevList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCDevList) ProtoMessage() {}

func (x *SCDevList) ProtoReflect() protoreflect.Message {
	mi := &file_message_dev_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCDevList.ProtoReflect.Descriptor instead.
func (*SCDevList) Descriptor() ([]byte, []int) {
	return file_message_dev_proto_rawDescGZIP(), []int{1}
}

func (x *SCDevList) GetCode() SCDevList_Code {
	if x != nil {
		return x.Code
	}
	return SCDevList_ErrServer
}

func (x *SCDevList) GetCommands() []*DevCmdProto {
	if x != nil {
		return x.Commands
	}
	return nil
}

// Request: Execute Dev command
type CSDevExecute struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Mod           string                 `protobuf:"bytes,1,opt,name=mod,proto3" json:"mod,omitempty"`                                                                                                  // Command module
	Cmd           string                 `protobuf:"bytes,2,opt,name=cmd,proto3" json:"cmd,omitempty"`                                                                                                  // Command name
	StrArgs       map[string]string      `protobuf:"bytes,4,rep,name=str_args,json=strArgs,proto3" json:"str_args,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Parameters map<DevCmdArgProto.key, string>
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CSDevExecute) Reset() {
	*x = CSDevExecute{}
	mi := &file_message_dev_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSDevExecute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSDevExecute) ProtoMessage() {}

func (x *CSDevExecute) ProtoReflect() protoreflect.Message {
	mi := &file_message_dev_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSDevExecute.ProtoReflect.Descriptor instead.
func (*CSDevExecute) Descriptor() ([]byte, []int) {
	return file_message_dev_proto_rawDescGZIP(), []int{2}
}

func (x *CSDevExecute) GetMod() string {
	if x != nil {
		return x.Mod
	}
	return ""
}

func (x *CSDevExecute) GetCmd() string {
	if x != nil {
		return x.Cmd
	}
	return ""
}

func (x *CSDevExecute) GetStrArgs() map[string]string {
	if x != nil {
		return x.StrArgs
	}
	return nil
}

// Response: Execute Dev command
type SCDevExecute struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          SCDevExecute_Code      `protobuf:"varint,1,opt,name=code,proto3,enum=message.SCDevExecute_Code" json:"code,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"` // Result information, JSON format
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SCDevExecute) Reset() {
	*x = SCDevExecute{}
	mi := &file_message_dev_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SCDevExecute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCDevExecute) ProtoMessage() {}

func (x *SCDevExecute) ProtoReflect() protoreflect.Message {
	mi := &file_message_dev_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCDevExecute.ProtoReflect.Descriptor instead.
func (*SCDevExecute) Descriptor() ([]byte, []int) {
	return file_message_dev_proto_rawDescGZIP(), []int{3}
}

func (x *SCDevExecute) GetCode() SCDevExecute_Code {
	if x != nil {
		return x.Code
	}
	return SCDevExecute_ErrServer
}

func (x *SCDevExecute) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// A Dev command
type DevCmdProto struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Mod           string                 `protobuf:"bytes,1,opt,name=mod,proto3" json:"mod,omitempty"`   // Command module
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"` // Command name
	Desc          string                 `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"` // Description
	Args          []*DevCmdArgProto      `protobuf:"bytes,4,rep,name=args,proto3" json:"args,omitempty"` // All parameters
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DevCmdProto) Reset() {
	*x = DevCmdProto{}
	mi := &file_message_dev_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DevCmdProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DevCmdProto) ProtoMessage() {}

func (x *DevCmdProto) ProtoReflect() protoreflect.Message {
	mi := &file_message_dev_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DevCmdProto.ProtoReflect.Descriptor instead.
func (*DevCmdProto) Descriptor() ([]byte, []int) {
	return file_message_dev_proto_rawDescGZIP(), []int{4}
}

func (x *DevCmdProto) GetMod() string {
	if x != nil {
		return x.Mod
	}
	return ""
}

func (x *DevCmdProto) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DevCmdProto) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *DevCmdProto) GetArgs() []*DevCmdArgProto {
	if x != nil {
		return x.Args
	}
	return nil
}

// A parameter of Dev command
type DevCmdArgProto struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"` // Parameter name
	Def           string                 `protobuf:"bytes,2,opt,name=def,proto3" json:"def,omitempty"` // Default value
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DevCmdArgProto) Reset() {
	*x = DevCmdArgProto{}
	mi := &file_message_dev_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DevCmdArgProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DevCmdArgProto) ProtoMessage() {}

func (x *DevCmdArgProto) ProtoReflect() protoreflect.Message {
	mi := &file_message_dev_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DevCmdArgProto.ProtoReflect.Descriptor instead.
func (*DevCmdArgProto) Descriptor() ([]byte, []int) {
	return file_message_dev_proto_rawDescGZIP(), []int{5}
}

func (x *DevCmdArgProto) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *DevCmdArgProto) GetDef() string {
	if x != nil {
		return x.Def
	}
	return ""
}

var File_message_dev_proto protoreflect.FileDescriptor

var file_message_dev_proto_rawDesc = string([]byte{
	0x0a, 0x11, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x64, 0x65, 0x76, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x1c, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x0b, 0x0a, 0x09, 0x43, 0x53,
	0x44, 0x65, 0x76, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x8e, 0x01, 0x0a, 0x09, 0x53, 0x43, 0x44, 0x65,
	0x76, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x43,
	0x44, 0x65, 0x76, 0x4c, 0x69, 0x73, 0x74, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x30, 0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x44,
	0x65, 0x76, 0x43, 0x6d, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x08, 0x63, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x73, 0x22, 0x22, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x0d, 0x0a, 0x09,
	0x45, 0x72, 0x72, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x53,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x01, 0x22, 0xad, 0x01, 0x0a, 0x0c, 0x43, 0x53, 0x44,
	0x65, 0x76, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x6f, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x6f, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x63,
	0x6d, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x3d, 0x0a,
	0x08, 0x73, 0x74, 0x72, 0x5f, 0x61, 0x72, 0x67, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x53, 0x44, 0x65, 0x76, 0x45,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x41, 0x72, 0x67, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x07, 0x73, 0x74, 0x72, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x3a, 0x0a, 0x0c,
	0x53, 0x74, 0x72, 0x41, 0x72, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xdf, 0x01, 0x0a, 0x0c, 0x53, 0x43, 0x44,
	0x65, 0x76, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x53, 0x43, 0x44, 0x65, 0x76, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x2e, 0x43,
	0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0x84, 0x01, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x0d, 0x0a, 0x09,
	0x45, 0x72, 0x72, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x53,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x45, 0x72, 0x72, 0x4d,
	0x6f, 0x64, 0x4e, 0x6f, 0x74, 0x45, 0x78, 0x69, 0x73, 0x74, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f,
	0x45, 0x72, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x4e, 0x6f, 0x74, 0x45, 0x78, 0x69, 0x73, 0x74, 0x10,
	0x03, 0x12, 0x12, 0x0a, 0x0e, 0x45, 0x72, 0x72, 0x41, 0x72, 0x67, 0x4e, 0x6f, 0x74, 0x45, 0x78,
	0x69, 0x73, 0x74, 0x10, 0x04, 0x12, 0x11, 0x0a, 0x0d, 0x45, 0x72, 0x72, 0x41, 0x72, 0x67, 0x49,
	0x6c, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x10, 0x05, 0x12, 0x10, 0x0a, 0x0c, 0x45, 0x72, 0x72, 0x41,
	0x72, 0x67, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x10, 0x06, 0x22, 0x74, 0x0a, 0x0b, 0x44, 0x65,
	0x76, 0x43, 0x6d, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x6f, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x6f, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64,
	0x65, 0x73, 0x63, 0x12, 0x2b, 0x0a, 0x04, 0x61, 0x72, 0x67, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x65, 0x76, 0x43,
	0x6d, 0x64, 0x41, 0x72, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x04, 0x61, 0x72, 0x67, 0x73,
	0x22, 0x34, 0x0a, 0x0e, 0x44, 0x65, 0x76, 0x43, 0x6d, 0x64, 0x41, 0x72, 0x67, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x65, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x64, 0x65, 0x66, 0x32, 0xad, 0x01, 0x0a, 0x0d, 0x44, 0x65, 0x76, 0x54, 0x43,
	0x50, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x47, 0x0a, 0x07, 0x44, 0x65, 0x76, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x12, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x53,
	0x44, 0x65, 0x76, 0x4c, 0x69, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x53, 0x43, 0x44, 0x65, 0x76, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x14, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x0e, 0x3a, 0x01, 0x2a, 0x22, 0x09, 0x2f, 0x64, 0x65, 0x76, 0x2f, 0x6c, 0x69, 0x73,
	0x74, 0x12, 0x53, 0x0a, 0x0a, 0x44, 0x65, 0x76, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x12,
	0x15, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x53, 0x44, 0x65, 0x76, 0x45,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x1a, 0x15, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x53, 0x43, 0x44, 0x65, 0x76, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x22, 0x17, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x11, 0x3a, 0x01, 0x2a, 0x22, 0x0c, 0x2f, 0x64, 0x65, 0x76, 0x2f, 0x65,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x42, 0x1b, 0x5a, 0x19, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x3b, 0x63, 0x6c, 0x69,
	0x6d, 0x73, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_message_dev_proto_rawDescOnce sync.Once
	file_message_dev_proto_rawDescData []byte
)

func file_message_dev_proto_rawDescGZIP() []byte {
	file_message_dev_proto_rawDescOnce.Do(func() {
		file_message_dev_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_message_dev_proto_rawDesc), len(file_message_dev_proto_rawDesc)))
	})
	return file_message_dev_proto_rawDescData
}

var file_message_dev_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_message_dev_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_message_dev_proto_goTypes = []any{
	(SCDevList_Code)(0),    // 0: message.SCDevList.Code
	(SCDevExecute_Code)(0), // 1: message.SCDevExecute.Code
	(*CSDevList)(nil),      // 2: message.CSDevList
	(*SCDevList)(nil),      // 3: message.SCDevList
	(*CSDevExecute)(nil),   // 4: message.CSDevExecute
	(*SCDevExecute)(nil),   // 5: message.SCDevExecute
	(*DevCmdProto)(nil),    // 6: message.DevCmdProto
	(*DevCmdArgProto)(nil), // 7: message.DevCmdArgProto
	nil,                    // 8: message.CSDevExecute.StrArgsEntry
}
var file_message_dev_proto_depIdxs = []int32{
	0, // 0: message.SCDevList.code:type_name -> message.SCDevList.Code
	6, // 1: message.SCDevList.commands:type_name -> message.DevCmdProto
	8, // 2: message.CSDevExecute.str_args:type_name -> message.CSDevExecute.StrArgsEntry
	1, // 3: message.SCDevExecute.code:type_name -> message.SCDevExecute.Code
	7, // 4: message.DevCmdProto.args:type_name -> message.DevCmdArgProto
	2, // 5: message.DevTCPService.DevList:input_type -> message.CSDevList
	4, // 6: message.DevTCPService.DevExecute:input_type -> message.CSDevExecute
	3, // 7: message.DevTCPService.DevList:output_type -> message.SCDevList
	5, // 8: message.DevTCPService.DevExecute:output_type -> message.SCDevExecute
	7, // [7:9] is the sub-list for method output_type
	5, // [5:7] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_message_dev_proto_init() }
func file_message_dev_proto_init() {
	if File_message_dev_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_message_dev_proto_rawDesc), len(file_message_dev_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_message_dev_proto_goTypes,
		DependencyIndexes: file_message_dev_proto_depIdxs,
		EnumInfos:         file_message_dev_proto_enumTypes,
		MessageInfos:      file_message_dev_proto_msgTypes,
	}.Build()
	File_message_dev_proto = out.File
	file_message_dev_proto_goTypes = nil
	file_message_dev_proto_depIdxs = nil
}
