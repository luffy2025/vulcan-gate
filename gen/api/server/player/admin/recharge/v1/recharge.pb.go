// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: player/admin/recharge/v1/recharge.proto

package adminv1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetOrderListRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Page          int32                  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize      int32                  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Cond          *GetOrderListCond      `protobuf:"bytes,3,opt,name=cond,proto3" json:"cond,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetOrderListRequest) Reset() {
	*x = GetOrderListRequest{}
	mi := &file_player_admin_recharge_v1_recharge_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOrderListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrderListRequest) ProtoMessage() {}

func (x *GetOrderListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_player_admin_recharge_v1_recharge_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrderListRequest.ProtoReflect.Descriptor instead.
func (*GetOrderListRequest) Descriptor() ([]byte, []int) {
	return file_player_admin_recharge_v1_recharge_proto_rawDescGZIP(), []int{0}
}

func (x *GetOrderListRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetOrderListRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetOrderListRequest) GetCond() *GetOrderListCond {
	if x != nil {
		return x.Cond
	}
	return nil
}

type GetOrderListResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Orders        []*OrderProto          `protobuf:"bytes,3,rep,name=orders,proto3" json:"orders,omitempty"`
	Total         uint32                 `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetOrderListResponse) Reset() {
	*x = GetOrderListResponse{}
	mi := &file_player_admin_recharge_v1_recharge_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOrderListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrderListResponse) ProtoMessage() {}

func (x *GetOrderListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_player_admin_recharge_v1_recharge_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrderListResponse.ProtoReflect.Descriptor instead.
func (*GetOrderListResponse) Descriptor() ([]byte, []int) {
	return file_player_admin_recharge_v1_recharge_proto_rawDescGZIP(), []int{1}
}

func (x *GetOrderListResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetOrderListResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetOrderListResponse) GetOrders() []*OrderProto {
	if x != nil {
		return x.Orders
	}
	return nil
}

func (x *GetOrderListResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetOrderListCond struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Store         string                 `protobuf:"bytes,1,opt,name=store,proto3" json:"store,omitempty"`
	TransId       string                 `protobuf:"bytes,2,opt,name=trans_id,json=transId,proto3" json:"trans_id,omitempty"`
	Uid           int64                  `protobuf:"varint,3,opt,name=uid,proto3" json:"uid,omitempty"`
	Ack           int32                  `protobuf:"varint,4,opt,name=ack,proto3" json:"ack,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetOrderListCond) Reset() {
	*x = GetOrderListCond{}
	mi := &file_player_admin_recharge_v1_recharge_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOrderListCond) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrderListCond) ProtoMessage() {}

func (x *GetOrderListCond) ProtoReflect() protoreflect.Message {
	mi := &file_player_admin_recharge_v1_recharge_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrderListCond.ProtoReflect.Descriptor instead.
func (*GetOrderListCond) Descriptor() ([]byte, []int) {
	return file_player_admin_recharge_v1_recharge_proto_rawDescGZIP(), []int{2}
}

func (x *GetOrderListCond) GetStore() string {
	if x != nil {
		return x.Store
	}
	return ""
}

func (x *GetOrderListCond) GetTransId() string {
	if x != nil {
		return x.TransId
	}
	return ""
}

func (x *GetOrderListCond) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *GetOrderListCond) GetAck() int32 {
	if x != nil {
		return x.Ack
	}
	return 0
}

type GetOrderByIdRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Store         string                 `protobuf:"bytes,1,opt,name=store,proto3" json:"store,omitempty"`
	TransId       string                 `protobuf:"bytes,2,opt,name=trans_id,json=transId,proto3" json:"trans_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetOrderByIdRequest) Reset() {
	*x = GetOrderByIdRequest{}
	mi := &file_player_admin_recharge_v1_recharge_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOrderByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrderByIdRequest) ProtoMessage() {}

func (x *GetOrderByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_player_admin_recharge_v1_recharge_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrderByIdRequest.ProtoReflect.Descriptor instead.
func (*GetOrderByIdRequest) Descriptor() ([]byte, []int) {
	return file_player_admin_recharge_v1_recharge_proto_rawDescGZIP(), []int{3}
}

func (x *GetOrderByIdRequest) GetStore() string {
	if x != nil {
		return x.Store
	}
	return ""
}

func (x *GetOrderByIdRequest) GetTransId() string {
	if x != nil {
		return x.TransId
	}
	return ""
}

type GetOrderByIdResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Order         *OrderProto            `protobuf:"bytes,3,opt,name=order,proto3" json:"order,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetOrderByIdResponse) Reset() {
	*x = GetOrderByIdResponse{}
	mi := &file_player_admin_recharge_v1_recharge_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOrderByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrderByIdResponse) ProtoMessage() {}

func (x *GetOrderByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_player_admin_recharge_v1_recharge_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrderByIdResponse.ProtoReflect.Descriptor instead.
func (*GetOrderByIdResponse) Descriptor() ([]byte, []int) {
	return file_player_admin_recharge_v1_recharge_proto_rawDescGZIP(), []int{4}
}

func (x *GetOrderByIdResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetOrderByIdResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetOrderByIdResponse) GetOrder() *OrderProto {
	if x != nil {
		return x.Order
	}
	return nil
}

type UpdateOrderAckStateByIdRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Store         string                 `protobuf:"bytes,1,opt,name=store,proto3" json:"store,omitempty"`
	TransId       string                 `protobuf:"bytes,2,opt,name=trans_id,json=transId,proto3" json:"trans_id,omitempty"`
	Ack           int32                  `protobuf:"varint,3,opt,name=ack,proto3" json:"ack,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateOrderAckStateByIdRequest) Reset() {
	*x = UpdateOrderAckStateByIdRequest{}
	mi := &file_player_admin_recharge_v1_recharge_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateOrderAckStateByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOrderAckStateByIdRequest) ProtoMessage() {}

func (x *UpdateOrderAckStateByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_player_admin_recharge_v1_recharge_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOrderAckStateByIdRequest.ProtoReflect.Descriptor instead.
func (*UpdateOrderAckStateByIdRequest) Descriptor() ([]byte, []int) {
	return file_player_admin_recharge_v1_recharge_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateOrderAckStateByIdRequest) GetStore() string {
	if x != nil {
		return x.Store
	}
	return ""
}

func (x *UpdateOrderAckStateByIdRequest) GetTransId() string {
	if x != nil {
		return x.TransId
	}
	return ""
}

func (x *UpdateOrderAckStateByIdRequest) GetAck() int32 {
	if x != nil {
		return x.Ack
	}
	return 0
}

type UpdateOrderAckStateByIdResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateOrderAckStateByIdResponse) Reset() {
	*x = UpdateOrderAckStateByIdResponse{}
	mi := &file_player_admin_recharge_v1_recharge_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateOrderAckStateByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOrderAckStateByIdResponse) ProtoMessage() {}

func (x *UpdateOrderAckStateByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_player_admin_recharge_v1_recharge_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOrderAckStateByIdResponse.ProtoReflect.Descriptor instead.
func (*UpdateOrderAckStateByIdResponse) Descriptor() ([]byte, []int) {
	return file_player_admin_recharge_v1_recharge_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateOrderAckStateByIdResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UpdateOrderAckStateByIdResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type OrderProto struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Store         string                 `protobuf:"bytes,1,opt,name=store,proto3" json:"store,omitempty"`
	TransId       string                 `protobuf:"bytes,2,opt,name=trans_id,json=transId,proto3" json:"trans_id,omitempty"`
	Ack           int32                  `protobuf:"varint,3,opt,name=ack,proto3" json:"ack,omitempty"`
	Uid           int64                  `protobuf:"varint,4,opt,name=uid,proto3" json:"uid,omitempty"`
	ProductId     string                 `protobuf:"bytes,5,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	PurchasedAt   int64                  `protobuf:"varint,6,opt,name=purchased_at,json=purchasedAt,proto3" json:"purchased_at,omitempty"`
	AckAt         int64                  `protobuf:"varint,7,opt,name=ack_at,json=ackAt,proto3" json:"ack_at,omitempty"`
	Detail        string                 `protobuf:"bytes,8,opt,name=detail,proto3" json:"detail,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OrderProto) Reset() {
	*x = OrderProto{}
	mi := &file_player_admin_recharge_v1_recharge_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrderProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderProto) ProtoMessage() {}

func (x *OrderProto) ProtoReflect() protoreflect.Message {
	mi := &file_player_admin_recharge_v1_recharge_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderProto.ProtoReflect.Descriptor instead.
func (*OrderProto) Descriptor() ([]byte, []int) {
	return file_player_admin_recharge_v1_recharge_proto_rawDescGZIP(), []int{7}
}

func (x *OrderProto) GetStore() string {
	if x != nil {
		return x.Store
	}
	return ""
}

func (x *OrderProto) GetTransId() string {
	if x != nil {
		return x.TransId
	}
	return ""
}

func (x *OrderProto) GetAck() int32 {
	if x != nil {
		return x.Ack
	}
	return 0
}

func (x *OrderProto) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *OrderProto) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *OrderProto) GetPurchasedAt() int64 {
	if x != nil {
		return x.PurchasedAt
	}
	return 0
}

func (x *OrderProto) GetAckAt() int64 {
	if x != nil {
		return x.AckAt
	}
	return 0
}

func (x *OrderProto) GetDetail() string {
	if x != nil {
		return x.Detail
	}
	return ""
}

var File_player_admin_recharge_v1_recharge_proto protoreflect.FileDescriptor

var file_player_admin_recharge_v1_recharge_proto_rawDesc = string([]byte{
	0x0a, 0x27, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x72,
	0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x63, 0x68, 0x61,
	0x72, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x18, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x72, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65,
	0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x86, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x3e, 0x0a, 0x04, 0x63, 0x6f,
	0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x72, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74,
	0x43, 0x6f, 0x6e, 0x64, 0x52, 0x04, 0x63, 0x6f, 0x6e, 0x64, 0x22, 0x98, 0x01, 0x0a, 0x14, 0x47,
	0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x3c, 0x0a, 0x06, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x2e, 0x72, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x06, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x67, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x12,
	0x19, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x61, 0x63, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x61, 0x63, 0x6b, 0x22, 0x46,
	0x0a, 0x13, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x49, 0x64, 0x22, 0x80, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3a, 0x0a,
	0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x72, 0x65, 0x63, 0x68,
	0x61, 0x72, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x22, 0x63, 0x0a, 0x1e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x61, 0x63, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x61, 0x63, 0x6b, 0x22, 0x4f,
	0x0a, 0x1f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x63, 0x6b,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22,
	0xd2, 0x01, 0x0a, 0x0a, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x49, 0x64, 0x12,
	0x10, 0x0a, 0x03, 0x61, 0x63, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x61, 0x63,
	0x6b, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03,
	0x75, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61,
	0x73, 0x65, 0x64, 0x41, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x63, 0x6b, 0x5f, 0x61, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x61, 0x63, 0x6b, 0x41, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x32, 0xdf, 0x03, 0x0a, 0x14, 0x52, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67,
	0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x88, 0x01,
	0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2d,
	0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x72, 0x65,
	0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x72, 0x65, 0x63,
	0x68, 0x61, 0x72, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x19, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x13, 0x12, 0x11, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x86, 0x01, 0x0a, 0x0c, 0x47, 0x65, 0x74,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x49, 0x64, 0x12, 0x2d, 0x2e, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x72, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x72, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x49, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x17, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x11,
	0x12, 0x0f, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2f, 0x69,
	0x64, 0x12, 0xb2, 0x01, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x41, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x65, 0x42, 0x79, 0x49, 0x64, 0x12, 0x38, 0x2e,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x72, 0x65, 0x63,
	0x68, 0x61, 0x72, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x41, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x65, 0x42, 0x79, 0x49, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x39, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x72, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x63,
	0x6b, 0x53, 0x74, 0x61, 0x74, 0x65, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x3a, 0x01, 0x2a, 0x22, 0x17, 0x2f,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2f, 0x61, 0x63, 0x6b, 0x2f,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x2d, 0x5a, 0x2b, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2f, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x2f, 0x72, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x2f, 0x76, 0x31, 0x3b, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_player_admin_recharge_v1_recharge_proto_rawDescOnce sync.Once
	file_player_admin_recharge_v1_recharge_proto_rawDescData []byte
)

func file_player_admin_recharge_v1_recharge_proto_rawDescGZIP() []byte {
	file_player_admin_recharge_v1_recharge_proto_rawDescOnce.Do(func() {
		file_player_admin_recharge_v1_recharge_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_player_admin_recharge_v1_recharge_proto_rawDesc), len(file_player_admin_recharge_v1_recharge_proto_rawDesc)))
	})
	return file_player_admin_recharge_v1_recharge_proto_rawDescData
}

var file_player_admin_recharge_v1_recharge_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_player_admin_recharge_v1_recharge_proto_goTypes = []any{
	(*GetOrderListRequest)(nil),             // 0: player.admin.recharge.v1.GetOrderListRequest
	(*GetOrderListResponse)(nil),            // 1: player.admin.recharge.v1.GetOrderListResponse
	(*GetOrderListCond)(nil),                // 2: player.admin.recharge.v1.GetOrderListCond
	(*GetOrderByIdRequest)(nil),             // 3: player.admin.recharge.v1.GetOrderByIdRequest
	(*GetOrderByIdResponse)(nil),            // 4: player.admin.recharge.v1.GetOrderByIdResponse
	(*UpdateOrderAckStateByIdRequest)(nil),  // 5: player.admin.recharge.v1.UpdateOrderAckStateByIdRequest
	(*UpdateOrderAckStateByIdResponse)(nil), // 6: player.admin.recharge.v1.UpdateOrderAckStateByIdResponse
	(*OrderProto)(nil),                      // 7: player.admin.recharge.v1.OrderProto
}
var file_player_admin_recharge_v1_recharge_proto_depIdxs = []int32{
	2, // 0: player.admin.recharge.v1.GetOrderListRequest.cond:type_name -> player.admin.recharge.v1.GetOrderListCond
	7, // 1: player.admin.recharge.v1.GetOrderListResponse.orders:type_name -> player.admin.recharge.v1.OrderProto
	7, // 2: player.admin.recharge.v1.GetOrderByIdResponse.order:type_name -> player.admin.recharge.v1.OrderProto
	0, // 3: player.admin.recharge.v1.RechargeAdminService.GetOrderList:input_type -> player.admin.recharge.v1.GetOrderListRequest
	3, // 4: player.admin.recharge.v1.RechargeAdminService.GetOrderById:input_type -> player.admin.recharge.v1.GetOrderByIdRequest
	5, // 5: player.admin.recharge.v1.RechargeAdminService.UpdateOrderAckStateById:input_type -> player.admin.recharge.v1.UpdateOrderAckStateByIdRequest
	1, // 6: player.admin.recharge.v1.RechargeAdminService.GetOrderList:output_type -> player.admin.recharge.v1.GetOrderListResponse
	4, // 7: player.admin.recharge.v1.RechargeAdminService.GetOrderById:output_type -> player.admin.recharge.v1.GetOrderByIdResponse
	6, // 8: player.admin.recharge.v1.RechargeAdminService.UpdateOrderAckStateById:output_type -> player.admin.recharge.v1.UpdateOrderAckStateByIdResponse
	6, // [6:9] is the sub-list for method output_type
	3, // [3:6] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_player_admin_recharge_v1_recharge_proto_init() }
func file_player_admin_recharge_v1_recharge_proto_init() {
	if File_player_admin_recharge_v1_recharge_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_player_admin_recharge_v1_recharge_proto_rawDesc), len(file_player_admin_recharge_v1_recharge_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_player_admin_recharge_v1_recharge_proto_goTypes,
		DependencyIndexes: file_player_admin_recharge_v1_recharge_proto_depIdxs,
		MessageInfos:      file_player_admin_recharge_v1_recharge_proto_msgTypes,
	}.Build()
	File_player_admin_recharge_v1_recharge_proto = out.File
	file_player_admin_recharge_v1_recharge_proto_goTypes = nil
	file_player_admin_recharge_v1_recharge_proto_depIdxs = nil
}
