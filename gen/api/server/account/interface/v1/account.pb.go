// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: account/interface/v1/account.proto

package interfacev1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RegisterResponse_Code int32

const (
	RegisterResponse_CODE_ERR_UNSPECIFIED RegisterResponse_Code = 0 // Please try again later
	RegisterResponse_CODE_SUCCESS         RegisterResponse_Code = 1 // Success
	RegisterResponse_CODE_ERR_CREATED     RegisterResponse_Code = 2 // Already registered
	RegisterResponse_CODE_ERR_NAME        RegisterResponse_Code = 3 // Account name format error, temporarily length 6-18
	RegisterResponse_CODE_ERR_PWD         RegisterResponse_Code = 4 // Password format error, temporarily length 6-18
)

// Enum value maps for RegisterResponse_Code.
var (
	RegisterResponse_Code_name = map[int32]string{
		0: "CODE_ERR_UNSPECIFIED",
		1: "CODE_SUCCESS",
		2: "CODE_ERR_CREATED",
		3: "CODE_ERR_NAME",
		4: "CODE_ERR_PWD",
	}
	RegisterResponse_Code_value = map[string]int32{
		"CODE_ERR_UNSPECIFIED": 0,
		"CODE_SUCCESS":         1,
		"CODE_ERR_CREATED":     2,
		"CODE_ERR_NAME":        3,
		"CODE_ERR_PWD":         4,
	}
)

func (x RegisterResponse_Code) Enum() *RegisterResponse_Code {
	p := new(RegisterResponse_Code)
	*p = x
	return p
}

func (x RegisterResponse_Code) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RegisterResponse_Code) Descriptor() protoreflect.EnumDescriptor {
	return file_account_interface_v1_account_proto_enumTypes[0].Descriptor()
}

func (RegisterResponse_Code) Type() protoreflect.EnumType {
	return &file_account_interface_v1_account_proto_enumTypes[0]
}

func (x RegisterResponse_Code) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RegisterResponse_Code.Descriptor instead.
func (RegisterResponse_Code) EnumDescriptor() ([]byte, []int) {
	return file_account_interface_v1_account_proto_rawDescGZIP(), []int{3, 0}
}

type LoginResponse_Code int32

const (
	LoginResponse_CODE_ERR_UNSPECIFIED LoginResponse_Code = 0 // Please try again later
	LoginResponse_CODE_SUCCESS         LoginResponse_Code = 1 // Success
	LoginResponse_CODE_ERR_ACCOUNT     LoginResponse_Code = 2 // Account does not exist
	LoginResponse_CODE_ERR_PASSWORD    LoginResponse_Code = 3 // Password error
)

// Enum value maps for LoginResponse_Code.
var (
	LoginResponse_Code_name = map[int32]string{
		0: "CODE_ERR_UNSPECIFIED",
		1: "CODE_SUCCESS",
		2: "CODE_ERR_ACCOUNT",
		3: "CODE_ERR_PASSWORD",
	}
	LoginResponse_Code_value = map[string]int32{
		"CODE_ERR_UNSPECIFIED": 0,
		"CODE_SUCCESS":         1,
		"CODE_ERR_ACCOUNT":     2,
		"CODE_ERR_PASSWORD":    3,
	}
)

func (x LoginResponse_Code) Enum() *LoginResponse_Code {
	p := new(LoginResponse_Code)
	*p = x
	return p
}

func (x LoginResponse_Code) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LoginResponse_Code) Descriptor() protoreflect.EnumDescriptor {
	return file_account_interface_v1_account_proto_enumTypes[1].Descriptor()
}

func (LoginResponse_Code) Type() protoreflect.EnumType {
	return &file_account_interface_v1_account_proto_enumTypes[1]
}

func (x LoginResponse_Code) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LoginResponse_Code.Descriptor instead.
func (LoginResponse_Code) EnumDescriptor() ([]byte, []int) {
	return file_account_interface_v1_account_proto_rawDescGZIP(), []int{5, 0}
}

type RefreshResponse_Code int32

const (
	RefreshResponse_CODE_ERR_UNSPECIFIED     RefreshResponse_Code = 0 // Please try again later
	RefreshResponse_CODE_SUCCESS             RefreshResponse_Code = 1 // Success
	RefreshResponse_CODE_ERR_ACCOUNT         RefreshResponse_Code = 2 // Account does not exist
	RefreshResponse_CODE_ERR_SESSION_EXPIRED RefreshResponse_Code = 3 // Session expired
	RefreshResponse_CODE_ERR_SESSION_ILLEGAL RefreshResponse_Code = 4 // Session error
)

// Enum value maps for RefreshResponse_Code.
var (
	RefreshResponse_Code_name = map[int32]string{
		0: "CODE_ERR_UNSPECIFIED",
		1: "CODE_SUCCESS",
		2: "CODE_ERR_ACCOUNT",
		3: "CODE_ERR_SESSION_EXPIRED",
		4: "CODE_ERR_SESSION_ILLEGAL",
	}
	RefreshResponse_Code_value = map[string]int32{
		"CODE_ERR_UNSPECIFIED":     0,
		"CODE_SUCCESS":             1,
		"CODE_ERR_ACCOUNT":         2,
		"CODE_ERR_SESSION_EXPIRED": 3,
		"CODE_ERR_SESSION_ILLEGAL": 4,
	}
)

func (x RefreshResponse_Code) Enum() *RefreshResponse_Code {
	p := new(RefreshResponse_Code)
	*p = x
	return p
}

func (x RefreshResponse_Code) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RefreshResponse_Code) Descriptor() protoreflect.EnumDescriptor {
	return file_account_interface_v1_account_proto_enumTypes[2].Descriptor()
}

func (RefreshResponse_Code) Type() protoreflect.EnumType {
	return &file_account_interface_v1_account_proto_enumTypes[2]
}

func (x RefreshResponse_Code) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RefreshResponse_Code.Descriptor instead.
func (RefreshResponse_Code) EnumDescriptor() ([]byte, []int) {
	return file_account_interface_v1_account_proto_rawDescGZIP(), []int{7, 0}
}

type TokenResponse_Code int32

const (
	TokenResponse_CODE_ERR_UNSPECIFIED     TokenResponse_Code = 0 // Please try again later
	TokenResponse_CODE_SUCCESS             TokenResponse_Code = 1 // Success
	TokenResponse_CODE_ERR_ACCOUNT         TokenResponse_Code = 2 // Account does not exist
	TokenResponse_CODE_ERR_SESSION_EXPIRED TokenResponse_Code = 3 // Session expired
	TokenResponse_CODE_ERR_SESSION_ILLEGAL TokenResponse_Code = 4 // Session error
)

// Enum value maps for TokenResponse_Code.
var (
	TokenResponse_Code_name = map[int32]string{
		0: "CODE_ERR_UNSPECIFIED",
		1: "CODE_SUCCESS",
		2: "CODE_ERR_ACCOUNT",
		3: "CODE_ERR_SESSION_EXPIRED",
		4: "CODE_ERR_SESSION_ILLEGAL",
	}
	TokenResponse_Code_value = map[string]int32{
		"CODE_ERR_UNSPECIFIED":     0,
		"CODE_SUCCESS":             1,
		"CODE_ERR_ACCOUNT":         2,
		"CODE_ERR_SESSION_EXPIRED": 3,
		"CODE_ERR_SESSION_ILLEGAL": 4,
	}
)

func (x TokenResponse_Code) Enum() *TokenResponse_Code {
	p := new(TokenResponse_Code)
	*p = x
	return p
}

func (x TokenResponse_Code) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TokenResponse_Code) Descriptor() protoreflect.EnumDescriptor {
	return file_account_interface_v1_account_proto_enumTypes[3].Descriptor()
}

func (TokenResponse_Code) Type() protoreflect.EnumType {
	return &file_account_interface_v1_account_proto_enumTypes[3]
}

func (x TokenResponse_Code) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TokenResponse_Code.Descriptor instead.
func (TokenResponse_Code) EnumDescriptor() ([]byte, []int) {
	return file_account_interface_v1_account_proto_rawDescGZIP(), []int{9, 0}
}

type AppleLoginResponse_Code int32

const (
	AppleLoginResponse_CODE_ERR_UNSPECIFIED AppleLoginResponse_Code = 0 // Please try again later
	AppleLoginResponse_CODE_SUCCESS         AppleLoginResponse_Code = 1 // Success
	AppleLoginResponse_CODE_ERR_TOKEN       AppleLoginResponse_Code = 2 // Token error
	AppleLoginResponse_CODE_ERR_APPLE_ID    AppleLoginResponse_Code = 3 // Apple ID error
)

// Enum value maps for AppleLoginResponse_Code.
var (
	AppleLoginResponse_Code_name = map[int32]string{
		0: "CODE_ERR_UNSPECIFIED",
		1: "CODE_SUCCESS",
		2: "CODE_ERR_TOKEN",
		3: "CODE_ERR_APPLE_ID",
	}
	AppleLoginResponse_Code_value = map[string]int32{
		"CODE_ERR_UNSPECIFIED": 0,
		"CODE_SUCCESS":         1,
		"CODE_ERR_TOKEN":       2,
		"CODE_ERR_APPLE_ID":    3,
	}
)

func (x AppleLoginResponse_Code) Enum() *AppleLoginResponse_Code {
	p := new(AppleLoginResponse_Code)
	*p = x
	return p
}

func (x AppleLoginResponse_Code) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AppleLoginResponse_Code) Descriptor() protoreflect.EnumDescriptor {
	return file_account_interface_v1_account_proto_enumTypes[4].Descriptor()
}

func (AppleLoginResponse_Code) Type() protoreflect.EnumType {
	return &file_account_interface_v1_account_proto_enumTypes[4]
}

func (x AppleLoginResponse_Code) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AppleLoginResponse_Code.Descriptor instead.
func (AppleLoginResponse_Code) EnumDescriptor() ([]byte, []int) {
	return file_account_interface_v1_account_proto_rawDescGZIP(), []int{12, 0}
}

type AppleLoginCallbackResponse_Code int32

const (
	AppleLoginCallbackResponse_CODE_ERR_UNSPECIFIED AppleLoginCallbackResponse_Code = 0 // Other errors
	AppleLoginCallbackResponse_CODE_ERR_TOKEN       AppleLoginCallbackResponse_Code = 2 // Token verification error
	AppleLoginCallbackResponse_CODE_ERR_CODE        AppleLoginCallbackResponse_Code = 3 // Code verification error
	AppleLoginCallbackResponse_CODE_ERR_PARAM       AppleLoginCallbackResponse_Code = 4 // Apple parameter error
	AppleLoginCallbackResponse_CODE_ERR_APPLE       AppleLoginCallbackResponse_Code = 6 // Apple callback error
)

// Enum value maps for AppleLoginCallbackResponse_Code.
var (
	AppleLoginCallbackResponse_Code_name = map[int32]string{
		0: "CODE_ERR_UNSPECIFIED",
		2: "CODE_ERR_TOKEN",
		3: "CODE_ERR_CODE",
		4: "CODE_ERR_PARAM",
		6: "CODE_ERR_APPLE",
	}
	AppleLoginCallbackResponse_Code_value = map[string]int32{
		"CODE_ERR_UNSPECIFIED": 0,
		"CODE_ERR_TOKEN":       2,
		"CODE_ERR_CODE":        3,
		"CODE_ERR_PARAM":       4,
		"CODE_ERR_APPLE":       6,
	}
)

func (x AppleLoginCallbackResponse_Code) Enum() *AppleLoginCallbackResponse_Code {
	p := new(AppleLoginCallbackResponse_Code)
	*p = x
	return p
}

func (x AppleLoginCallbackResponse_Code) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AppleLoginCallbackResponse_Code) Descriptor() protoreflect.EnumDescriptor {
	return file_account_interface_v1_account_proto_enumTypes[5].Descriptor()
}

func (AppleLoginCallbackResponse_Code) Type() protoreflect.EnumType {
	return &file_account_interface_v1_account_proto_enumTypes[5]
}

func (x AppleLoginCallbackResponse_Code) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AppleLoginCallbackResponse_Code.Descriptor instead.
func (AppleLoginCallbackResponse_Code) EnumDescriptor() ([]byte, []int) {
	return file_account_interface_v1_account_proto_rawDescGZIP(), []int{14, 0}
}

type GoogleLoginResponse_Code int32

const (
	GoogleLoginResponse_CODE_ERR_UNSPECIFIED GoogleLoginResponse_Code = 0 // Please try again later
	GoogleLoginResponse_CODE_SUCCESS         GoogleLoginResponse_Code = 1 // Success
	GoogleLoginResponse_CODE_ERR_TOKEN       GoogleLoginResponse_Code = 2 // Token error
)

// Enum value maps for GoogleLoginResponse_Code.
var (
	GoogleLoginResponse_Code_name = map[int32]string{
		0: "CODE_ERR_UNSPECIFIED",
		1: "CODE_SUCCESS",
		2: "CODE_ERR_TOKEN",
	}
	GoogleLoginResponse_Code_value = map[string]int32{
		"CODE_ERR_UNSPECIFIED": 0,
		"CODE_SUCCESS":         1,
		"CODE_ERR_TOKEN":       2,
	}
)

func (x GoogleLoginResponse_Code) Enum() *GoogleLoginResponse_Code {
	p := new(GoogleLoginResponse_Code)
	*p = x
	return p
}

func (x GoogleLoginResponse_Code) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GoogleLoginResponse_Code) Descriptor() protoreflect.EnumDescriptor {
	return file_account_interface_v1_account_proto_enumTypes[6].Descriptor()
}

func (GoogleLoginResponse_Code) Type() protoreflect.EnumType {
	return &file_account_interface_v1_account_proto_enumTypes[6]
}

func (x GoogleLoginResponse_Code) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GoogleLoginResponse_Code.Descriptor instead.
func (GoogleLoginResponse_Code) EnumDescriptor() ([]byte, []int) {
	return file_account_interface_v1_account_proto_rawDescGZIP(), []int{16, 0}
}

type FacebookLoginResponse_Code int32

const (
	FacebookLoginResponse_CODE_ERR_UNSPECIFIED FacebookLoginResponse_Code = 0 // Please try again later
	FacebookLoginResponse_CODE_SUCCESS         FacebookLoginResponse_Code = 1 // Success
	FacebookLoginResponse_CODE_ERR_TOKEN       FacebookLoginResponse_Code = 2 // Token error
)

// Enum value maps for FacebookLoginResponse_Code.
var (
	FacebookLoginResponse_Code_name = map[int32]string{
		0: "CODE_ERR_UNSPECIFIED",
		1: "CODE_SUCCESS",
		2: "CODE_ERR_TOKEN",
	}
	FacebookLoginResponse_Code_value = map[string]int32{
		"CODE_ERR_UNSPECIFIED": 0,
		"CODE_SUCCESS":         1,
		"CODE_ERR_TOKEN":       2,
	}
)

func (x FacebookLoginResponse_Code) Enum() *FacebookLoginResponse_Code {
	p := new(FacebookLoginResponse_Code)
	*p = x
	return p
}

func (x FacebookLoginResponse_Code) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FacebookLoginResponse_Code) Descriptor() protoreflect.EnumDescriptor {
	return file_account_interface_v1_account_proto_enumTypes[7].Descriptor()
}

func (FacebookLoginResponse_Code) Type() protoreflect.EnumType {
	return &file_account_interface_v1_account_proto_enumTypes[7]
}

func (x FacebookLoginResponse_Code) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FacebookLoginResponse_Code.Descriptor instead.
func (FacebookLoginResponse_Code) EnumDescriptor() ([]byte, []int) {
	return file_account_interface_v1_account_proto_rawDescGZIP(), []int{18, 0}
}

type DevPingRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DevPingRequest) Reset() {
	*x = DevPingRequest{}
	mi := &file_account_interface_v1_account_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DevPingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DevPingRequest) ProtoMessage() {}

func (x *DevPingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_account_interface_v1_account_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DevPingRequest.ProtoReflect.Descriptor instead.
func (*DevPingRequest) Descriptor() ([]byte, []int) {
	return file_account_interface_v1_account_proto_rawDescGZIP(), []int{0}
}

func (x *DevPingRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type DevPingResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Time          string                 `protobuf:"bytes,2,opt,name=time,proto3" json:"time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DevPingResponse) Reset() {
	*x = DevPingResponse{}
	mi := &file_account_interface_v1_account_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DevPingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DevPingResponse) ProtoMessage() {}

func (x *DevPingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_account_interface_v1_account_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DevPingResponse.ProtoReflect.Descriptor instead.
func (*DevPingResponse) Descriptor() ([]byte, []int) {
	return file_account_interface_v1_account_proto_rawDescGZIP(), []int{1}
}

func (x *DevPingResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DevPingResponse) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

type RegisterRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`         // Account name, player fills in
	Password      string                 `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"` // Password
	Color         string                 `protobuf:"bytes,3,opt,name=color,proto3" json:"color,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterRequest) Reset() {
	*x = RegisterRequest{}
	mi := &file_account_interface_v1_account_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterRequest) ProtoMessage() {}

func (x *RegisterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_account_interface_v1_account_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterRequest.ProtoReflect.Descriptor instead.
func (*RegisterRequest) Descriptor() ([]byte, []int) {
	return file_account_interface_v1_account_proto_rawDescGZIP(), []int{2}
}

func (x *RegisterRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RegisterRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *RegisterRequest) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

type RegisterResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Code           RegisterResponse_Code  `protobuf:"varint,1,opt,name=code,proto3,enum=account.interface.v1.RegisterResponse_Code" json:"code,omitempty"` // Response code
	AccountId      string                 `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`                       // Account ID
	Session        string                 `protobuf:"bytes,3,opt,name=session,proto3" json:"session,omitempty"`                                            // Account login session
	SessionTimeout int64                  `protobuf:"varint,4,opt,name=session_timeout,json=sessionTimeout,proto3" json:"session_timeout,omitempty"`       // Session timeout (unix timestamp)
	Token          string                 `protobuf:"bytes,5,opt,name=token,proto3" json:"token,omitempty"`                                                // TCP handshake token
	TokenTimeout   int64                  `protobuf:"varint,6,opt,name=token_timeout,json=tokenTimeout,proto3" json:"token_timeout,omitempty"`             // Token timeout
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *RegisterResponse) Reset() {
	*x = RegisterResponse{}
	mi := &file_account_interface_v1_account_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterResponse) ProtoMessage() {}

func (x *RegisterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_account_interface_v1_account_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterResponse.ProtoReflect.Descriptor instead.
func (*RegisterResponse) Descriptor() ([]byte, []int) {
	return file_account_interface_v1_account_proto_rawDescGZIP(), []int{3}
}

func (x *RegisterResponse) GetCode() RegisterResponse_Code {
	if x != nil {
		return x.Code
	}
	return RegisterResponse_CODE_ERR_UNSPECIFIED
}

func (x *RegisterResponse) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *RegisterResponse) GetSession() string {
	if x != nil {
		return x.Session
	}
	return ""
}

func (x *RegisterResponse) GetSessionTimeout() int64 {
	if x != nil {
		return x.SessionTimeout
	}
	return 0
}

func (x *RegisterResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *RegisterResponse) GetTokenTimeout() int64 {
	if x != nil {
		return x.TokenTimeout
	}
	return 0
}

type LoginRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"` // Account name
	Password      string                 `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	Color         string                 `protobuf:"bytes,3,opt,name=color,proto3" json:"color,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LoginRequest) Reset() {
	*x = LoginRequest{}
	mi := &file_account_interface_v1_account_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginRequest) ProtoMessage() {}

func (x *LoginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_account_interface_v1_account_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginRequest.ProtoReflect.Descriptor instead.
func (*LoginRequest) Descriptor() ([]byte, []int) {
	return file_account_interface_v1_account_proto_rawDescGZIP(), []int{4}
}

func (x *LoginRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *LoginRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *LoginRequest) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

type LoginResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Code           LoginResponse_Code     `protobuf:"varint,1,opt,name=code,proto3,enum=account.interface.v1.LoginResponse_Code" json:"code,omitempty"` // Response code
	AccountId      string                 `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`                    // Account ID. The unique ID of the account generated by the server
	Session        string                 `protobuf:"bytes,3,opt,name=session,proto3" json:"session,omitempty"`                                         // Account login session
	SessionTimeout int64                  `protobuf:"varint,4,opt,name=session_timeout,json=sessionTimeout,proto3" json:"session_timeout,omitempty"`    // Session timeout (unix timestamp)
	Token          string                 `protobuf:"bytes,5,opt,name=token,proto3" json:"token,omitempty"`                                             // TCP handshake token
	TokenTimeout   int64                  `protobuf:"varint,6,opt,name=token_timeout,json=tokenTimeout,proto3" json:"token_timeout,omitempty"`          // Token timeout (unix timestamp)
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *LoginResponse) Reset() {
	*x = LoginResponse{}
	mi := &file_account_interface_v1_account_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginResponse) ProtoMessage() {}

func (x *LoginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_account_interface_v1_account_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginResponse.ProtoReflect.Descriptor instead.
func (*LoginResponse) Descriptor() ([]byte, []int) {
	return file_account_interface_v1_account_proto_rawDescGZIP(), []int{5}
}

func (x *LoginResponse) GetCode() LoginResponse_Code {
	if x != nil {
		return x.Code
	}
	return LoginResponse_CODE_ERR_UNSPECIFIED
}

func (x *LoginResponse) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *LoginResponse) GetSession() string {
	if x != nil {
		return x.Session
	}
	return ""
}

func (x *LoginResponse) GetSessionTimeout() int64 {
	if x != nil {
		return x.SessionTimeout
	}
	return 0
}

func (x *LoginResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *LoginResponse) GetTokenTimeout() int64 {
	if x != nil {
		return x.TokenTimeout
	}
	return 0
}

type RefreshRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AccountId     string                 `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"` // Account ID
	Session       string                 `protobuf:"bytes,2,opt,name=session,proto3" json:"session,omitempty"`                      // Existing session
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RefreshRequest) Reset() {
	*x = RefreshRequest{}
	mi := &file_account_interface_v1_account_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RefreshRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshRequest) ProtoMessage() {}

func (x *RefreshRequest) ProtoReflect() protoreflect.Message {
	mi := &file_account_interface_v1_account_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshRequest.ProtoReflect.Descriptor instead.
func (*RefreshRequest) Descriptor() ([]byte, []int) {
	return file_account_interface_v1_account_proto_rawDescGZIP(), []int{6}
}

func (x *RefreshRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *RefreshRequest) GetSession() string {
	if x != nil {
		return x.Session
	}
	return ""
}

type RefreshResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Code           RefreshResponse_Code   `protobuf:"varint,1,opt,name=code,proto3,enum=account.interface.v1.RefreshResponse_Code" json:"code,omitempty"` // Response code
	Session        string                 `protobuf:"bytes,2,opt,name=session,proto3" json:"session,omitempty"`                                           // New session
	SessionTimeout int64                  `protobuf:"varint,3,opt,name=session_timeout,json=sessionTimeout,proto3" json:"session_timeout,omitempty"`      // New session timeout (unix timestamp)
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *RefreshResponse) Reset() {
	*x = RefreshResponse{}
	mi := &file_account_interface_v1_account_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RefreshResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshResponse) ProtoMessage() {}

func (x *RefreshResponse) ProtoReflect() protoreflect.Message {
	mi := &file_account_interface_v1_account_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshResponse.ProtoReflect.Descriptor instead.
func (*RefreshResponse) Descriptor() ([]byte, []int) {
	return file_account_interface_v1_account_proto_rawDescGZIP(), []int{7}
}

func (x *RefreshResponse) GetCode() RefreshResponse_Code {
	if x != nil {
		return x.Code
	}
	return RefreshResponse_CODE_ERR_UNSPECIFIED
}

func (x *RefreshResponse) GetSession() string {
	if x != nil {
		return x.Session
	}
	return ""
}

func (x *RefreshResponse) GetSessionTimeout() int64 {
	if x != nil {
		return x.SessionTimeout
	}
	return 0
}

type TokenRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AccountId     string                 `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"` // Account ID
	Session       string                 `protobuf:"bytes,2,opt,name=session,proto3" json:"session,omitempty"`                      // Existing session
	Color         string                 `protobuf:"bytes,3,opt,name=color,proto3" json:"color,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TokenRequest) Reset() {
	*x = TokenRequest{}
	mi := &file_account_interface_v1_account_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenRequest) ProtoMessage() {}

func (x *TokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_account_interface_v1_account_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenRequest.ProtoReflect.Descriptor instead.
func (*TokenRequest) Descriptor() ([]byte, []int) {
	return file_account_interface_v1_account_proto_rawDescGZIP(), []int{8}
}

func (x *TokenRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *TokenRequest) GetSession() string {
	if x != nil {
		return x.Session
	}
	return ""
}

func (x *TokenRequest) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

type TokenResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Code           TokenResponse_Code     `protobuf:"varint,1,opt,name=code,proto3,enum=account.interface.v1.TokenResponse_Code" json:"code,omitempty"` // Response code
	Token          string                 `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`                                             // TCP handshake token
	TokenTimeout   int64                  `protobuf:"varint,3,opt,name=token_timeout,json=tokenTimeout,proto3" json:"token_timeout,omitempty"`          // Token timeout (unix timestamp)
	Session        string                 `protobuf:"bytes,4,opt,name=session,proto3" json:"session,omitempty"`                                         // New session
	SessionTimeout int64                  `protobuf:"varint,5,opt,name=session_timeout,json=sessionTimeout,proto3" json:"session_timeout,omitempty"`    // New session timeout (unix timestamp)
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *TokenResponse) Reset() {
	*x = TokenResponse{}
	mi := &file_account_interface_v1_account_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenResponse) ProtoMessage() {}

func (x *TokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_account_interface_v1_account_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenResponse.ProtoReflect.Descriptor instead.
func (*TokenResponse) Descriptor() ([]byte, []int) {
	return file_account_interface_v1_account_proto_rawDescGZIP(), []int{9}
}

func (x *TokenResponse) GetCode() TokenResponse_Code {
	if x != nil {
		return x.Code
	}
	return TokenResponse_CODE_ERR_UNSPECIFIED
}

func (x *TokenResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *TokenResponse) GetTokenTimeout() int64 {
	if x != nil {
		return x.TokenTimeout
	}
	return 0
}

func (x *TokenResponse) GetSession() string {
	if x != nil {
		return x.Session
	}
	return ""
}

func (x *TokenResponse) GetSessionTimeout() int64 {
	if x != nil {
		return x.SessionTimeout
	}
	return 0
}

type Session struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AccountId     int64                  `protobuf:"varint,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Timeout       int64                  `protobuf:"varint,2,opt,name=timeout,proto3" json:"timeout,omitempty"` // timeout (unix timestamp)
	Key           string                 `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Session) Reset() {
	*x = Session{}
	mi := &file_account_interface_v1_account_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Session) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Session) ProtoMessage() {}

func (x *Session) ProtoReflect() protoreflect.Message {
	mi := &file_account_interface_v1_account_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Session.ProtoReflect.Descriptor instead.
func (*Session) Descriptor() ([]byte, []int) {
	return file_account_interface_v1_account_proto_rawDescGZIP(), []int{10}
}

func (x *Session) GetAccountId() int64 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *Session) GetTimeout() int64 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

func (x *Session) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type AppleLoginRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Token         string                 `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"` // Apple token
	AppleId       string                 `protobuf:"bytes,2,opt,name=apple_id,json=appleId,proto3" json:"apple_id,omitempty"`
	Code          string                 `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
	Color         string                 `protobuf:"bytes,4,opt,name=color,proto3" json:"color,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AppleLoginRequest) Reset() {
	*x = AppleLoginRequest{}
	mi := &file_account_interface_v1_account_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppleLoginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppleLoginRequest) ProtoMessage() {}

func (x *AppleLoginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_account_interface_v1_account_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppleLoginRequest.ProtoReflect.Descriptor instead.
func (*AppleLoginRequest) Descriptor() ([]byte, []int) {
	return file_account_interface_v1_account_proto_rawDescGZIP(), []int{11}
}

func (x *AppleLoginRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *AppleLoginRequest) GetAppleId() string {
	if x != nil {
		return x.AppleId
	}
	return ""
}

func (x *AppleLoginRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *AppleLoginRequest) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

type AppleLoginResponse struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Code          AppleLoginResponse_Code `protobuf:"varint,1,opt,name=code,proto3,enum=account.interface.v1.AppleLoginResponse_Code" json:"code,omitempty"` // Response code
	Info          *LoginInfo              `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`                                                    // Login information
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AppleLoginResponse) Reset() {
	*x = AppleLoginResponse{}
	mi := &file_account_interface_v1_account_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppleLoginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppleLoginResponse) ProtoMessage() {}

func (x *AppleLoginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_account_interface_v1_account_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppleLoginResponse.ProtoReflect.Descriptor instead.
func (*AppleLoginResponse) Descriptor() ([]byte, []int) {
	return file_account_interface_v1_account_proto_rawDescGZIP(), []int{12}
}

func (x *AppleLoginResponse) GetCode() AppleLoginResponse_Code {
	if x != nil {
		return x.Code
	}
	return AppleLoginResponse_CODE_ERR_UNSPECIFIED
}

func (x *AppleLoginResponse) GetInfo() *LoginInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type AppleLoginCallbackRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          string                 `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	IdToken       string                 `protobuf:"bytes,2,opt,name=id_token,json=idToken,proto3" json:"id_token,omitempty"`
	State         string                 `protobuf:"bytes,3,opt,name=state,proto3" json:"state,omitempty"`
	User          string                 `protobuf:"bytes,4,opt,name=user,proto3" json:"user,omitempty"`
	Error         string                 `protobuf:"bytes,5,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AppleLoginCallbackRequest) Reset() {
	*x = AppleLoginCallbackRequest{}
	mi := &file_account_interface_v1_account_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppleLoginCallbackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppleLoginCallbackRequest) ProtoMessage() {}

func (x *AppleLoginCallbackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_account_interface_v1_account_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppleLoginCallbackRequest.ProtoReflect.Descriptor instead.
func (*AppleLoginCallbackRequest) Descriptor() ([]byte, []int) {
	return file_account_interface_v1_account_proto_rawDescGZIP(), []int{13}
}

func (x *AppleLoginCallbackRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *AppleLoginCallbackRequest) GetIdToken() string {
	if x != nil {
		return x.IdToken
	}
	return ""
}

func (x *AppleLoginCallbackRequest) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *AppleLoginCallbackRequest) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *AppleLoginCallbackRequest) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type AppleLoginCallbackResponse struct {
	state         protoimpl.MessageState          `protogen:"open.v1"`
	Code          AppleLoginCallbackResponse_Code `protobuf:"varint,1,opt,name=code,proto3,enum=account.interface.v1.AppleLoginCallbackResponse_Code" json:"code,omitempty"` // Response code
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AppleLoginCallbackResponse) Reset() {
	*x = AppleLoginCallbackResponse{}
	mi := &file_account_interface_v1_account_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppleLoginCallbackResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppleLoginCallbackResponse) ProtoMessage() {}

func (x *AppleLoginCallbackResponse) ProtoReflect() protoreflect.Message {
	mi := &file_account_interface_v1_account_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppleLoginCallbackResponse.ProtoReflect.Descriptor instead.
func (*AppleLoginCallbackResponse) Descriptor() ([]byte, []int) {
	return file_account_interface_v1_account_proto_rawDescGZIP(), []int{14}
}

func (x *AppleLoginCallbackResponse) GetCode() AppleLoginCallbackResponse_Code {
	if x != nil {
		return x.Code
	}
	return AppleLoginCallbackResponse_CODE_ERR_UNSPECIFIED
}

type GoogleLoginRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Token         string                 `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"` // Google token
	Color         string                 `protobuf:"bytes,2,opt,name=color,proto3" json:"color,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GoogleLoginRequest) Reset() {
	*x = GoogleLoginRequest{}
	mi := &file_account_interface_v1_account_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GoogleLoginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleLoginRequest) ProtoMessage() {}

func (x *GoogleLoginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_account_interface_v1_account_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleLoginRequest.ProtoReflect.Descriptor instead.
func (*GoogleLoginRequest) Descriptor() ([]byte, []int) {
	return file_account_interface_v1_account_proto_rawDescGZIP(), []int{15}
}

func (x *GoogleLoginRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *GoogleLoginRequest) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

type GoogleLoginResponse struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Code          GoogleLoginResponse_Code `protobuf:"varint,1,opt,name=code,proto3,enum=account.interface.v1.GoogleLoginResponse_Code" json:"code,omitempty"` // Response code
	Info          *LoginInfo               `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`                                                     // Login information
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GoogleLoginResponse) Reset() {
	*x = GoogleLoginResponse{}
	mi := &file_account_interface_v1_account_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GoogleLoginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleLoginResponse) ProtoMessage() {}

func (x *GoogleLoginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_account_interface_v1_account_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleLoginResponse.ProtoReflect.Descriptor instead.
func (*GoogleLoginResponse) Descriptor() ([]byte, []int) {
	return file_account_interface_v1_account_proto_rawDescGZIP(), []int{16}
}

func (x *GoogleLoginResponse) GetCode() GoogleLoginResponse_Code {
	if x != nil {
		return x.Code
	}
	return GoogleLoginResponse_CODE_ERR_UNSPECIFIED
}

func (x *GoogleLoginResponse) GetInfo() *LoginInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type FacebookLoginRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Token         string                 `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"` // Facebook access_token
	Color         string                 `protobuf:"bytes,2,opt,name=color,proto3" json:"color,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FacebookLoginRequest) Reset() {
	*x = FacebookLoginRequest{}
	mi := &file_account_interface_v1_account_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FacebookLoginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FacebookLoginRequest) ProtoMessage() {}

func (x *FacebookLoginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_account_interface_v1_account_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FacebookLoginRequest.ProtoReflect.Descriptor instead.
func (*FacebookLoginRequest) Descriptor() ([]byte, []int) {
	return file_account_interface_v1_account_proto_rawDescGZIP(), []int{17}
}

func (x *FacebookLoginRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *FacebookLoginRequest) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

type FacebookLoginResponse struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	Code          FacebookLoginResponse_Code `protobuf:"varint,1,opt,name=code,proto3,enum=account.interface.v1.FacebookLoginResponse_Code" json:"code,omitempty"` // Response code
	Info          *LoginInfo                 `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`                                                       // Login information
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FacebookLoginResponse) Reset() {
	*x = FacebookLoginResponse{}
	mi := &file_account_interface_v1_account_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FacebookLoginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FacebookLoginResponse) ProtoMessage() {}

func (x *FacebookLoginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_account_interface_v1_account_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FacebookLoginResponse.ProtoReflect.Descriptor instead.
func (*FacebookLoginResponse) Descriptor() ([]byte, []int) {
	return file_account_interface_v1_account_proto_rawDescGZIP(), []int{18}
}

func (x *FacebookLoginResponse) GetCode() FacebookLoginResponse_Code {
	if x != nil {
		return x.Code
	}
	return FacebookLoginResponse_CODE_ERR_UNSPECIFIED
}

func (x *FacebookLoginResponse) GetInfo() *LoginInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type AppleId struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AppleId       string                 `protobuf:"bytes,1,opt,name=apple_id,json=appleId,proto3" json:"apple_id,omitempty"`
	State         string                 `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
	T             int64                  `protobuf:"varint,3,opt,name=t,proto3" json:"t,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AppleId) Reset() {
	*x = AppleId{}
	mi := &file_account_interface_v1_account_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppleId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppleId) ProtoMessage() {}

func (x *AppleId) ProtoReflect() protoreflect.Message {
	mi := &file_account_interface_v1_account_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppleId.ProtoReflect.Descriptor instead.
func (*AppleId) Descriptor() ([]byte, []int) {
	return file_account_interface_v1_account_proto_rawDescGZIP(), []int{19}
}

func (x *AppleId) GetAppleId() string {
	if x != nil {
		return x.AppleId
	}
	return ""
}

func (x *AppleId) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *AppleId) GetT() int64 {
	if x != nil {
		return x.T
	}
	return 0
}

type LoginInfo struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	AccountId      string                 `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`                 // Account ID. The unique ID of the account generated by the server
	Register       bool                   `protobuf:"varint,2,opt,name=register,proto3" json:"register,omitempty"`                                   // Whether the account is registered
	Token          string                 `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`                                          // TCP handshake token
	TokenTimeout   int64                  `protobuf:"varint,4,opt,name=token_timeout,json=tokenTimeout,proto3" json:"token_timeout,omitempty"`       // Token timeout (unix timestamp)
	Session        string                 `protobuf:"bytes,5,opt,name=session,proto3" json:"session,omitempty"`                                      // New session
	SessionTimeout int64                  `protobuf:"varint,6,opt,name=session_timeout,json=sessionTimeout,proto3" json:"session_timeout,omitempty"` // New session timeout (unix timestamp)
	State          string                 `protobuf:"bytes,7,opt,name=state,proto3" json:"state,omitempty"`                                          // State random string for replay attack prevention
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *LoginInfo) Reset() {
	*x = LoginInfo{}
	mi := &file_account_interface_v1_account_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoginInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginInfo) ProtoMessage() {}

func (x *LoginInfo) ProtoReflect() protoreflect.Message {
	mi := &file_account_interface_v1_account_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginInfo.ProtoReflect.Descriptor instead.
func (*LoginInfo) Descriptor() ([]byte, []int) {
	return file_account_interface_v1_account_proto_rawDescGZIP(), []int{20}
}

func (x *LoginInfo) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *LoginInfo) GetRegister() bool {
	if x != nil {
		return x.Register
	}
	return false
}

func (x *LoginInfo) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *LoginInfo) GetTokenTimeout() int64 {
	if x != nil {
		return x.TokenTimeout
	}
	return 0
}

func (x *LoginInfo) GetSession() string {
	if x != nil {
		return x.Session
	}
	return ""
}

func (x *LoginInfo) GetSessionTimeout() int64 {
	if x != nil {
		return x.SessionTimeout
	}
	return 0
}

func (x *LoginInfo) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

type AppleLoginCallbackRequest_User struct {
	state         protoimpl.MessageState               `protogen:"open.v1"`
	Email         string                               `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Name          *AppleLoginCallbackRequest_User_Name `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AppleLoginCallbackRequest_User) Reset() {
	*x = AppleLoginCallbackRequest_User{}
	mi := &file_account_interface_v1_account_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppleLoginCallbackRequest_User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppleLoginCallbackRequest_User) ProtoMessage() {}

func (x *AppleLoginCallbackRequest_User) ProtoReflect() protoreflect.Message {
	mi := &file_account_interface_v1_account_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppleLoginCallbackRequest_User.ProtoReflect.Descriptor instead.
func (*AppleLoginCallbackRequest_User) Descriptor() ([]byte, []int) {
	return file_account_interface_v1_account_proto_rawDescGZIP(), []int{13, 0}
}

func (x *AppleLoginCallbackRequest_User) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *AppleLoginCallbackRequest_User) GetName() *AppleLoginCallbackRequest_User_Name {
	if x != nil {
		return x.Name
	}
	return nil
}

type AppleLoginCallbackRequest_User_Name struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FirstName     string                 `protobuf:"bytes,1,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName      string                 `protobuf:"bytes,2,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AppleLoginCallbackRequest_User_Name) Reset() {
	*x = AppleLoginCallbackRequest_User_Name{}
	mi := &file_account_interface_v1_account_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppleLoginCallbackRequest_User_Name) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppleLoginCallbackRequest_User_Name) ProtoMessage() {}

func (x *AppleLoginCallbackRequest_User_Name) ProtoReflect() protoreflect.Message {
	mi := &file_account_interface_v1_account_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppleLoginCallbackRequest_User_Name.ProtoReflect.Descriptor instead.
func (*AppleLoginCallbackRequest_User_Name) Descriptor() ([]byte, []int) {
	return file_account_interface_v1_account_proto_rawDescGZIP(), []int{13, 0, 0}
}

func (x *AppleLoginCallbackRequest_User_Name) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *AppleLoginCallbackRequest_User_Name) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

var File_account_interface_v1_account_proto protoreflect.FileDescriptor

var file_account_interface_v1_account_proto_rawDesc = string([]byte{
	0x0a, 0x22, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66,
	0x61, 0x63, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x14, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x2a, 0x0a, 0x0e, 0x44, 0x65, 0x76, 0x50,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0x3f, 0x0a, 0x0f, 0x44, 0x65, 0x76, 0x50, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x57, 0x0a, 0x0f, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x22, 0xdf,
	0x02, 0x0a, 0x10, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x2b, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a,
	0x0f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54,
	0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x23, 0x0a, 0x0d,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0c, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75,
	0x74, 0x22, 0x6d, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x14, 0x43, 0x4f, 0x44,
	0x45, 0x5f, 0x45, 0x52, 0x52, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x53, 0x55, 0x43, 0x43,
	0x45, 0x53, 0x53, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x45, 0x52,
	0x52, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x44, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x43,
	0x4f, 0x44, 0x45, 0x5f, 0x45, 0x52, 0x52, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x10, 0x03, 0x12, 0x10,
	0x0a, 0x0c, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x45, 0x52, 0x52, 0x5f, 0x50, 0x57, 0x44, 0x10, 0x04,
	0x22, 0x54, 0x0a, 0x0c, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x22, 0xcb, 0x02, 0x0a, 0x0d, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x43, 0x6f, 0x64, 0x65,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x27, 0x0a, 0x0f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f,
	0x75, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x23,
	0x0a, 0x0d, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x69, 0x6d, 0x65,
	0x6f, 0x75, 0x74, 0x22, 0x5f, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x14, 0x43,
	0x4f, 0x44, 0x45, 0x5f, 0x45, 0x52, 0x52, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46,
	0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x53, 0x55,
	0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x43, 0x4f, 0x44, 0x45, 0x5f,
	0x45, 0x52, 0x52, 0x5f, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x10, 0x02, 0x12, 0x15, 0x0a,
	0x11, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x45, 0x52, 0x52, 0x5f, 0x50, 0x41, 0x53, 0x53, 0x57, 0x4f,
	0x52, 0x44, 0x10, 0x03, 0x22, 0x49, 0x0a, 0x0e, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22,
	0x9b, 0x02, 0x0a, 0x0f, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x2a, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a,
	0x0f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54,
	0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x22, 0x84, 0x01, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x18, 0x0a, 0x14, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x45, 0x52, 0x52, 0x5f, 0x55, 0x4e, 0x53, 0x50,
	0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x43, 0x4f, 0x44,
	0x45, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x43,
	0x4f, 0x44, 0x45, 0x5f, 0x45, 0x52, 0x52, 0x5f, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x10,
	0x02, 0x12, 0x1c, 0x0a, 0x18, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x45, 0x52, 0x52, 0x5f, 0x53, 0x45,
	0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x45, 0x58, 0x50, 0x49, 0x52, 0x45, 0x44, 0x10, 0x03, 0x12,
	0x1c, 0x0a, 0x18, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x45, 0x52, 0x52, 0x5f, 0x53, 0x45, 0x53, 0x53,
	0x49, 0x4f, 0x4e, 0x5f, 0x49, 0x4c, 0x4c, 0x45, 0x47, 0x41, 0x4c, 0x10, 0x04, 0x22, 0x5d, 0x0a,
	0x0c, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x22, 0xd2, 0x02, 0x0a,
	0x0d, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x6f, 0x75, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x6f, 0x75, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x22, 0x84, 0x01, 0x0a, 0x04, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x14, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x45, 0x52, 0x52, 0x5f,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x10, 0x0a,
	0x0c, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x01, 0x12,
	0x14, 0x0a, 0x10, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x45, 0x52, 0x52, 0x5f, 0x41, 0x43, 0x43, 0x4f,
	0x55, 0x4e, 0x54, 0x10, 0x02, 0x12, 0x1c, 0x0a, 0x18, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x45, 0x52,
	0x52, 0x5f, 0x53, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x45, 0x58, 0x50, 0x49, 0x52, 0x45,
	0x44, 0x10, 0x03, 0x12, 0x1c, 0x0a, 0x18, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x45, 0x52, 0x52, 0x5f,
	0x53, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x49, 0x4c, 0x4c, 0x45, 0x47, 0x41, 0x4c, 0x10,
	0x04, 0x22, 0x54, 0x0a, 0x07, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x74,
	0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x74, 0x69,
	0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x6e, 0x0a, 0x11, 0x41, 0x70, 0x70, 0x6c, 0x65,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x70, 0x70, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x70, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x22, 0xeb, 0x01, 0x0a, 0x12, 0x41, 0x70, 0x70, 0x6c,
	0x65, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2d, 0x2e, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x65, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x33, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66,
	0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x5d, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18,
	0x0a, 0x14, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x45, 0x52, 0x52, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x43, 0x4f, 0x44, 0x45,
	0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x43, 0x4f,
	0x44, 0x45, 0x5f, 0x45, 0x52, 0x52, 0x5f, 0x54, 0x4f, 0x4b, 0x45, 0x4e, 0x10, 0x02, 0x12, 0x15,
	0x0a, 0x11, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x45, 0x52, 0x52, 0x5f, 0x41, 0x50, 0x50, 0x4c, 0x45,
	0x5f, 0x49, 0x44, 0x10, 0x03, 0x22, 0xbc, 0x02, 0x0a, 0x19, 0x41, 0x70, 0x70, 0x6c, 0x65, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x64, 0x5f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x64, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x1a, 0xaf, 0x01, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x12, 0x4d, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x39, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66,
	0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x65, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x1a, 0x42, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x72, 0x73,
	0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69,
	0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0xd8, 0x01, 0x0a, 0x1a, 0x41, 0x70, 0x70, 0x6c, 0x65, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x35, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x65, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x6f,
	0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x14, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x45,
	0x52, 0x52, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x12, 0x0a, 0x0e, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x45, 0x52, 0x52, 0x5f, 0x54, 0x4f, 0x4b,
	0x45, 0x4e, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x45, 0x52, 0x52,
	0x5f, 0x43, 0x4f, 0x44, 0x45, 0x10, 0x03, 0x12, 0x12, 0x0a, 0x0e, 0x43, 0x4f, 0x44, 0x45, 0x5f,
	0x45, 0x52, 0x52, 0x5f, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x10, 0x04, 0x12, 0x12, 0x0a, 0x0e, 0x43,
	0x4f, 0x44, 0x45, 0x5f, 0x45, 0x52, 0x52, 0x5f, 0x41, 0x50, 0x50, 0x4c, 0x45, 0x10, 0x06, 0x22,
	0x40, 0x0a, 0x12, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f,
	0x72, 0x22, 0xd6, 0x01, 0x0a, 0x13, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x33, 0x0a,
	0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e,
	0x66, 0x6f, 0x22, 0x46, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x14, 0x43, 0x4f,
	0x44, 0x45, 0x5f, 0x45, 0x52, 0x52, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x53, 0x55, 0x43,
	0x43, 0x45, 0x53, 0x53, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x45,
	0x52, 0x52, 0x5f, 0x54, 0x4f, 0x4b, 0x45, 0x4e, 0x10, 0x02, 0x22, 0x42, 0x0a, 0x14, 0x46, 0x61,
	0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x22, 0xda,
	0x01, 0x0a, 0x15, 0x46, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x30, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x61,
	0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x33,
	0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69,
	0x6e, 0x66, 0x6f, 0x22, 0x46, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x14, 0x43,
	0x4f, 0x44, 0x45, 0x5f, 0x45, 0x52, 0x52, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46,
	0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x53, 0x55,
	0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x43, 0x4f, 0x44, 0x45, 0x5f,
	0x45, 0x52, 0x52, 0x5f, 0x54, 0x4f, 0x4b, 0x45, 0x4e, 0x10, 0x02, 0x22, 0x48, 0x0a, 0x07, 0x41,
	0x70, 0x70, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x70, 0x70, 0x6c, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x70, 0x6c, 0x65, 0x49,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0c, 0x0a, 0x01, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x01, 0x74, 0x22, 0xda, 0x01, 0x0a, 0x09, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x32, 0xd5, 0x08, 0x0a, 0x10, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x12, 0x6c, 0x0a, 0x07, 0x44, 0x65, 0x76, 0x50, 0x69,
	0x6e, 0x67, 0x12, 0x24, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x76, 0x50, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x65, 0x76, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x14, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0e, 0x12, 0x0c, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x65, 0x76,
	0x2f, 0x70, 0x69, 0x6e, 0x67, 0x12, 0x72, 0x0a, 0x08, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x12, 0x25, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x17, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x11, 0x3a, 0x01, 0x2a, 0x22, 0x0c, 0x2f, 0x76, 0x31,
	0x2f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x12, 0x66, 0x0a, 0x05, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x12, 0x22, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x14, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x0e, 0x3a, 0x01, 0x2a, 0x22, 0x09, 0x2f, 0x76, 0x31, 0x2f, 0x6c, 0x6f, 0x67, 0x69,
	0x6e, 0x12, 0x6e, 0x0a, 0x07, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x12, 0x24, 0x2e, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x25, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73,
	0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x16, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x10, 0x3a, 0x01, 0x2a, 0x22, 0x0b, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73,
	0x68, 0x12, 0x66, 0x0a, 0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x22, 0x2e, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23,
	0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x14, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0e, 0x3a, 0x01, 0x2a, 0x22, 0x09,
	0x2f, 0x76, 0x31, 0x2f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x7b, 0x0a, 0x0a, 0x41, 0x70, 0x70,
	0x6c, 0x65, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x27, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x70, 0x70, 0x6c, 0x65, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x28, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x66, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x65, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x14, 0x3a, 0x01, 0x2a, 0x22, 0x0f, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x70, 0x6c, 0x65,
	0x2f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x9c, 0x01, 0x0a, 0x12, 0x41, 0x70, 0x70, 0x6c, 0x65,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x2f, 0x2e,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x65, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x43,
	0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30,
	0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x65, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x3a, 0x01, 0x2a, 0x22, 0x18, 0x2f, 0x76, 0x31,
	0x2f, 0x61, 0x70, 0x70, 0x6c, 0x65, 0x2f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x2f, 0x63, 0x61, 0x6c,
	0x6c, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x7f, 0x0a, 0x0b, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x12, 0x28, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29,
	0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x15, 0x3a, 0x01, 0x2a, 0x22, 0x10, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x81, 0x01, 0x0a, 0x0d, 0x46, 0x61, 0x63, 0x65, 0x62,
	0x6f, 0x6f, 0x6b, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x2a, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x46, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x61, 0x63, 0x65,
	0x62, 0x6f, 0x6f, 0x6b, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x17, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x11, 0x3a, 0x01, 0x2a, 0x22, 0x0c, 0x2f, 0x76,
	0x31, 0x2f, 0x66, 0x62, 0x2f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x42, 0x2d, 0x5a, 0x2b, 0x61, 0x70,
	0x69, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2f, 0x76, 0x31, 0x3b, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
})

var (
	file_account_interface_v1_account_proto_rawDescOnce sync.Once
	file_account_interface_v1_account_proto_rawDescData []byte
)

func file_account_interface_v1_account_proto_rawDescGZIP() []byte {
	file_account_interface_v1_account_proto_rawDescOnce.Do(func() {
		file_account_interface_v1_account_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_account_interface_v1_account_proto_rawDesc), len(file_account_interface_v1_account_proto_rawDesc)))
	})
	return file_account_interface_v1_account_proto_rawDescData
}

var file_account_interface_v1_account_proto_enumTypes = make([]protoimpl.EnumInfo, 8)
var file_account_interface_v1_account_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_account_interface_v1_account_proto_goTypes = []any{
	(RegisterResponse_Code)(0),                  // 0: account.interface.v1.RegisterResponse.Code
	(LoginResponse_Code)(0),                     // 1: account.interface.v1.LoginResponse.Code
	(RefreshResponse_Code)(0),                   // 2: account.interface.v1.RefreshResponse.Code
	(TokenResponse_Code)(0),                     // 3: account.interface.v1.TokenResponse.Code
	(AppleLoginResponse_Code)(0),                // 4: account.interface.v1.AppleLoginResponse.Code
	(AppleLoginCallbackResponse_Code)(0),        // 5: account.interface.v1.AppleLoginCallbackResponse.Code
	(GoogleLoginResponse_Code)(0),               // 6: account.interface.v1.GoogleLoginResponse.Code
	(FacebookLoginResponse_Code)(0),             // 7: account.interface.v1.FacebookLoginResponse.Code
	(*DevPingRequest)(nil),                      // 8: account.interface.v1.DevPingRequest
	(*DevPingResponse)(nil),                     // 9: account.interface.v1.DevPingResponse
	(*RegisterRequest)(nil),                     // 10: account.interface.v1.RegisterRequest
	(*RegisterResponse)(nil),                    // 11: account.interface.v1.RegisterResponse
	(*LoginRequest)(nil),                        // 12: account.interface.v1.LoginRequest
	(*LoginResponse)(nil),                       // 13: account.interface.v1.LoginResponse
	(*RefreshRequest)(nil),                      // 14: account.interface.v1.RefreshRequest
	(*RefreshResponse)(nil),                     // 15: account.interface.v1.RefreshResponse
	(*TokenRequest)(nil),                        // 16: account.interface.v1.TokenRequest
	(*TokenResponse)(nil),                       // 17: account.interface.v1.TokenResponse
	(*Session)(nil),                             // 18: account.interface.v1.Session
	(*AppleLoginRequest)(nil),                   // 19: account.interface.v1.AppleLoginRequest
	(*AppleLoginResponse)(nil),                  // 20: account.interface.v1.AppleLoginResponse
	(*AppleLoginCallbackRequest)(nil),           // 21: account.interface.v1.AppleLoginCallbackRequest
	(*AppleLoginCallbackResponse)(nil),          // 22: account.interface.v1.AppleLoginCallbackResponse
	(*GoogleLoginRequest)(nil),                  // 23: account.interface.v1.GoogleLoginRequest
	(*GoogleLoginResponse)(nil),                 // 24: account.interface.v1.GoogleLoginResponse
	(*FacebookLoginRequest)(nil),                // 25: account.interface.v1.FacebookLoginRequest
	(*FacebookLoginResponse)(nil),               // 26: account.interface.v1.FacebookLoginResponse
	(*AppleId)(nil),                             // 27: account.interface.v1.AppleId
	(*LoginInfo)(nil),                           // 28: account.interface.v1.LoginInfo
	(*AppleLoginCallbackRequest_User)(nil),      // 29: account.interface.v1.AppleLoginCallbackRequest.User
	(*AppleLoginCallbackRequest_User_Name)(nil), // 30: account.interface.v1.AppleLoginCallbackRequest.User.Name
}
var file_account_interface_v1_account_proto_depIdxs = []int32{
	0,  // 0: account.interface.v1.RegisterResponse.code:type_name -> account.interface.v1.RegisterResponse.Code
	1,  // 1: account.interface.v1.LoginResponse.code:type_name -> account.interface.v1.LoginResponse.Code
	2,  // 2: account.interface.v1.RefreshResponse.code:type_name -> account.interface.v1.RefreshResponse.Code
	3,  // 3: account.interface.v1.TokenResponse.code:type_name -> account.interface.v1.TokenResponse.Code
	4,  // 4: account.interface.v1.AppleLoginResponse.code:type_name -> account.interface.v1.AppleLoginResponse.Code
	28, // 5: account.interface.v1.AppleLoginResponse.info:type_name -> account.interface.v1.LoginInfo
	5,  // 6: account.interface.v1.AppleLoginCallbackResponse.code:type_name -> account.interface.v1.AppleLoginCallbackResponse.Code
	6,  // 7: account.interface.v1.GoogleLoginResponse.code:type_name -> account.interface.v1.GoogleLoginResponse.Code
	28, // 8: account.interface.v1.GoogleLoginResponse.info:type_name -> account.interface.v1.LoginInfo
	7,  // 9: account.interface.v1.FacebookLoginResponse.code:type_name -> account.interface.v1.FacebookLoginResponse.Code
	28, // 10: account.interface.v1.FacebookLoginResponse.info:type_name -> account.interface.v1.LoginInfo
	30, // 11: account.interface.v1.AppleLoginCallbackRequest.User.name:type_name -> account.interface.v1.AppleLoginCallbackRequest.User.Name
	8,  // 12: account.interface.v1.AccountInterface.DevPing:input_type -> account.interface.v1.DevPingRequest
	10, // 13: account.interface.v1.AccountInterface.Register:input_type -> account.interface.v1.RegisterRequest
	12, // 14: account.interface.v1.AccountInterface.Login:input_type -> account.interface.v1.LoginRequest
	14, // 15: account.interface.v1.AccountInterface.Refresh:input_type -> account.interface.v1.RefreshRequest
	16, // 16: account.interface.v1.AccountInterface.Token:input_type -> account.interface.v1.TokenRequest
	19, // 17: account.interface.v1.AccountInterface.AppleLogin:input_type -> account.interface.v1.AppleLoginRequest
	21, // 18: account.interface.v1.AccountInterface.AppleLoginCallback:input_type -> account.interface.v1.AppleLoginCallbackRequest
	23, // 19: account.interface.v1.AccountInterface.GoogleLogin:input_type -> account.interface.v1.GoogleLoginRequest
	25, // 20: account.interface.v1.AccountInterface.FacebookLogin:input_type -> account.interface.v1.FacebookLoginRequest
	9,  // 21: account.interface.v1.AccountInterface.DevPing:output_type -> account.interface.v1.DevPingResponse
	11, // 22: account.interface.v1.AccountInterface.Register:output_type -> account.interface.v1.RegisterResponse
	13, // 23: account.interface.v1.AccountInterface.Login:output_type -> account.interface.v1.LoginResponse
	15, // 24: account.interface.v1.AccountInterface.Refresh:output_type -> account.interface.v1.RefreshResponse
	17, // 25: account.interface.v1.AccountInterface.Token:output_type -> account.interface.v1.TokenResponse
	20, // 26: account.interface.v1.AccountInterface.AppleLogin:output_type -> account.interface.v1.AppleLoginResponse
	22, // 27: account.interface.v1.AccountInterface.AppleLoginCallback:output_type -> account.interface.v1.AppleLoginCallbackResponse
	24, // 28: account.interface.v1.AccountInterface.GoogleLogin:output_type -> account.interface.v1.GoogleLoginResponse
	26, // 29: account.interface.v1.AccountInterface.FacebookLogin:output_type -> account.interface.v1.FacebookLoginResponse
	21, // [21:30] is the sub-list for method output_type
	12, // [12:21] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_account_interface_v1_account_proto_init() }
func file_account_interface_v1_account_proto_init() {
	if File_account_interface_v1_account_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_account_interface_v1_account_proto_rawDesc), len(file_account_interface_v1_account_proto_rawDesc)),
			NumEnums:      8,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_account_interface_v1_account_proto_goTypes,
		DependencyIndexes: file_account_interface_v1_account_proto_depIdxs,
		EnumInfos:         file_account_interface_v1_account_proto_enumTypes,
		MessageInfos:      file_account_interface_v1_account_proto_msgTypes,
	}.Build()
	File_account_interface_v1_account_proto = out.File
	file_account_interface_v1_account_proto_goTypes = nil
	file_account_interface_v1_account_proto_depIdxs = nil
}
