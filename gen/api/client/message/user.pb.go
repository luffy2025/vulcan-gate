// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: message/user.proto

package climsg

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SCLogin_Code int32

const (
	SCLogin_ErrServer            SCLogin_Code = 0 // Please try again later
	SCLogin_Success              SCLogin_Code = 1 // Success
	SCLogin_ErrAccountIdNotExist SCLogin_Code = 2 // Account does not exist
	SCLogin_ErrAccountBanned     SCLogin_Code = 3 // Account banned
)

// Enum value maps for SCLogin_Code.
var (
	SCLogin_Code_name = map[int32]string{
		0: "ErrServer",
		1: "Success",
		2: "ErrAccountIdNotExist",
		3: "ErrAccountBanned",
	}
	SCLogin_Code_value = map[string]int32{
		"ErrServer":            0,
		"Success":              1,
		"ErrAccountIdNotExist": 2,
		"ErrAccountBanned":     3,
	}
)

func (x SCLogin_Code) Enum() *SCLogin_Code {
	p := new(SCLogin_Code)
	*p = x
	return p
}

func (x SCLogin_Code) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SCLogin_Code) Descriptor() protoreflect.EnumDescriptor {
	return file_message_user_proto_enumTypes[0].Descriptor()
}

func (SCLogin_Code) Type() protoreflect.EnumType {
	return &file_message_user_proto_enumTypes[0]
}

func (x SCLogin_Code) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SCLogin_Code.Descriptor instead.
func (SCLogin_Code) EnumDescriptor() ([]byte, []int) {
	return file_message_user_proto_rawDescGZIP(), []int{4, 0}
}

type SCUpdateName_Code int32

const (
	SCUpdateName_ErrServer         SCUpdateName_Code = 0 // Please try again later
	SCUpdateName_Success           SCUpdateName_Code = 1 // Success
	SCUpdateName_ErrNameIllegal    SCUpdateName_Code = 2 // Name is illegal
	SCUpdateName_ErrNameNotChanged SCUpdateName_Code = 3 // Name not changed
)

// Enum value maps for SCUpdateName_Code.
var (
	SCUpdateName_Code_name = map[int32]string{
		0: "ErrServer",
		1: "Success",
		2: "ErrNameIllegal",
		3: "ErrNameNotChanged",
	}
	SCUpdateName_Code_value = map[string]int32{
		"ErrServer":         0,
		"Success":           1,
		"ErrNameIllegal":    2,
		"ErrNameNotChanged": 3,
	}
)

func (x SCUpdateName_Code) Enum() *SCUpdateName_Code {
	p := new(SCUpdateName_Code)
	*p = x
	return p
}

func (x SCUpdateName_Code) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SCUpdateName_Code) Descriptor() protoreflect.EnumDescriptor {
	return file_message_user_proto_enumTypes[1].Descriptor()
}

func (SCUpdateName_Code) Type() protoreflect.EnumType {
	return &file_message_user_proto_enumTypes[1]
}

func (x SCUpdateName_Code) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SCUpdateName_Code.Descriptor instead.
func (SCUpdateName_Code) EnumDescriptor() ([]byte, []int) {
	return file_message_user_proto_rawDescGZIP(), []int{6, 0}
}

type SCSetGender_Code int32

const (
	SCSetGender_ErrServer        SCSetGender_Code = 0 // Please try again later
	SCSetGender_Success          SCSetGender_Code = 1 // Success
	SCSetGender_ErrGenderIllegal SCSetGender_Code = 2 // Gender is illegal
	SCSetGender_ErrGenderSet     SCSetGender_Code = 3 // Gender has been set
)

// Enum value maps for SCSetGender_Code.
var (
	SCSetGender_Code_name = map[int32]string{
		0: "ErrServer",
		1: "Success",
		2: "ErrGenderIllegal",
		3: "ErrGenderSet",
	}
	SCSetGender_Code_value = map[string]int32{
		"ErrServer":        0,
		"Success":          1,
		"ErrGenderIllegal": 2,
		"ErrGenderSet":     3,
	}
)

func (x SCSetGender_Code) Enum() *SCSetGender_Code {
	p := new(SCSetGender_Code)
	*p = x
	return p
}

func (x SCSetGender_Code) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SCSetGender_Code) Descriptor() protoreflect.EnumDescriptor {
	return file_message_user_proto_enumTypes[2].Descriptor()
}

func (SCSetGender_Code) Type() protoreflect.EnumType {
	return &file_message_user_proto_enumTypes[2]
}

func (x SCSetGender_Code) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SCSetGender_Code.Descriptor instead.
func (SCSetGender_Code) EnumDescriptor() ([]byte, []int) {
	return file_message_user_proto_rawDescGZIP(), []int{8, 0}
}

// User data
type UserProto struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Basic         *UserBasicProto        `protobuf:"bytes,1,opt,name=basic,proto3" json:"basic,omitempty"`                       // Basic information
	Storage       *UserStorageProto      `protobuf:"bytes,2,opt,name=storage,proto3" json:"storage,omitempty"`                   // Item storage
	HeroList      *UserHeroListProto     `protobuf:"bytes,3,opt,name=hero_list,json=heroList,proto3" json:"hero_list,omitempty"` // Hero list
	Room          *UserRoomProto         `protobuf:"bytes,4,opt,name=room,proto3" json:"room,omitempty"`                         // Room
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserProto) Reset() {
	*x = UserProto{}
	mi := &file_message_user_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserProto) ProtoMessage() {}

func (x *UserProto) ProtoReflect() protoreflect.Message {
	mi := &file_message_user_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserProto.ProtoReflect.Descriptor instead.
func (*UserProto) Descriptor() ([]byte, []int) {
	return file_message_user_proto_rawDescGZIP(), []int{0}
}

func (x *UserProto) GetBasic() *UserBasicProto {
	if x != nil {
		return x.Basic
	}
	return nil
}

func (x *UserProto) GetStorage() *UserStorageProto {
	if x != nil {
		return x.Storage
	}
	return nil
}

func (x *UserProto) GetHeroList() *UserHeroListProto {
	if x != nil {
		return x.HeroList
	}
	return nil
}

func (x *UserProto) GetRoom() *UserRoomProto {
	if x != nil {
		return x.Room
	}
	return nil
}

// Recharge parameter
type RechargeParamProto struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProductId     int64                  `protobuf:"varint,1,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"` // Product ID in the platform
	Store         string                 `protobuf:"bytes,2,opt,name=store,proto3" json:"store,omitempty"`                           // Store
	Payload       []byte                 `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`                       // Payload
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RechargeParamProto) Reset() {
	*x = RechargeParamProto{}
	mi := &file_message_user_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RechargeParamProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RechargeParamProto) ProtoMessage() {}

func (x *RechargeParamProto) ProtoReflect() protoreflect.Message {
	mi := &file_message_user_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RechargeParamProto.ProtoReflect.Descriptor instead.
func (*RechargeParamProto) Descriptor() ([]byte, []int) {
	return file_message_user_proto_rawDescGZIP(), []int{1}
}

func (x *RechargeParamProto) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *RechargeParamProto) GetStore() string {
	if x != nil {
		return x.Store
	}
	return ""
}

func (x *RechargeParamProto) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

// Push: Latest user data
// The client receives the data and updates its own data to avoid data inconsistency between the client and the server when GM modifies data or the server restarts
type SCPushSyncUser struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	User          *UserProto             `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"` // Player data
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SCPushSyncUser) Reset() {
	*x = SCPushSyncUser{}
	mi := &file_message_user_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SCPushSyncUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCPushSyncUser) ProtoMessage() {}

func (x *SCPushSyncUser) ProtoReflect() protoreflect.Message {
	mi := &file_message_user_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCPushSyncUser.ProtoReflect.Descriptor instead.
func (*SCPushSyncUser) Descriptor() ([]byte, []int) {
	return file_message_user_proto_rawDescGZIP(), []int{2}
}

func (x *SCPushSyncUser) GetUser() *UserProto {
	if x != nil {
		return x.User
	}
	return nil
}

// Request: Login
type CSLogin struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Reconnect     bool                   `protobuf:"varint,1,opt,name=reconnect,proto3" json:"reconnect,omitempty"` // Whether it is a reconnection. When the client discovers that the network is disconnected during the online period and executes automatic reconnection, it is true.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CSLogin) Reset() {
	*x = CSLogin{}
	mi := &file_message_user_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSLogin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSLogin) ProtoMessage() {}

func (x *CSLogin) ProtoReflect() protoreflect.Message {
	mi := &file_message_user_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSLogin.ProtoReflect.Descriptor instead.
func (*CSLogin) Descriptor() ([]byte, []int) {
	return file_message_user_proto_rawDescGZIP(), []int{3}
}

func (x *CSLogin) GetReconnect() bool {
	if x != nil {
		return x.Reconnect
	}
	return false
}

// Response: Login
type SCLogin struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          SCLogin_Code           `protobuf:"varint,1,opt,name=code,proto3,enum=message.SCLogin_Code" json:"code,omitempty"`     // Status code
	ServerTime    int64                  `protobuf:"varint,2,opt,name=server_time,json=serverTime,proto3" json:"server_time,omitempty"` // Server timestamp, accurate to seconds
	User          *UserProto             `protobuf:"bytes,6,opt,name=user,proto3" json:"user,omitempty"`                                // Player data
	Created       bool                   `protobuf:"varint,7,opt,name=created,proto3" json:"created,omitempty"`                         // Whether the player is new
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SCLogin) Reset() {
	*x = SCLogin{}
	mi := &file_message_user_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SCLogin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCLogin) ProtoMessage() {}

func (x *SCLogin) ProtoReflect() protoreflect.Message {
	mi := &file_message_user_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCLogin.ProtoReflect.Descriptor instead.
func (*SCLogin) Descriptor() ([]byte, []int) {
	return file_message_user_proto_rawDescGZIP(), []int{4}
}

func (x *SCLogin) GetCode() SCLogin_Code {
	if x != nil {
		return x.Code
	}
	return SCLogin_ErrServer
}

func (x *SCLogin) GetServerTime() int64 {
	if x != nil {
		return x.ServerTime
	}
	return 0
}

func (x *SCLogin) GetUser() *UserProto {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *SCLogin) GetCreated() bool {
	if x != nil {
		return x.Created
	}
	return false
}

// Request: Update name
type CSUpdateName struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"` // Name
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CSUpdateName) Reset() {
	*x = CSUpdateName{}
	mi := &file_message_user_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSUpdateName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSUpdateName) ProtoMessage() {}

func (x *CSUpdateName) ProtoReflect() protoreflect.Message {
	mi := &file_message_user_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSUpdateName.ProtoReflect.Descriptor instead.
func (*CSUpdateName) Descriptor() ([]byte, []int) {
	return file_message_user_proto_rawDescGZIP(), []int{5}
}

func (x *CSUpdateName) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// Response: Update name
type SCUpdateName struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          SCUpdateName_Code      `protobuf:"varint,1,opt,name=code,proto3,enum=message.SCUpdateName_Code" json:"code,omitempty"` // Status code
	IsIllegal     bool                   `protobuf:"varint,2,opt,name=is_illegal,json=isIllegal,proto3" json:"is_illegal,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SCUpdateName) Reset() {
	*x = SCUpdateName{}
	mi := &file_message_user_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SCUpdateName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCUpdateName) ProtoMessage() {}

func (x *SCUpdateName) ProtoReflect() protoreflect.Message {
	mi := &file_message_user_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCUpdateName.ProtoReflect.Descriptor instead.
func (*SCUpdateName) Descriptor() ([]byte, []int) {
	return file_message_user_proto_rawDescGZIP(), []int{6}
}

func (x *SCUpdateName) GetCode() SCUpdateName_Code {
	if x != nil {
		return x.Code
	}
	return SCUpdateName_ErrServer
}

func (x *SCUpdateName) GetIsIllegal() bool {
	if x != nil {
		return x.IsIllegal
	}
	return false
}

// Request: Set gender
type CSSetGender struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Gender        int32                  `protobuf:"varint,1,opt,name=gender,proto3" json:"gender,omitempty"` // Gender. Same as ActorProto.gender
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CSSetGender) Reset() {
	*x = CSSetGender{}
	mi := &file_message_user_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSSetGender) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSSetGender) ProtoMessage() {}

func (x *CSSetGender) ProtoReflect() protoreflect.Message {
	mi := &file_message_user_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSSetGender.ProtoReflect.Descriptor instead.
func (*CSSetGender) Descriptor() ([]byte, []int) {
	return file_message_user_proto_rawDescGZIP(), []int{7}
}

func (x *CSSetGender) GetGender() int32 {
	if x != nil {
		return x.Gender
	}
	return 0
}

// Response: Set gender
type SCSetGender struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          SCSetGender_Code       `protobuf:"varint,1,opt,name=code,proto3,enum=message.SCSetGender_Code" json:"code,omitempty"` // Status code
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SCSetGender) Reset() {
	*x = SCSetGender{}
	mi := &file_message_user_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SCSetGender) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCSetGender) ProtoMessage() {}

func (x *SCSetGender) ProtoReflect() protoreflect.Message {
	mi := &file_message_user_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCSetGender.ProtoReflect.Descriptor instead.
func (*SCSetGender) Descriptor() ([]byte, []int) {
	return file_message_user_proto_rawDescGZIP(), []int{8}
}

func (x *SCSetGender) GetCode() SCSetGender_Code {
	if x != nil {
		return x.Code
	}
	return SCSetGender_ErrServer
}

var File_message_user_proto protoreflect.FileDescriptor

var file_message_user_proto_rawDesc = string([]byte{
	0x0a, 0x12, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x1c, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2f, 0x68, 0x65, 0x72, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x18, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x62, 0x61,
	0x73, 0x69, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x12, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd4, 0x01, 0x0a, 0x09, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x2d, 0x0a, 0x05, 0x62, 0x61, 0x73, 0x69, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x42, 0x61, 0x73, 0x69, 0x63, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x05, 0x62, 0x61, 0x73, 0x69,
	0x63, 0x12, 0x33, 0x0a, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x07, 0x73,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12, 0x37, 0x0a, 0x09, 0x68, 0x65, 0x72, 0x6f, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x48, 0x65, 0x72, 0x6f, 0x4c, 0x69, 0x73, 0x74,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x08, 0x68, 0x65, 0x72, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x2a, 0x0a, 0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6f, 0x6d,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x22, 0x63, 0x0a, 0x12, 0x52,
	0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x22, 0x38, 0x0a, 0x0e, 0x53, 0x43, 0x50, 0x75, 0x73, 0x68, 0x53, 0x79, 0x6e, 0x63, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x26, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0x27, 0x0a, 0x07, 0x43, 0x53,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x22, 0xeb, 0x01, 0x0a, 0x07, 0x53, 0x43, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12,
	0x29, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x43, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x2e,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x04, 0x75,
	0x73, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x04, 0x75,
	0x73, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x22, 0x52, 0x0a,
	0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x0d, 0x0a, 0x09, 0x45, 0x72, 0x72, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10,
	0x01, 0x12, 0x18, 0x0a, 0x14, 0x45, 0x72, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x64, 0x4e, 0x6f, 0x74, 0x45, 0x78, 0x69, 0x73, 0x74, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x45,
	0x72, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x10,
	0x03, 0x22, 0x22, 0x0a, 0x0c, 0x43, 0x53, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xac, 0x01, 0x0a, 0x0c, 0x53, 0x43, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53,
	0x43, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x2e, 0x43, 0x6f, 0x64, 0x65,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x69, 0x6c, 0x6c,
	0x65, 0x67, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x49, 0x6c,
	0x6c, 0x65, 0x67, 0x61, 0x6c, 0x22, 0x4d, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x0d, 0x0a,
	0x09, 0x45, 0x72, 0x72, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07,
	0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x45, 0x72, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x49, 0x6c, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x10, 0x02, 0x12, 0x15, 0x0a,
	0x11, 0x45, 0x72, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x4e, 0x6f, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x64, 0x10, 0x03, 0x22, 0x25, 0x0a, 0x0b, 0x43, 0x53, 0x53, 0x65, 0x74, 0x47, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x22, 0x88, 0x01, 0x0a, 0x0b,
	0x53, 0x43, 0x53, 0x65, 0x74, 0x47, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x2d, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x53, 0x43, 0x53, 0x65, 0x74, 0x47, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x2e,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x4a, 0x0a, 0x04, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x0d, 0x0a, 0x09, 0x45, 0x72, 0x72, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x10,
	0x00, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x01, 0x12, 0x14,
	0x0a, 0x10, 0x45, 0x72, 0x72, 0x47, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x6c, 0x6c, 0x65, 0x67,
	0x61, 0x6c, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x45, 0x72, 0x72, 0x47, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x53, 0x65, 0x74, 0x10, 0x03, 0x32, 0x85, 0x02, 0x0a, 0x0e, 0x55, 0x73, 0x65, 0x72, 0x54,
	0x43, 0x50, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x43, 0x0a, 0x05, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x12, 0x10, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x53, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x1a, 0x10, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53,
	0x43, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x22, 0x16, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x10, 0x3a, 0x01,
	0x2a, 0x22, 0x0b, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x58,
	0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x15, 0x2e, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x53, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x1a, 0x15, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x43,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x16, 0x3a, 0x01, 0x2a, 0x22, 0x11, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x6e, 0x61, 0x6d,
	0x65, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x54, 0x0a, 0x09, 0x53, 0x65, 0x74, 0x47,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x14, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e,
	0x43, 0x53, 0x53, 0x65, 0x74, 0x47, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x1a, 0x14, 0x2e, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x43, 0x53, 0x65, 0x74, 0x47, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x3a, 0x01, 0x2a, 0x22, 0x10, 0x2f, 0x75,
	0x73, 0x65, 0x72, 0x2f, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x2f, 0x73, 0x65, 0x74, 0x42, 0x1b,
	0x5a, 0x19, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x3b, 0x63, 0x6c, 0x69, 0x6d, 0x73, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
})

var (
	file_message_user_proto_rawDescOnce sync.Once
	file_message_user_proto_rawDescData []byte
)

func file_message_user_proto_rawDescGZIP() []byte {
	file_message_user_proto_rawDescOnce.Do(func() {
		file_message_user_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_message_user_proto_rawDesc), len(file_message_user_proto_rawDesc)))
	})
	return file_message_user_proto_rawDescData
}

var file_message_user_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_message_user_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_message_user_proto_goTypes = []any{
	(SCLogin_Code)(0),          // 0: message.SCLogin.Code
	(SCUpdateName_Code)(0),     // 1: message.SCUpdateName.Code
	(SCSetGender_Code)(0),      // 2: message.SCSetGender.Code
	(*UserProto)(nil),          // 3: message.UserProto
	(*RechargeParamProto)(nil), // 4: message.RechargeParamProto
	(*SCPushSyncUser)(nil),     // 5: message.SCPushSyncUser
	(*CSLogin)(nil),            // 6: message.CSLogin
	(*SCLogin)(nil),            // 7: message.SCLogin
	(*CSUpdateName)(nil),       // 8: message.CSUpdateName
	(*SCUpdateName)(nil),       // 9: message.SCUpdateName
	(*CSSetGender)(nil),        // 10: message.CSSetGender
	(*SCSetGender)(nil),        // 11: message.SCSetGender
	(*UserBasicProto)(nil),     // 12: message.UserBasicProto
	(*UserStorageProto)(nil),   // 13: message.UserStorageProto
	(*UserHeroListProto)(nil),  // 14: message.UserHeroListProto
	(*UserRoomProto)(nil),      // 15: message.UserRoomProto
}
var file_message_user_proto_depIdxs = []int32{
	12, // 0: message.UserProto.basic:type_name -> message.UserBasicProto
	13, // 1: message.UserProto.storage:type_name -> message.UserStorageProto
	14, // 2: message.UserProto.hero_list:type_name -> message.UserHeroListProto
	15, // 3: message.UserProto.room:type_name -> message.UserRoomProto
	3,  // 4: message.SCPushSyncUser.user:type_name -> message.UserProto
	0,  // 5: message.SCLogin.code:type_name -> message.SCLogin.Code
	3,  // 6: message.SCLogin.user:type_name -> message.UserProto
	1,  // 7: message.SCUpdateName.code:type_name -> message.SCUpdateName.Code
	2,  // 8: message.SCSetGender.code:type_name -> message.SCSetGender.Code
	6,  // 9: message.UserTCPService.Login:input_type -> message.CSLogin
	8,  // 10: message.UserTCPService.UpdateName:input_type -> message.CSUpdateName
	10, // 11: message.UserTCPService.SetGender:input_type -> message.CSSetGender
	7,  // 12: message.UserTCPService.Login:output_type -> message.SCLogin
	9,  // 13: message.UserTCPService.UpdateName:output_type -> message.SCUpdateName
	11, // 14: message.UserTCPService.SetGender:output_type -> message.SCSetGender
	12, // [12:15] is the sub-list for method output_type
	9,  // [9:12] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_message_user_proto_init() }
func file_message_user_proto_init() {
	if File_message_user_proto != nil {
		return
	}
	file_message_hero_proto_init()
	file_message_user_basic_proto_init()
	file_message_storage_proto_init()
	file_message_room_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_message_user_proto_rawDesc), len(file_message_user_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_message_user_proto_goTypes,
		DependencyIndexes: file_message_user_proto_depIdxs,
		EnumInfos:         file_message_user_proto_enumTypes,
		MessageInfos:      file_message_user_proto_msgTypes,
	}.Build()
	File_message_user_proto = out.File
	file_message_user_proto_goTypes = nil
	file_message_user_proto_depIdxs = nil
}
