// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: message/room.proto

package climsg

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SCRoomList_Code int32

const (
	SCRoomList_ErrServer SCRoomList_Code = 0 // Please try again later
	SCRoomList_Success   SCRoomList_Code = 1 // Success
)

// Enum value maps for SCRoomList_Code.
var (
	SCRoomList_Code_name = map[int32]string{
		0: "ErrServer",
		1: "Success",
	}
	SCRoomList_Code_value = map[string]int32{
		"ErrServer": 0,
		"Success":   1,
	}
)

func (x SCRoomList_Code) Enum() *SCRoomList_Code {
	p := new(SCRoomList_Code)
	*p = x
	return p
}

func (x SCRoomList_Code) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SCRoomList_Code) Descriptor() protoreflect.EnumDescriptor {
	return file_message_room_proto_enumTypes[0].Descriptor()
}

func (SCRoomList_Code) Type() protoreflect.EnumType {
	return &file_message_room_proto_enumTypes[0]
}

func (x SCRoomList_Code) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SCRoomList_Code.Descriptor instead.
func (SCRoomList_Code) EnumDescriptor() ([]byte, []int) {
	return file_message_room_proto_rawDescGZIP(), []int{7, 0}
}

type SCRoomDetail_Code int32

const (
	SCRoomDetail_ErrServer       SCRoomDetail_Code = 0 // Please try again later
	SCRoomDetail_Success         SCRoomDetail_Code = 1 // Success
	SCRoomDetail_ErrRoomNotFound SCRoomDetail_Code = 2 // Room not found
)

// Enum value maps for SCRoomDetail_Code.
var (
	SCRoomDetail_Code_name = map[int32]string{
		0: "ErrServer",
		1: "Success",
		2: "ErrRoomNotFound",
	}
	SCRoomDetail_Code_value = map[string]int32{
		"ErrServer":       0,
		"Success":         1,
		"ErrRoomNotFound": 2,
	}
)

func (x SCRoomDetail_Code) Enum() *SCRoomDetail_Code {
	p := new(SCRoomDetail_Code)
	*p = x
	return p
}

func (x SCRoomDetail_Code) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SCRoomDetail_Code) Descriptor() protoreflect.EnumDescriptor {
	return file_message_room_proto_enumTypes[1].Descriptor()
}

func (SCRoomDetail_Code) Type() protoreflect.EnumType {
	return &file_message_room_proto_enumTypes[1]
}

func (x SCRoomDetail_Code) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SCRoomDetail_Code.Descriptor instead.
func (SCRoomDetail_Code) EnumDescriptor() ([]byte, []int) {
	return file_message_room_proto_rawDescGZIP(), []int{9, 0}
}

type SCCreateRoom_Code int32

const (
	SCCreateRoom_ErrServer          SCCreateRoom_Code = 0 // Please try again later
	SCCreateRoom_Success            SCCreateRoom_Code = 1 // Success
	SCCreateRoom_ErrRoomTypeInvalid SCCreateRoom_Code = 2 // Room type invalid
	SCCreateRoom_ErrAlreadyInRoom   SCCreateRoom_Code = 3 // Already in room
)

// Enum value maps for SCCreateRoom_Code.
var (
	SCCreateRoom_Code_name = map[int32]string{
		0: "ErrServer",
		1: "Success",
		2: "ErrRoomTypeInvalid",
		3: "ErrAlreadyInRoom",
	}
	SCCreateRoom_Code_value = map[string]int32{
		"ErrServer":          0,
		"Success":            1,
		"ErrRoomTypeInvalid": 2,
		"ErrAlreadyInRoom":   3,
	}
)

func (x SCCreateRoom_Code) Enum() *SCCreateRoom_Code {
	p := new(SCCreateRoom_Code)
	*p = x
	return p
}

func (x SCCreateRoom_Code) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SCCreateRoom_Code) Descriptor() protoreflect.EnumDescriptor {
	return file_message_room_proto_enumTypes[2].Descriptor()
}

func (SCCreateRoom_Code) Type() protoreflect.EnumType {
	return &file_message_room_proto_enumTypes[2]
}

func (x SCCreateRoom_Code) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SCCreateRoom_Code.Descriptor instead.
func (SCCreateRoom_Code) EnumDescriptor() ([]byte, []int) {
	return file_message_room_proto_rawDescGZIP(), []int{11, 0}
}

type SCInviteToJoinRoom_Code int32

const (
	SCInviteToJoinRoom_ErrServer             SCInviteToJoinRoom_Code = 0 // Please try again later
	SCInviteToJoinRoom_Success               SCInviteToJoinRoom_Code = 1 // Success
	SCInviteToJoinRoom_ErrNotInRoom          SCInviteToJoinRoom_Code = 2 // Not in room
	SCInviteToJoinRoom_ErrUnauthorized       SCInviteToJoinRoom_Code = 3 // Unauthorized
	SCInviteToJoinRoom_ErrUserNotFound       SCInviteToJoinRoom_Code = 4 // User not found
	SCInviteToJoinRoom_ErrUserAlreadyInRoom  SCInviteToJoinRoom_Code = 5 // User already in room
	SCInviteToJoinRoom_ErrUserAlreadyInvited SCInviteToJoinRoom_Code = 6 // User already invited
)

// Enum value maps for SCInviteToJoinRoom_Code.
var (
	SCInviteToJoinRoom_Code_name = map[int32]string{
		0: "ErrServer",
		1: "Success",
		2: "ErrNotInRoom",
		3: "ErrUnauthorized",
		4: "ErrUserNotFound",
		5: "ErrUserAlreadyInRoom",
		6: "ErrUserAlreadyInvited",
	}
	SCInviteToJoinRoom_Code_value = map[string]int32{
		"ErrServer":             0,
		"Success":               1,
		"ErrNotInRoom":          2,
		"ErrUnauthorized":       3,
		"ErrUserNotFound":       4,
		"ErrUserAlreadyInRoom":  5,
		"ErrUserAlreadyInvited": 6,
	}
)

func (x SCInviteToJoinRoom_Code) Enum() *SCInviteToJoinRoom_Code {
	p := new(SCInviteToJoinRoom_Code)
	*p = x
	return p
}

func (x SCInviteToJoinRoom_Code) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SCInviteToJoinRoom_Code) Descriptor() protoreflect.EnumDescriptor {
	return file_message_room_proto_enumTypes[3].Descriptor()
}

func (SCInviteToJoinRoom_Code) Type() protoreflect.EnumType {
	return &file_message_room_proto_enumTypes[3]
}

func (x SCInviteToJoinRoom_Code) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SCInviteToJoinRoom_Code.Descriptor instead.
func (SCInviteToJoinRoom_Code) EnumDescriptor() ([]byte, []int) {
	return file_message_room_proto_rawDescGZIP(), []int{13, 0}
}

type SCAgreeToInviteJoinRoom_Code int32

const (
	SCAgreeToInviteJoinRoom_ErrServer            SCAgreeToInviteJoinRoom_Code = 0 // Please try again later
	SCAgreeToInviteJoinRoom_Success              SCAgreeToInviteJoinRoom_Code = 1 // Success
	SCAgreeToInviteJoinRoom_ErrNotInRoom         SCAgreeToInviteJoinRoom_Code = 2 // Not in room
	SCAgreeToInviteJoinRoom_ErrUnauthorized      SCAgreeToInviteJoinRoom_Code = 3 // Unauthorized
	SCAgreeToInviteJoinRoom_ErrUserNotFound      SCAgreeToInviteJoinRoom_Code = 4 // User not found
	SCAgreeToInviteJoinRoom_ErrUserAlreadyInRoom SCAgreeToInviteJoinRoom_Code = 5 // User already in room
	SCAgreeToInviteJoinRoom_ErrUserNotInvited    SCAgreeToInviteJoinRoom_Code = 6 // User not invited
)

// Enum value maps for SCAgreeToInviteJoinRoom_Code.
var (
	SCAgreeToInviteJoinRoom_Code_name = map[int32]string{
		0: "ErrServer",
		1: "Success",
		2: "ErrNotInRoom",
		3: "ErrUnauthorized",
		4: "ErrUserNotFound",
		5: "ErrUserAlreadyInRoom",
		6: "ErrUserNotInvited",
	}
	SCAgreeToInviteJoinRoom_Code_value = map[string]int32{
		"ErrServer":            0,
		"Success":              1,
		"ErrNotInRoom":         2,
		"ErrUnauthorized":      3,
		"ErrUserNotFound":      4,
		"ErrUserAlreadyInRoom": 5,
		"ErrUserNotInvited":    6,
	}
)

func (x SCAgreeToInviteJoinRoom_Code) Enum() *SCAgreeToInviteJoinRoom_Code {
	p := new(SCAgreeToInviteJoinRoom_Code)
	*p = x
	return p
}

func (x SCAgreeToInviteJoinRoom_Code) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SCAgreeToInviteJoinRoom_Code) Descriptor() protoreflect.EnumDescriptor {
	return file_message_room_proto_enumTypes[4].Descriptor()
}

func (SCAgreeToInviteJoinRoom_Code) Type() protoreflect.EnumType {
	return &file_message_room_proto_enumTypes[4]
}

func (x SCAgreeToInviteJoinRoom_Code) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SCAgreeToInviteJoinRoom_Code.Descriptor instead.
func (SCAgreeToInviteJoinRoom_Code) EnumDescriptor() ([]byte, []int) {
	return file_message_room_proto_rawDescGZIP(), []int{15, 0}
}

type SCRequestToJoinRoom_Code int32

const (
	SCRequestToJoinRoom_ErrServer           SCRequestToJoinRoom_Code = 0 // Please try again later
	SCRequestToJoinRoom_Success             SCRequestToJoinRoom_Code = 1 // Success
	SCRequestToJoinRoom_ErrAlreadyInRoom    SCRequestToJoinRoom_Code = 2 // Already in room
	SCRequestToJoinRoom_ErrRoomNotFound     SCRequestToJoinRoom_Code = 3 // Room not found
	SCRequestToJoinRoom_ErrAlreadyRequested SCRequestToJoinRoom_Code = 4 // Already requested
)

// Enum value maps for SCRequestToJoinRoom_Code.
var (
	SCRequestToJoinRoom_Code_name = map[int32]string{
		0: "ErrServer",
		1: "Success",
		2: "ErrAlreadyInRoom",
		3: "ErrRoomNotFound",
		4: "ErrAlreadyRequested",
	}
	SCRequestToJoinRoom_Code_value = map[string]int32{
		"ErrServer":           0,
		"Success":             1,
		"ErrAlreadyInRoom":    2,
		"ErrRoomNotFound":     3,
		"ErrAlreadyRequested": 4,
	}
)

func (x SCRequestToJoinRoom_Code) Enum() *SCRequestToJoinRoom_Code {
	p := new(SCRequestToJoinRoom_Code)
	*p = x
	return p
}

func (x SCRequestToJoinRoom_Code) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SCRequestToJoinRoom_Code) Descriptor() protoreflect.EnumDescriptor {
	return file_message_room_proto_enumTypes[5].Descriptor()
}

func (SCRequestToJoinRoom_Code) Type() protoreflect.EnumType {
	return &file_message_room_proto_enumTypes[5]
}

func (x SCRequestToJoinRoom_Code) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SCRequestToJoinRoom_Code.Descriptor instead.
func (SCRequestToJoinRoom_Code) EnumDescriptor() ([]byte, []int) {
	return file_message_room_proto_rawDescGZIP(), []int{17, 0}
}

type SCApproveRequestToJoinRoom_Code int32

const (
	SCApproveRequestToJoinRoom_ErrServer            SCApproveRequestToJoinRoom_Code = 0 // Please try again later
	SCApproveRequestToJoinRoom_Success              SCApproveRequestToJoinRoom_Code = 1 // Success
	SCApproveRequestToJoinRoom_ErrNotInRoom         SCApproveRequestToJoinRoom_Code = 2 // Not in room
	SCApproveRequestToJoinRoom_ErrUnauthorized      SCApproveRequestToJoinRoom_Code = 3 // Unauthorized
	SCApproveRequestToJoinRoom_ErrUserNotFound      SCApproveRequestToJoinRoom_Code = 4 // User not found
	SCApproveRequestToJoinRoom_ErrUserAlreadyInRoom SCApproveRequestToJoinRoom_Code = 5 // User already in room
	SCApproveRequestToJoinRoom_ErrUserNotRequested  SCApproveRequestToJoinRoom_Code = 6 // User not requested
)

// Enum value maps for SCApproveRequestToJoinRoom_Code.
var (
	SCApproveRequestToJoinRoom_Code_name = map[int32]string{
		0: "ErrServer",
		1: "Success",
		2: "ErrNotInRoom",
		3: "ErrUnauthorized",
		4: "ErrUserNotFound",
		5: "ErrUserAlreadyInRoom",
		6: "ErrUserNotRequested",
	}
	SCApproveRequestToJoinRoom_Code_value = map[string]int32{
		"ErrServer":            0,
		"Success":              1,
		"ErrNotInRoom":         2,
		"ErrUnauthorized":      3,
		"ErrUserNotFound":      4,
		"ErrUserAlreadyInRoom": 5,
		"ErrUserNotRequested":  6,
	}
)

func (x SCApproveRequestToJoinRoom_Code) Enum() *SCApproveRequestToJoinRoom_Code {
	p := new(SCApproveRequestToJoinRoom_Code)
	*p = x
	return p
}

func (x SCApproveRequestToJoinRoom_Code) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SCApproveRequestToJoinRoom_Code) Descriptor() protoreflect.EnumDescriptor {
	return file_message_room_proto_enumTypes[6].Descriptor()
}

func (SCApproveRequestToJoinRoom_Code) Type() protoreflect.EnumType {
	return &file_message_room_proto_enumTypes[6]
}

func (x SCApproveRequestToJoinRoom_Code) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SCApproveRequestToJoinRoom_Code.Descriptor instead.
func (SCApproveRequestToJoinRoom_Code) EnumDescriptor() ([]byte, []int) {
	return file_message_room_proto_rawDescGZIP(), []int{19, 0}
}

type SCKickUserFromRoom_Code int32

const (
	SCKickUserFromRoom_ErrServer        SCKickUserFromRoom_Code = 0 // Please try again later
	SCKickUserFromRoom_Success          SCKickUserFromRoom_Code = 1 // Success
	SCKickUserFromRoom_ErrNotInRoom     SCKickUserFromRoom_Code = 2 // Not in room
	SCKickUserFromRoom_ErrUnauthorized  SCKickUserFromRoom_Code = 3 // Unauthorized
	SCKickUserFromRoom_ErrUserNotFound  SCKickUserFromRoom_Code = 4 // User not found
	SCKickUserFromRoom_ErrUserNotInRoom SCKickUserFromRoom_Code = 5 // User not in room
)

// Enum value maps for SCKickUserFromRoom_Code.
var (
	SCKickUserFromRoom_Code_name = map[int32]string{
		0: "ErrServer",
		1: "Success",
		2: "ErrNotInRoom",
		3: "ErrUnauthorized",
		4: "ErrUserNotFound",
		5: "ErrUserNotInRoom",
	}
	SCKickUserFromRoom_Code_value = map[string]int32{
		"ErrServer":        0,
		"Success":          1,
		"ErrNotInRoom":     2,
		"ErrUnauthorized":  3,
		"ErrUserNotFound":  4,
		"ErrUserNotInRoom": 5,
	}
)

func (x SCKickUserFromRoom_Code) Enum() *SCKickUserFromRoom_Code {
	p := new(SCKickUserFromRoom_Code)
	*p = x
	return p
}

func (x SCKickUserFromRoom_Code) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SCKickUserFromRoom_Code) Descriptor() protoreflect.EnumDescriptor {
	return file_message_room_proto_enumTypes[7].Descriptor()
}

func (SCKickUserFromRoom_Code) Type() protoreflect.EnumType {
	return &file_message_room_proto_enumTypes[7]
}

func (x SCKickUserFromRoom_Code) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SCKickUserFromRoom_Code.Descriptor instead.
func (SCKickUserFromRoom_Code) EnumDescriptor() ([]byte, []int) {
	return file_message_room_proto_rawDescGZIP(), []int{21, 0}
}

type SCLeaveRoom_Code int32

const (
	SCLeaveRoom_ErrServer    SCLeaveRoom_Code = 0 // Please try again later
	SCLeaveRoom_Success      SCLeaveRoom_Code = 1 // Success
	SCLeaveRoom_ErrNotInRoom SCLeaveRoom_Code = 2 // Not in room
	SCLeaveRoom_ErrIsCreator SCLeaveRoom_Code = 3 // Is creator
)

// Enum value maps for SCLeaveRoom_Code.
var (
	SCLeaveRoom_Code_name = map[int32]string{
		0: "ErrServer",
		1: "Success",
		2: "ErrNotInRoom",
		3: "ErrIsCreator",
	}
	SCLeaveRoom_Code_value = map[string]int32{
		"ErrServer":    0,
		"Success":      1,
		"ErrNotInRoom": 2,
		"ErrIsCreator": 3,
	}
)

func (x SCLeaveRoom_Code) Enum() *SCLeaveRoom_Code {
	p := new(SCLeaveRoom_Code)
	*p = x
	return p
}

func (x SCLeaveRoom_Code) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SCLeaveRoom_Code) Descriptor() protoreflect.EnumDescriptor {
	return file_message_room_proto_enumTypes[8].Descriptor()
}

func (SCLeaveRoom_Code) Type() protoreflect.EnumType {
	return &file_message_room_proto_enumTypes[8]
}

func (x SCLeaveRoom_Code) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SCLeaveRoom_Code.Descriptor instead.
func (SCLeaveRoom_Code) EnumDescriptor() ([]byte, []int) {
	return file_message_room_proto_rawDescGZIP(), []int{23, 0}
}

type SCCloseRoom_Code int32

const (
	SCCloseRoom_ErrServer       SCCloseRoom_Code = 0 // Please try again later
	SCCloseRoom_Success         SCCloseRoom_Code = 1 // Success
	SCCloseRoom_ErrNotInRoom    SCCloseRoom_Code = 2 // Not in room
	SCCloseRoom_ErrUnauthorized SCCloseRoom_Code = 3 // Unauthorized
)

// Enum value maps for SCCloseRoom_Code.
var (
	SCCloseRoom_Code_name = map[int32]string{
		0: "ErrServer",
		1: "Success",
		2: "ErrNotInRoom",
		3: "ErrUnauthorized",
	}
	SCCloseRoom_Code_value = map[string]int32{
		"ErrServer":       0,
		"Success":         1,
		"ErrNotInRoom":    2,
		"ErrUnauthorized": 3,
	}
)

func (x SCCloseRoom_Code) Enum() *SCCloseRoom_Code {
	p := new(SCCloseRoom_Code)
	*p = x
	return p
}

func (x SCCloseRoom_Code) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SCCloseRoom_Code) Descriptor() protoreflect.EnumDescriptor {
	return file_message_room_proto_enumTypes[9].Descriptor()
}

func (SCCloseRoom_Code) Type() protoreflect.EnumType {
	return &file_message_room_proto_enumTypes[9]
}

func (x SCCloseRoom_Code) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SCCloseRoom_Code.Descriptor instead.
func (SCCloseRoom_Code) EnumDescriptor() ([]byte, []int) {
	return file_message_room_proto_rawDescGZIP(), []int{25, 0}
}

type UserRoomProto struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RoomId        int64                  `protobuf:"varint,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"` // Room ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserRoomProto) Reset() {
	*x = UserRoomProto{}
	mi := &file_message_room_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserRoomProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserRoomProto) ProtoMessage() {}

func (x *UserRoomProto) ProtoReflect() protoreflect.Message {
	mi := &file_message_room_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserRoomProto.ProtoReflect.Descriptor instead.
func (*UserRoomProto) Descriptor() ([]byte, []int) {
	return file_message_room_proto_rawDescGZIP(), []int{0}
}

func (x *UserRoomProto) GetRoomId() int64 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

// Room data
type RoomProto struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	Basic         *RoomBasicProto            `protobuf:"bytes,1,opt,name=basic,proto3" json:"basic,omitempty"`                                                                                // Room basic data
	Members       map[int64]*RoomMemberProto `protobuf:"bytes,2,rep,name=members,proto3" json:"members,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // user ID -> room member data
	Invitees      []int64                    `protobuf:"varint,3,rep,packed,name=invitees,proto3" json:"invitees,omitempty"`                                                                  // Invitees
	Requests      []int64                    `protobuf:"varint,4,rep,packed,name=requests,proto3" json:"requests,omitempty"`                                                                  // Requests
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RoomProto) Reset() {
	*x = RoomProto{}
	mi := &file_message_room_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RoomProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomProto) ProtoMessage() {}

func (x *RoomProto) ProtoReflect() protoreflect.Message {
	mi := &file_message_room_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomProto.ProtoReflect.Descriptor instead.
func (*RoomProto) Descriptor() ([]byte, []int) {
	return file_message_room_proto_rawDescGZIP(), []int{1}
}

func (x *RoomProto) GetBasic() *RoomBasicProto {
	if x != nil {
		return x.Basic
	}
	return nil
}

func (x *RoomProto) GetMembers() map[int64]*RoomMemberProto {
	if x != nil {
		return x.Members
	}
	return nil
}

func (x *RoomProto) GetInvitees() []int64 {
	if x != nil {
		return x.Invitees
	}
	return nil
}

func (x *RoomProto) GetRequests() []int64 {
	if x != nil {
		return x.Requests
	}
	return nil
}

// Room basic data
type RoomBasicProto struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                // Room ID
	RoomType      uint64                 `protobuf:"varint,2,opt,name=room_type,json=roomType,proto3" json:"room_type,omitempty"`    // room type
	Creator       *UserBasicProto        `protobuf:"bytes,3,opt,name=creator,proto3" json:"creator,omitempty"`                       // Creator
	CreatedAt     int64                  `protobuf:"varint,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"` // Created at
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RoomBasicProto) Reset() {
	*x = RoomBasicProto{}
	mi := &file_message_room_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RoomBasicProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomBasicProto) ProtoMessage() {}

func (x *RoomBasicProto) ProtoReflect() protoreflect.Message {
	mi := &file_message_room_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomBasicProto.ProtoReflect.Descriptor instead.
func (*RoomBasicProto) Descriptor() ([]byte, []int) {
	return file_message_room_proto_rawDescGZIP(), []int{2}
}

func (x *RoomBasicProto) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RoomBasicProto) GetRoomType() uint64 {
	if x != nil {
		return x.RoomType
	}
	return 0
}

func (x *RoomBasicProto) GetCreator() *UserBasicProto {
	if x != nil {
		return x.Creator
	}
	return nil
}

func (x *RoomBasicProto) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

// Room member
type RoomMemberProto struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	User          *UserBasicProto        `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`                          // User basic data
	JoinedAt      int64                  `protobuf:"varint,2,opt,name=joined_at,json=joinedAt,proto3" json:"joined_at,omitempty"` // Joined at
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RoomMemberProto) Reset() {
	*x = RoomMemberProto{}
	mi := &file_message_room_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RoomMemberProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomMemberProto) ProtoMessage() {}

func (x *RoomMemberProto) ProtoReflect() protoreflect.Message {
	mi := &file_message_room_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomMemberProto.ProtoReflect.Descriptor instead.
func (*RoomMemberProto) Descriptor() ([]byte, []int) {
	return file_message_room_proto_rawDescGZIP(), []int{3}
}

func (x *RoomMemberProto) GetUser() *UserBasicProto {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *RoomMemberProto) GetJoinedAt() int64 {
	if x != nil {
		return x.JoinedAt
	}
	return 0
}

// Push: Joined room
type SCPushJoinedRoom struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RoomId        int64                  `protobuf:"varint,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"` // Room ID
	Member        *RoomMemberProto       `protobuf:"bytes,2,opt,name=member,proto3" json:"member,omitempty"`                // Room member data
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SCPushJoinedRoom) Reset() {
	*x = SCPushJoinedRoom{}
	mi := &file_message_room_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SCPushJoinedRoom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCPushJoinedRoom) ProtoMessage() {}

func (x *SCPushJoinedRoom) ProtoReflect() protoreflect.Message {
	mi := &file_message_room_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCPushJoinedRoom.ProtoReflect.Descriptor instead.
func (*SCPushJoinedRoom) Descriptor() ([]byte, []int) {
	return file_message_room_proto_rawDescGZIP(), []int{4}
}

func (x *SCPushJoinedRoom) GetRoomId() int64 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

func (x *SCPushJoinedRoom) GetMember() *RoomMemberProto {
	if x != nil {
		return x.Member
	}
	return nil
}

// Push: Removed from room. Leave, be kicked or room closed
type SCPushRemovedFromRoom struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RoomId        int64                  `protobuf:"varint,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"` // Room ID
	Member        *RoomMemberProto       `protobuf:"bytes,2,opt,name=member,proto3" json:"member,omitempty"`                // Room member data
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SCPushRemovedFromRoom) Reset() {
	*x = SCPushRemovedFromRoom{}
	mi := &file_message_room_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SCPushRemovedFromRoom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCPushRemovedFromRoom) ProtoMessage() {}

func (x *SCPushRemovedFromRoom) ProtoReflect() protoreflect.Message {
	mi := &file_message_room_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCPushRemovedFromRoom.ProtoReflect.Descriptor instead.
func (*SCPushRemovedFromRoom) Descriptor() ([]byte, []int) {
	return file_message_room_proto_rawDescGZIP(), []int{5}
}

func (x *SCPushRemovedFromRoom) GetRoomId() int64 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

func (x *SCPushRemovedFromRoom) GetMember() *RoomMemberProto {
	if x != nil {
		return x.Member
	}
	return nil
}

// Request: Room List
type CSRoomList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Page          int64                  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`                         // Page number
	PageSize      int64                  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"` // Page size
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CSRoomList) Reset() {
	*x = CSRoomList{}
	mi := &file_message_room_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSRoomList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSRoomList) ProtoMessage() {}

func (x *CSRoomList) ProtoReflect() protoreflect.Message {
	mi := &file_message_room_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSRoomList.ProtoReflect.Descriptor instead.
func (*CSRoomList) Descriptor() ([]byte, []int) {
	return file_message_room_proto_rawDescGZIP(), []int{6}
}

func (x *CSRoomList) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *CSRoomList) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

// Response: Room List
type SCRoomList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          SCRoomList_Code        `protobuf:"varint,1,opt,name=code,proto3,enum=message.SCRoomList_Code" json:"code,omitempty"` // Status code
	Rooms         []*RoomBasicProto      `protobuf:"bytes,2,rep,name=rooms,proto3" json:"rooms,omitempty"`                             // Room basic data list
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SCRoomList) Reset() {
	*x = SCRoomList{}
	mi := &file_message_room_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SCRoomList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCRoomList) ProtoMessage() {}

func (x *SCRoomList) ProtoReflect() protoreflect.Message {
	mi := &file_message_room_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCRoomList.ProtoReflect.Descriptor instead.
func (*SCRoomList) Descriptor() ([]byte, []int) {
	return file_message_room_proto_rawDescGZIP(), []int{7}
}

func (x *SCRoomList) GetCode() SCRoomList_Code {
	if x != nil {
		return x.Code
	}
	return SCRoomList_ErrServer
}

func (x *SCRoomList) GetRooms() []*RoomBasicProto {
	if x != nil {
		return x.Rooms
	}
	return nil
}

// Request: Room detail
type CSRoomDetail struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RoomId        int64                  `protobuf:"varint,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"` // Room ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CSRoomDetail) Reset() {
	*x = CSRoomDetail{}
	mi := &file_message_room_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSRoomDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSRoomDetail) ProtoMessage() {}

func (x *CSRoomDetail) ProtoReflect() protoreflect.Message {
	mi := &file_message_room_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSRoomDetail.ProtoReflect.Descriptor instead.
func (*CSRoomDetail) Descriptor() ([]byte, []int) {
	return file_message_room_proto_rawDescGZIP(), []int{8}
}

func (x *CSRoomDetail) GetRoomId() int64 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

// Response: Room detail
type SCRoomDetail struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          SCRoomDetail_Code      `protobuf:"varint,1,opt,name=code,proto3,enum=message.SCRoomDetail_Code" json:"code,omitempty"` // Status code
	Room          *RoomProto             `protobuf:"bytes,2,opt,name=room,proto3" json:"room,omitempty"`                                 // Room data
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SCRoomDetail) Reset() {
	*x = SCRoomDetail{}
	mi := &file_message_room_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SCRoomDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCRoomDetail) ProtoMessage() {}

func (x *SCRoomDetail) ProtoReflect() protoreflect.Message {
	mi := &file_message_room_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCRoomDetail.ProtoReflect.Descriptor instead.
func (*SCRoomDetail) Descriptor() ([]byte, []int) {
	return file_message_room_proto_rawDescGZIP(), []int{9}
}

func (x *SCRoomDetail) GetCode() SCRoomDetail_Code {
	if x != nil {
		return x.Code
	}
	return SCRoomDetail_ErrServer
}

func (x *SCRoomDetail) GetRoom() *RoomProto {
	if x != nil {
		return x.Room
	}
	return nil
}

// Request: Create room
type CSCreateRoom struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RoomType      uint64                 `protobuf:"varint,1,opt,name=room_type,json=roomType,proto3" json:"room_type,omitempty"` // Room type
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CSCreateRoom) Reset() {
	*x = CSCreateRoom{}
	mi := &file_message_room_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSCreateRoom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSCreateRoom) ProtoMessage() {}

func (x *CSCreateRoom) ProtoReflect() protoreflect.Message {
	mi := &file_message_room_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSCreateRoom.ProtoReflect.Descriptor instead.
func (*CSCreateRoom) Descriptor() ([]byte, []int) {
	return file_message_room_proto_rawDescGZIP(), []int{10}
}

func (x *CSCreateRoom) GetRoomType() uint64 {
	if x != nil {
		return x.RoomType
	}
	return 0
}

// Response: Create room
type SCCreateRoom struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          SCCreateRoom_Code      `protobuf:"varint,1,opt,name=code,proto3,enum=message.SCCreateRoom_Code" json:"code,omitempty"` // Status code
	Room          *RoomProto             `protobuf:"bytes,2,opt,name=room,proto3" json:"room,omitempty"`                                 // Room data
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SCCreateRoom) Reset() {
	*x = SCCreateRoom{}
	mi := &file_message_room_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SCCreateRoom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCCreateRoom) ProtoMessage() {}

func (x *SCCreateRoom) ProtoReflect() protoreflect.Message {
	mi := &file_message_room_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCCreateRoom.ProtoReflect.Descriptor instead.
func (*SCCreateRoom) Descriptor() ([]byte, []int) {
	return file_message_room_proto_rawDescGZIP(), []int{11}
}

func (x *SCCreateRoom) GetCode() SCCreateRoom_Code {
	if x != nil {
		return x.Code
	}
	return SCCreateRoom_ErrServer
}

func (x *SCCreateRoom) GetRoom() *RoomProto {
	if x != nil {
		return x.Room
	}
	return nil
}

// Request: Invite to join room
type CSInviteToJoinRoom struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int64                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // User ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CSInviteToJoinRoom) Reset() {
	*x = CSInviteToJoinRoom{}
	mi := &file_message_room_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSInviteToJoinRoom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSInviteToJoinRoom) ProtoMessage() {}

func (x *CSInviteToJoinRoom) ProtoReflect() protoreflect.Message {
	mi := &file_message_room_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSInviteToJoinRoom.ProtoReflect.Descriptor instead.
func (*CSInviteToJoinRoom) Descriptor() ([]byte, []int) {
	return file_message_room_proto_rawDescGZIP(), []int{12}
}

func (x *CSInviteToJoinRoom) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

// Response: Invite to join room
type SCInviteToJoinRoom struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Code          SCInviteToJoinRoom_Code `protobuf:"varint,1,opt,name=code,proto3,enum=message.SCInviteToJoinRoom_Code" json:"code,omitempty"` // Status code
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SCInviteToJoinRoom) Reset() {
	*x = SCInviteToJoinRoom{}
	mi := &file_message_room_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SCInviteToJoinRoom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCInviteToJoinRoom) ProtoMessage() {}

func (x *SCInviteToJoinRoom) ProtoReflect() protoreflect.Message {
	mi := &file_message_room_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCInviteToJoinRoom.ProtoReflect.Descriptor instead.
func (*SCInviteToJoinRoom) Descriptor() ([]byte, []int) {
	return file_message_room_proto_rawDescGZIP(), []int{13}
}

func (x *SCInviteToJoinRoom) GetCode() SCInviteToJoinRoom_Code {
	if x != nil {
		return x.Code
	}
	return SCInviteToJoinRoom_ErrServer
}

// Request: Agree to invite to join room
type CSAgreeToInviteJoinRoom struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RoomId        int64                  `protobuf:"varint,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"` // Room ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CSAgreeToInviteJoinRoom) Reset() {
	*x = CSAgreeToInviteJoinRoom{}
	mi := &file_message_room_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSAgreeToInviteJoinRoom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSAgreeToInviteJoinRoom) ProtoMessage() {}

func (x *CSAgreeToInviteJoinRoom) ProtoReflect() protoreflect.Message {
	mi := &file_message_room_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSAgreeToInviteJoinRoom.ProtoReflect.Descriptor instead.
func (*CSAgreeToInviteJoinRoom) Descriptor() ([]byte, []int) {
	return file_message_room_proto_rawDescGZIP(), []int{14}
}

func (x *CSAgreeToInviteJoinRoom) GetRoomId() int64 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

// Response: Agree to invite to join room
type SCAgreeToInviteJoinRoom struct {
	state         protoimpl.MessageState       `protogen:"open.v1"`
	Code          SCAgreeToInviteJoinRoom_Code `protobuf:"varint,1,opt,name=code,proto3,enum=message.SCAgreeToInviteJoinRoom_Code" json:"code,omitempty"` // Status code
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SCAgreeToInviteJoinRoom) Reset() {
	*x = SCAgreeToInviteJoinRoom{}
	mi := &file_message_room_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SCAgreeToInviteJoinRoom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCAgreeToInviteJoinRoom) ProtoMessage() {}

func (x *SCAgreeToInviteJoinRoom) ProtoReflect() protoreflect.Message {
	mi := &file_message_room_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCAgreeToInviteJoinRoom.ProtoReflect.Descriptor instead.
func (*SCAgreeToInviteJoinRoom) Descriptor() ([]byte, []int) {
	return file_message_room_proto_rawDescGZIP(), []int{15}
}

func (x *SCAgreeToInviteJoinRoom) GetCode() SCAgreeToInviteJoinRoom_Code {
	if x != nil {
		return x.Code
	}
	return SCAgreeToInviteJoinRoom_ErrServer
}

// Request: Request to join room
type CSRequestToJoinRoom struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RoomId        int64                  `protobuf:"varint,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"` // Room ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CSRequestToJoinRoom) Reset() {
	*x = CSRequestToJoinRoom{}
	mi := &file_message_room_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSRequestToJoinRoom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSRequestToJoinRoom) ProtoMessage() {}

func (x *CSRequestToJoinRoom) ProtoReflect() protoreflect.Message {
	mi := &file_message_room_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSRequestToJoinRoom.ProtoReflect.Descriptor instead.
func (*CSRequestToJoinRoom) Descriptor() ([]byte, []int) {
	return file_message_room_proto_rawDescGZIP(), []int{16}
}

func (x *CSRequestToJoinRoom) GetRoomId() int64 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

// Response: Request to join room
type SCRequestToJoinRoom struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Code          SCRequestToJoinRoom_Code `protobuf:"varint,1,opt,name=code,proto3,enum=message.SCRequestToJoinRoom_Code" json:"code,omitempty"` // Status code
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SCRequestToJoinRoom) Reset() {
	*x = SCRequestToJoinRoom{}
	mi := &file_message_room_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SCRequestToJoinRoom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCRequestToJoinRoom) ProtoMessage() {}

func (x *SCRequestToJoinRoom) ProtoReflect() protoreflect.Message {
	mi := &file_message_room_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCRequestToJoinRoom.ProtoReflect.Descriptor instead.
func (*SCRequestToJoinRoom) Descriptor() ([]byte, []int) {
	return file_message_room_proto_rawDescGZIP(), []int{17}
}

func (x *SCRequestToJoinRoom) GetCode() SCRequestToJoinRoom_Code {
	if x != nil {
		return x.Code
	}
	return SCRequestToJoinRoom_ErrServer
}

// Request: Approve request to join room
type CSApproveRequestToJoinRoom struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int64                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // User ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CSApproveRequestToJoinRoom) Reset() {
	*x = CSApproveRequestToJoinRoom{}
	mi := &file_message_room_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSApproveRequestToJoinRoom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSApproveRequestToJoinRoom) ProtoMessage() {}

func (x *CSApproveRequestToJoinRoom) ProtoReflect() protoreflect.Message {
	mi := &file_message_room_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSApproveRequestToJoinRoom.ProtoReflect.Descriptor instead.
func (*CSApproveRequestToJoinRoom) Descriptor() ([]byte, []int) {
	return file_message_room_proto_rawDescGZIP(), []int{18}
}

func (x *CSApproveRequestToJoinRoom) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

// Response: Approve request to join room
type SCApproveRequestToJoinRoom struct {
	state         protoimpl.MessageState          `protogen:"open.v1"`
	Code          SCApproveRequestToJoinRoom_Code `protobuf:"varint,1,opt,name=code,proto3,enum=message.SCApproveRequestToJoinRoom_Code" json:"code,omitempty"` // Status code
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SCApproveRequestToJoinRoom) Reset() {
	*x = SCApproveRequestToJoinRoom{}
	mi := &file_message_room_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SCApproveRequestToJoinRoom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCApproveRequestToJoinRoom) ProtoMessage() {}

func (x *SCApproveRequestToJoinRoom) ProtoReflect() protoreflect.Message {
	mi := &file_message_room_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCApproveRequestToJoinRoom.ProtoReflect.Descriptor instead.
func (*SCApproveRequestToJoinRoom) Descriptor() ([]byte, []int) {
	return file_message_room_proto_rawDescGZIP(), []int{19}
}

func (x *SCApproveRequestToJoinRoom) GetCode() SCApproveRequestToJoinRoom_Code {
	if x != nil {
		return x.Code
	}
	return SCApproveRequestToJoinRoom_ErrServer
}

// Request: Kick user from room
type CSKickUserFromRoom struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int64                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // User ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CSKickUserFromRoom) Reset() {
	*x = CSKickUserFromRoom{}
	mi := &file_message_room_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSKickUserFromRoom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSKickUserFromRoom) ProtoMessage() {}

func (x *CSKickUserFromRoom) ProtoReflect() protoreflect.Message {
	mi := &file_message_room_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSKickUserFromRoom.ProtoReflect.Descriptor instead.
func (*CSKickUserFromRoom) Descriptor() ([]byte, []int) {
	return file_message_room_proto_rawDescGZIP(), []int{20}
}

func (x *CSKickUserFromRoom) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

// Response: Kick user from room
type SCKickUserFromRoom struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Code          SCKickUserFromRoom_Code `protobuf:"varint,1,opt,name=code,proto3,enum=message.SCKickUserFromRoom_Code" json:"code,omitempty"` // Status code
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SCKickUserFromRoom) Reset() {
	*x = SCKickUserFromRoom{}
	mi := &file_message_room_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SCKickUserFromRoom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCKickUserFromRoom) ProtoMessage() {}

func (x *SCKickUserFromRoom) ProtoReflect() protoreflect.Message {
	mi := &file_message_room_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCKickUserFromRoom.ProtoReflect.Descriptor instead.
func (*SCKickUserFromRoom) Descriptor() ([]byte, []int) {
	return file_message_room_proto_rawDescGZIP(), []int{21}
}

func (x *SCKickUserFromRoom) GetCode() SCKickUserFromRoom_Code {
	if x != nil {
		return x.Code
	}
	return SCKickUserFromRoom_ErrServer
}

// Request: Leave room
type CSLeaveRoom struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RoomId        int64                  `protobuf:"varint,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"` // Room ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CSLeaveRoom) Reset() {
	*x = CSLeaveRoom{}
	mi := &file_message_room_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSLeaveRoom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSLeaveRoom) ProtoMessage() {}

func (x *CSLeaveRoom) ProtoReflect() protoreflect.Message {
	mi := &file_message_room_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSLeaveRoom.ProtoReflect.Descriptor instead.
func (*CSLeaveRoom) Descriptor() ([]byte, []int) {
	return file_message_room_proto_rawDescGZIP(), []int{22}
}

func (x *CSLeaveRoom) GetRoomId() int64 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

// Response: Leave room
type SCLeaveRoom struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          SCLeaveRoom_Code       `protobuf:"varint,1,opt,name=code,proto3,enum=message.SCLeaveRoom_Code" json:"code,omitempty"` // Status code
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SCLeaveRoom) Reset() {
	*x = SCLeaveRoom{}
	mi := &file_message_room_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SCLeaveRoom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCLeaveRoom) ProtoMessage() {}

func (x *SCLeaveRoom) ProtoReflect() protoreflect.Message {
	mi := &file_message_room_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCLeaveRoom.ProtoReflect.Descriptor instead.
func (*SCLeaveRoom) Descriptor() ([]byte, []int) {
	return file_message_room_proto_rawDescGZIP(), []int{23}
}

func (x *SCLeaveRoom) GetCode() SCLeaveRoom_Code {
	if x != nil {
		return x.Code
	}
	return SCLeaveRoom_ErrServer
}

// Request: Close room
type CSCloseRoom struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RoomId        int64                  `protobuf:"varint,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"` // Room ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CSCloseRoom) Reset() {
	*x = CSCloseRoom{}
	mi := &file_message_room_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSCloseRoom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSCloseRoom) ProtoMessage() {}

func (x *CSCloseRoom) ProtoReflect() protoreflect.Message {
	mi := &file_message_room_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSCloseRoom.ProtoReflect.Descriptor instead.
func (*CSCloseRoom) Descriptor() ([]byte, []int) {
	return file_message_room_proto_rawDescGZIP(), []int{24}
}

func (x *CSCloseRoom) GetRoomId() int64 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

// Response: Close room
type SCCloseRoom struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          SCCloseRoom_Code       `protobuf:"varint,1,opt,name=code,proto3,enum=message.SCCloseRoom_Code" json:"code,omitempty"` // Status code
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SCCloseRoom) Reset() {
	*x = SCCloseRoom{}
	mi := &file_message_room_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SCCloseRoom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCCloseRoom) ProtoMessage() {}

func (x *SCCloseRoom) ProtoReflect() protoreflect.Message {
	mi := &file_message_room_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCCloseRoom.ProtoReflect.Descriptor instead.
func (*SCCloseRoom) Descriptor() ([]byte, []int) {
	return file_message_room_proto_rawDescGZIP(), []int{25}
}

func (x *SCCloseRoom) GetCode() SCCloseRoom_Code {
	if x != nil {
		return x.Code
	}
	return SCCloseRoom_ErrServer
}

var File_message_room_proto protoreflect.FileDescriptor

var file_message_room_proto_rawDesc = string([]byte{
	0x0a, 0x12, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x1c, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x62, 0x61, 0x73, 0x69, 0x63, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x28, 0x0a, 0x0d, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6f,
	0x6d, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x22,
	0x83, 0x02, 0x0a, 0x09, 0x52, 0x6f, 0x6f, 0x6d, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x2d, 0x0a,
	0x05, 0x62, 0x61, 0x73, 0x69, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x42, 0x61, 0x73, 0x69, 0x63,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x05, 0x62, 0x61, 0x73, 0x69, 0x63, 0x12, 0x39, 0x0a, 0x07,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x76, 0x69, 0x74,
	0x65, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x03, 0x52, 0x08, 0x69, 0x6e, 0x76, 0x69, 0x74,
	0x65, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x03, 0x52, 0x08, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x1a,
	0x54, 0x0a, 0x0c, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x2e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x8f, 0x01, 0x0a, 0x0e, 0x52, 0x6f, 0x6f, 0x6d, 0x42, 0x61,
	0x73, 0x69, 0x63, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x6f, 0x6d,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x72, 0x6f, 0x6f,
	0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x31, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x73, 0x69, 0x63, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52,
	0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x5b, 0x0a, 0x0f, 0x52, 0x6f, 0x6f, 0x6d, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x2b, 0x0a, 0x04, 0x75, 0x73,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x73, 0x69, 0x63, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x6a, 0x6f, 0x69, 0x6e, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6a, 0x6f, 0x69, 0x6e,
	0x65, 0x64, 0x41, 0x74, 0x22, 0x5d, 0x0a, 0x10, 0x53, 0x43, 0x50, 0x75, 0x73, 0x68, 0x4a, 0x6f,
	0x69, 0x6e, 0x65, 0x64, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49,
	0x64, 0x12, 0x30, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x52, 0x6f, 0x6f, 0x6d,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x06, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x22, 0x62, 0x0a, 0x15, 0x53, 0x43, 0x50, 0x75, 0x73, 0x68, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x64, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x17, 0x0a, 0x07,
	0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72,
	0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e,
	0x52, 0x6f, 0x6f, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52,
	0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x3d, 0x0a, 0x0a, 0x43, 0x53, 0x52, 0x6f, 0x6f,
	0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x8d, 0x01, 0x0a, 0x0a, 0x53, 0x43, 0x52, 0x6f, 0x6f,
	0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x43,
	0x52, 0x6f, 0x6f, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x2d, 0x0a, 0x05, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x52, 0x6f, 0x6f,
	0x6d, 0x42, 0x61, 0x73, 0x69, 0x63, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x05, 0x72, 0x6f, 0x6f,
	0x6d, 0x73, 0x22, 0x22, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x0d, 0x0a, 0x09, 0x45, 0x72,
	0x72, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x10, 0x01, 0x22, 0x27, 0x0a, 0x0c, 0x43, 0x53, 0x52, 0x6f, 0x6f, 0x6d,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x22,
	0x9f, 0x01, 0x0a, 0x0c, 0x53, 0x43, 0x52, 0x6f, 0x6f, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x12, 0x2e, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x43, 0x52, 0x6f, 0x6f, 0x6d, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x26, 0x0a, 0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x22, 0x37, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x0d, 0x0a, 0x09, 0x45, 0x72, 0x72, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x10, 0x00, 0x12,
	0x0b, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f,
	0x45, 0x72, 0x72, 0x52, 0x6f, 0x6f, 0x6d, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x10,
	0x02, 0x22, 0x2b, 0x0a, 0x0c, 0x43, 0x53, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f,
	0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x72, 0x6f, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x22, 0xb8,
	0x01, 0x0a, 0x0c, 0x53, 0x43, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x12,
	0x2e, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x43, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x6f, 0x6f, 0x6d, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x26, 0x0a, 0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x22, 0x50, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x0d, 0x0a, 0x09, 0x45, 0x72, 0x72, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x10, 0x00, 0x12, 0x0b,
	0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x45,
	0x72, 0x72, 0x52, 0x6f, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x72, 0x72, 0x41, 0x6c, 0x72, 0x65, 0x61, 0x64,
	0x79, 0x49, 0x6e, 0x52, 0x6f, 0x6f, 0x6d, 0x10, 0x03, 0x22, 0x2d, 0x0a, 0x12, 0x43, 0x53, 0x49,
	0x6e, 0x76, 0x69, 0x74, 0x65, 0x54, 0x6f, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x6f, 0x6f, 0x6d, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0xe0, 0x01, 0x0a, 0x12, 0x53, 0x43, 0x49,
	0x6e, 0x76, 0x69, 0x74, 0x65, 0x54, 0x6f, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x6f, 0x6f, 0x6d, 0x12,
	0x34, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x43, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65,
	0x54, 0x6f, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x6f, 0x6f, 0x6d, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x93, 0x01, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x0d,
	0x0a, 0x09, 0x45, 0x72, 0x72, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x10, 0x00, 0x12, 0x0b, 0x0a,
	0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x45, 0x72,
	0x72, 0x4e, 0x6f, 0x74, 0x49, 0x6e, 0x52, 0x6f, 0x6f, 0x6d, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f,
	0x45, 0x72, 0x72, 0x55, 0x6e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x10,
	0x03, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x72, 0x72, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x46,
	0x6f, 0x75, 0x6e, 0x64, 0x10, 0x04, 0x12, 0x18, 0x0a, 0x14, 0x45, 0x72, 0x72, 0x55, 0x73, 0x65,
	0x72, 0x41, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x49, 0x6e, 0x52, 0x6f, 0x6f, 0x6d, 0x10, 0x05,
	0x12, 0x19, 0x0a, 0x15, 0x45, 0x72, 0x72, 0x55, 0x73, 0x65, 0x72, 0x41, 0x6c, 0x72, 0x65, 0x61,
	0x64, 0x79, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x64, 0x10, 0x06, 0x22, 0x32, 0x0a, 0x17, 0x43,
	0x53, 0x41, 0x67, 0x72, 0x65, 0x65, 0x54, 0x6f, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x4a, 0x6f,
	0x69, 0x6e, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x22,
	0xe6, 0x01, 0x0a, 0x17, 0x53, 0x43, 0x41, 0x67, 0x72, 0x65, 0x65, 0x54, 0x6f, 0x49, 0x6e, 0x76,
	0x69, 0x74, 0x65, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x39, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x53, 0x43, 0x41, 0x67, 0x72, 0x65, 0x65, 0x54, 0x6f, 0x49, 0x6e, 0x76,
	0x69, 0x74, 0x65, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x6f, 0x6f, 0x6d, 0x2e, 0x43, 0x6f, 0x64, 0x65,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x8f, 0x01, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x0d, 0x0a, 0x09, 0x45, 0x72, 0x72, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x10, 0x00, 0x12, 0x0b,
	0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x45,
	0x72, 0x72, 0x4e, 0x6f, 0x74, 0x49, 0x6e, 0x52, 0x6f, 0x6f, 0x6d, 0x10, 0x02, 0x12, 0x13, 0x0a,
	0x0f, 0x45, 0x72, 0x72, 0x55, 0x6e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64,
	0x10, 0x03, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x72, 0x72, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x6f, 0x74,
	0x46, 0x6f, 0x75, 0x6e, 0x64, 0x10, 0x04, 0x12, 0x18, 0x0a, 0x14, 0x45, 0x72, 0x72, 0x55, 0x73,
	0x65, 0x72, 0x41, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x49, 0x6e, 0x52, 0x6f, 0x6f, 0x6d, 0x10,
	0x05, 0x12, 0x15, 0x0a, 0x11, 0x45, 0x72, 0x72, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x49,
	0x6e, 0x76, 0x69, 0x74, 0x65, 0x64, 0x10, 0x06, 0x22, 0x2e, 0x0a, 0x13, 0x43, 0x53, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x6f, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x6f, 0x6f, 0x6d, 0x12,
	0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x22, 0xb4, 0x01, 0x0a, 0x13, 0x53, 0x43, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x6f, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x6f, 0x6f, 0x6d,
	0x12, 0x35, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x43, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x54, 0x6f, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x6f, 0x6f, 0x6d, 0x2e, 0x43, 0x6f, 0x64,
	0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x66, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x0d, 0x0a, 0x09, 0x45, 0x72, 0x72, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x10, 0x00, 0x12, 0x0b,
	0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x45,
	0x72, 0x72, 0x41, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x49, 0x6e, 0x52, 0x6f, 0x6f, 0x6d, 0x10,
	0x02, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x72, 0x72, 0x52, 0x6f, 0x6f, 0x6d, 0x4e, 0x6f, 0x74, 0x46,
	0x6f, 0x75, 0x6e, 0x64, 0x10, 0x03, 0x12, 0x17, 0x0a, 0x13, 0x45, 0x72, 0x72, 0x41, 0x6c, 0x72,
	0x65, 0x61, 0x64, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x10, 0x04, 0x22,
	0x35, 0x0a, 0x1a, 0x43, 0x53, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x54, 0x6f, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0xee, 0x01, 0x0a, 0x1a, 0x53, 0x43, 0x41, 0x70, 0x70,
	0x72, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x6f, 0x4a, 0x6f, 0x69,
	0x6e, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x3c, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x43,
	0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x6f,
	0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x6f, 0x6f, 0x6d, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x22, 0x91, 0x01, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x0d, 0x0a, 0x09,
	0x45, 0x72, 0x72, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x53,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x45, 0x72, 0x72, 0x4e,
	0x6f, 0x74, 0x49, 0x6e, 0x52, 0x6f, 0x6f, 0x6d, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x72,
	0x72, 0x55, 0x6e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x10, 0x03, 0x12,
	0x13, 0x0a, 0x0f, 0x45, 0x72, 0x72, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75,
	0x6e, 0x64, 0x10, 0x04, 0x12, 0x18, 0x0a, 0x14, 0x45, 0x72, 0x72, 0x55, 0x73, 0x65, 0x72, 0x41,
	0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x49, 0x6e, 0x52, 0x6f, 0x6f, 0x6d, 0x10, 0x05, 0x12, 0x17,
	0x0a, 0x13, 0x45, 0x72, 0x72, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x65, 0x64, 0x10, 0x06, 0x22, 0x2d, 0x0a, 0x12, 0x43, 0x53, 0x4b, 0x69, 0x63,
	0x6b, 0x55, 0x73, 0x65, 0x72, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0xc0, 0x01, 0x0a, 0x12, 0x53, 0x43, 0x4b, 0x69, 0x63,
	0x6b, 0x55, 0x73, 0x65, 0x72, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x34, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x43, 0x4b, 0x69, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x72,
	0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x6f, 0x6d, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x22, 0x74, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x0d, 0x0a, 0x09, 0x45,
	0x72, 0x72, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x45, 0x72, 0x72, 0x4e, 0x6f,
	0x74, 0x49, 0x6e, 0x52, 0x6f, 0x6f, 0x6d, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x72, 0x72,
	0x55, 0x6e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x10, 0x03, 0x12, 0x13,
	0x0a, 0x0f, 0x45, 0x72, 0x72, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e,
	0x64, 0x10, 0x04, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x72, 0x72, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x6f,
	0x74, 0x49, 0x6e, 0x52, 0x6f, 0x6f, 0x6d, 0x10, 0x05, 0x22, 0x26, 0x0a, 0x0b, 0x43, 0x53, 0x4c,
	0x65, 0x61, 0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49,
	0x64, 0x22, 0x84, 0x01, 0x0a, 0x0b, 0x53, 0x43, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x52, 0x6f, 0x6f,
	0x6d, 0x12, 0x2d, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x19, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x43, 0x4c, 0x65, 0x61, 0x76,
	0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x22, 0x46, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x0d, 0x0a, 0x09, 0x45, 0x72, 0x72, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x45, 0x72, 0x72, 0x4e, 0x6f, 0x74, 0x49, 0x6e,
	0x52, 0x6f, 0x6f, 0x6d, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x45, 0x72, 0x72, 0x49, 0x73, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x10, 0x03, 0x22, 0x26, 0x0a, 0x0b, 0x43, 0x53, 0x43, 0x6c,
	0x6f, 0x73, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64,
	0x22, 0x87, 0x01, 0x0a, 0x0b, 0x53, 0x43, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x52, 0x6f, 0x6f, 0x6d,
	0x12, 0x2d, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x43, 0x43, 0x6c, 0x6f, 0x73, 0x65,
	0x52, 0x6f, 0x6f, 0x6d, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22,
	0x49, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x0d, 0x0a, 0x09, 0x45, 0x72, 0x72, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x45, 0x72, 0x72, 0x4e, 0x6f, 0x74, 0x49, 0x6e, 0x52,
	0x6f, 0x6f, 0x6d, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x72, 0x72, 0x55, 0x6e, 0x61, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x10, 0x03, 0x32, 0x8b, 0x08, 0x0a, 0x0e, 0x52,
	0x6f, 0x6f, 0x6d, 0x54, 0x43, 0x50, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4b, 0x0a,
	0x08, 0x52, 0x6f, 0x6f, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x13, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x43, 0x53, 0x52, 0x6f, 0x6f, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x1a, 0x13,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x43, 0x52, 0x6f, 0x6f, 0x6d, 0x4c,
	0x69, 0x73, 0x74, 0x22, 0x15, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0f, 0x3a, 0x01, 0x2a, 0x22, 0x0a,
	0x2f, 0x72, 0x6f, 0x6f, 0x6d, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x53, 0x0a, 0x0a, 0x52, 0x6f,
	0x6f, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x15, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x43, 0x53, 0x52, 0x6f, 0x6f, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x1a,
	0x15, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x43, 0x52, 0x6f, 0x6f, 0x6d,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x22, 0x17, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x11, 0x3a, 0x01,
	0x2a, 0x22, 0x0c, 0x2f, 0x72, 0x6f, 0x6f, 0x6d, 0x2f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12,
	0x53, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x15, 0x2e,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x53, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x6f, 0x6f, 0x6d, 0x1a, 0x15, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53,
	0x43, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x22, 0x17, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x11, 0x3a, 0x01, 0x2a, 0x22, 0x0c, 0x2f, 0x72, 0x6f, 0x6f, 0x6d, 0x2f, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x12, 0x6d, 0x0a, 0x10, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x54, 0x6f,
	0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x1b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x43, 0x53, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x54, 0x6f, 0x4a, 0x6f, 0x69,
	0x6e, 0x52, 0x6f, 0x6f, 0x6d, 0x1a, 0x1b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e,
	0x53, 0x43, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x54, 0x6f, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x6f,
	0x6f, 0x6d, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x3a, 0x01, 0x2a, 0x22, 0x14, 0x2f,
	0x72, 0x6f, 0x6f, 0x6d, 0x2f, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x6a,
	0x6f, 0x69, 0x6e, 0x12, 0x82, 0x01, 0x0a, 0x15, 0x41, 0x67, 0x72, 0x65, 0x65, 0x54, 0x6f, 0x49,
	0x6e, 0x76, 0x69, 0x74, 0x65, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x20, 0x2e,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x53, 0x41, 0x67, 0x72, 0x65, 0x65, 0x54,
	0x6f, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x6f, 0x6f, 0x6d, 0x1a,
	0x20, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x43, 0x41, 0x67, 0x72, 0x65,
	0x65, 0x54, 0x6f, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x6f, 0x6f,
	0x6d, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x3a, 0x01, 0x2a, 0x22, 0x1a, 0x2f, 0x72,
	0x6f, 0x6f, 0x6d, 0x2f, 0x61, 0x67, 0x72, 0x65, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x69, 0x6e, 0x76,
	0x69, 0x74, 0x65, 0x5f, 0x6a, 0x6f, 0x69, 0x6e, 0x12, 0x71, 0x0a, 0x11, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x54, 0x6f, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x1c, 0x2e,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x53, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x54, 0x6f, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x6f, 0x6f, 0x6d, 0x1a, 0x1c, 0x2e, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x43, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54,
	0x6f, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x6f, 0x6f, 0x6d, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x1a, 0x3a, 0x01, 0x2a, 0x22, 0x15, 0x2f, 0x72, 0x6f, 0x6f, 0x6d, 0x2f, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x5f, 0x74, 0x6f, 0x5f, 0x6a, 0x6f, 0x69, 0x6e, 0x12, 0x8e, 0x01, 0x0a, 0x18,
	0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x6f,
	0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x23, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x43, 0x53, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x54, 0x6f, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x6f, 0x6f, 0x6d, 0x1a, 0x23, 0x2e,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x43, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x6f, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x6f,
	0x6f, 0x6d, 0x22, 0x28, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x3a, 0x01, 0x2a, 0x22, 0x1d, 0x2f,
	0x72, 0x6f, 0x6f, 0x6d, 0x2f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x5f, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x5f, 0x74, 0x6f, 0x5f, 0x6a, 0x6f, 0x69, 0x6e, 0x12, 0x68, 0x0a, 0x10,
	0x4b, 0x69, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x6f, 0x6d,
	0x12, 0x1b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x53, 0x4b, 0x69, 0x63,
	0x6b, 0x55, 0x73, 0x65, 0x72, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x6f, 0x6d, 0x1a, 0x1b, 0x2e,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x43, 0x4b, 0x69, 0x63, 0x6b, 0x55, 0x73,
	0x65, 0x72, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x6f, 0x6d, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x14, 0x3a, 0x01, 0x2a, 0x22, 0x0f, 0x2f, 0x72, 0x6f, 0x6f, 0x6d, 0x2f, 0x6b, 0x69, 0x63,
	0x6b, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x12, 0x4f, 0x0a, 0x09, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x52,
	0x6f, 0x6f, 0x6d, 0x12, 0x14, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x53,
	0x4c, 0x65, 0x61, 0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x1a, 0x14, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x53, 0x43, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x22,
	0x16, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x10, 0x3a, 0x01, 0x2a, 0x22, 0x0b, 0x2f, 0x72, 0x6f, 0x6f,
	0x6d, 0x2f, 0x6c, 0x65, 0x61, 0x76, 0x65, 0x12, 0x4f, 0x0a, 0x09, 0x43, 0x6c, 0x6f, 0x73, 0x65,
	0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x14, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x43,
	0x53, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x1a, 0x14, 0x2e, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x43, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x52, 0x6f, 0x6f, 0x6d,
	0x22, 0x16, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x10, 0x3a, 0x01, 0x2a, 0x22, 0x0b, 0x2f, 0x72, 0x6f,
	0x6f, 0x6d, 0x2f, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x42, 0x1b, 0x5a, 0x19, 0x61, 0x70, 0x69, 0x2f,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x3b, 0x63,
	0x6c, 0x69, 0x6d, 0x73, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_message_room_proto_rawDescOnce sync.Once
	file_message_room_proto_rawDescData []byte
)

func file_message_room_proto_rawDescGZIP() []byte {
	file_message_room_proto_rawDescOnce.Do(func() {
		file_message_room_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_message_room_proto_rawDesc), len(file_message_room_proto_rawDesc)))
	})
	return file_message_room_proto_rawDescData
}

var file_message_room_proto_enumTypes = make([]protoimpl.EnumInfo, 10)
var file_message_room_proto_msgTypes = make([]protoimpl.MessageInfo, 27)
var file_message_room_proto_goTypes = []any{
	(SCRoomList_Code)(0),                 // 0: message.SCRoomList.Code
	(SCRoomDetail_Code)(0),               // 1: message.SCRoomDetail.Code
	(SCCreateRoom_Code)(0),               // 2: message.SCCreateRoom.Code
	(SCInviteToJoinRoom_Code)(0),         // 3: message.SCInviteToJoinRoom.Code
	(SCAgreeToInviteJoinRoom_Code)(0),    // 4: message.SCAgreeToInviteJoinRoom.Code
	(SCRequestToJoinRoom_Code)(0),        // 5: message.SCRequestToJoinRoom.Code
	(SCApproveRequestToJoinRoom_Code)(0), // 6: message.SCApproveRequestToJoinRoom.Code
	(SCKickUserFromRoom_Code)(0),         // 7: message.SCKickUserFromRoom.Code
	(SCLeaveRoom_Code)(0),                // 8: message.SCLeaveRoom.Code
	(SCCloseRoom_Code)(0),                // 9: message.SCCloseRoom.Code
	(*UserRoomProto)(nil),                // 10: message.UserRoomProto
	(*RoomProto)(nil),                    // 11: message.RoomProto
	(*RoomBasicProto)(nil),               // 12: message.RoomBasicProto
	(*RoomMemberProto)(nil),              // 13: message.RoomMemberProto
	(*SCPushJoinedRoom)(nil),             // 14: message.SCPushJoinedRoom
	(*SCPushRemovedFromRoom)(nil),        // 15: message.SCPushRemovedFromRoom
	(*CSRoomList)(nil),                   // 16: message.CSRoomList
	(*SCRoomList)(nil),                   // 17: message.SCRoomList
	(*CSRoomDetail)(nil),                 // 18: message.CSRoomDetail
	(*SCRoomDetail)(nil),                 // 19: message.SCRoomDetail
	(*CSCreateRoom)(nil),                 // 20: message.CSCreateRoom
	(*SCCreateRoom)(nil),                 // 21: message.SCCreateRoom
	(*CSInviteToJoinRoom)(nil),           // 22: message.CSInviteToJoinRoom
	(*SCInviteToJoinRoom)(nil),           // 23: message.SCInviteToJoinRoom
	(*CSAgreeToInviteJoinRoom)(nil),      // 24: message.CSAgreeToInviteJoinRoom
	(*SCAgreeToInviteJoinRoom)(nil),      // 25: message.SCAgreeToInviteJoinRoom
	(*CSRequestToJoinRoom)(nil),          // 26: message.CSRequestToJoinRoom
	(*SCRequestToJoinRoom)(nil),          // 27: message.SCRequestToJoinRoom
	(*CSApproveRequestToJoinRoom)(nil),   // 28: message.CSApproveRequestToJoinRoom
	(*SCApproveRequestToJoinRoom)(nil),   // 29: message.SCApproveRequestToJoinRoom
	(*CSKickUserFromRoom)(nil),           // 30: message.CSKickUserFromRoom
	(*SCKickUserFromRoom)(nil),           // 31: message.SCKickUserFromRoom
	(*CSLeaveRoom)(nil),                  // 32: message.CSLeaveRoom
	(*SCLeaveRoom)(nil),                  // 33: message.SCLeaveRoom
	(*CSCloseRoom)(nil),                  // 34: message.CSCloseRoom
	(*SCCloseRoom)(nil),                  // 35: message.SCCloseRoom
	nil,                                  // 36: message.RoomProto.MembersEntry
	(*UserBasicProto)(nil),               // 37: message.UserBasicProto
}
var file_message_room_proto_depIdxs = []int32{
	12, // 0: message.RoomProto.basic:type_name -> message.RoomBasicProto
	36, // 1: message.RoomProto.members:type_name -> message.RoomProto.MembersEntry
	37, // 2: message.RoomBasicProto.creator:type_name -> message.UserBasicProto
	37, // 3: message.RoomMemberProto.user:type_name -> message.UserBasicProto
	13, // 4: message.SCPushJoinedRoom.member:type_name -> message.RoomMemberProto
	13, // 5: message.SCPushRemovedFromRoom.member:type_name -> message.RoomMemberProto
	0,  // 6: message.SCRoomList.code:type_name -> message.SCRoomList.Code
	12, // 7: message.SCRoomList.rooms:type_name -> message.RoomBasicProto
	1,  // 8: message.SCRoomDetail.code:type_name -> message.SCRoomDetail.Code
	11, // 9: message.SCRoomDetail.room:type_name -> message.RoomProto
	2,  // 10: message.SCCreateRoom.code:type_name -> message.SCCreateRoom.Code
	11, // 11: message.SCCreateRoom.room:type_name -> message.RoomProto
	3,  // 12: message.SCInviteToJoinRoom.code:type_name -> message.SCInviteToJoinRoom.Code
	4,  // 13: message.SCAgreeToInviteJoinRoom.code:type_name -> message.SCAgreeToInviteJoinRoom.Code
	5,  // 14: message.SCRequestToJoinRoom.code:type_name -> message.SCRequestToJoinRoom.Code
	6,  // 15: message.SCApproveRequestToJoinRoom.code:type_name -> message.SCApproveRequestToJoinRoom.Code
	7,  // 16: message.SCKickUserFromRoom.code:type_name -> message.SCKickUserFromRoom.Code
	8,  // 17: message.SCLeaveRoom.code:type_name -> message.SCLeaveRoom.Code
	9,  // 18: message.SCCloseRoom.code:type_name -> message.SCCloseRoom.Code
	13, // 19: message.RoomProto.MembersEntry.value:type_name -> message.RoomMemberProto
	16, // 20: message.RoomTCPService.RoomList:input_type -> message.CSRoomList
	18, // 21: message.RoomTCPService.RoomDetail:input_type -> message.CSRoomDetail
	20, // 22: message.RoomTCPService.CreateRoom:input_type -> message.CSCreateRoom
	22, // 23: message.RoomTCPService.InviteToJoinRoom:input_type -> message.CSInviteToJoinRoom
	24, // 24: message.RoomTCPService.AgreeToInviteJoinRoom:input_type -> message.CSAgreeToInviteJoinRoom
	26, // 25: message.RoomTCPService.RequestToJoinRoom:input_type -> message.CSRequestToJoinRoom
	28, // 26: message.RoomTCPService.ApproveRequestToJoinRoom:input_type -> message.CSApproveRequestToJoinRoom
	30, // 27: message.RoomTCPService.KickUserFromRoom:input_type -> message.CSKickUserFromRoom
	32, // 28: message.RoomTCPService.LeaveRoom:input_type -> message.CSLeaveRoom
	34, // 29: message.RoomTCPService.CloseRoom:input_type -> message.CSCloseRoom
	17, // 30: message.RoomTCPService.RoomList:output_type -> message.SCRoomList
	19, // 31: message.RoomTCPService.RoomDetail:output_type -> message.SCRoomDetail
	21, // 32: message.RoomTCPService.CreateRoom:output_type -> message.SCCreateRoom
	23, // 33: message.RoomTCPService.InviteToJoinRoom:output_type -> message.SCInviteToJoinRoom
	25, // 34: message.RoomTCPService.AgreeToInviteJoinRoom:output_type -> message.SCAgreeToInviteJoinRoom
	27, // 35: message.RoomTCPService.RequestToJoinRoom:output_type -> message.SCRequestToJoinRoom
	29, // 36: message.RoomTCPService.ApproveRequestToJoinRoom:output_type -> message.SCApproveRequestToJoinRoom
	31, // 37: message.RoomTCPService.KickUserFromRoom:output_type -> message.SCKickUserFromRoom
	33, // 38: message.RoomTCPService.LeaveRoom:output_type -> message.SCLeaveRoom
	35, // 39: message.RoomTCPService.CloseRoom:output_type -> message.SCCloseRoom
	30, // [30:40] is the sub-list for method output_type
	20, // [20:30] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_message_room_proto_init() }
func file_message_room_proto_init() {
	if File_message_room_proto != nil {
		return
	}
	file_message_user_basic_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_message_room_proto_rawDesc), len(file_message_room_proto_rawDesc)),
			NumEnums:      10,
			NumMessages:   27,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_message_room_proto_goTypes,
		DependencyIndexes: file_message_room_proto_depIdxs,
		EnumInfos:         file_message_room_proto_enumTypes,
		MessageInfos:      file_message_room_proto_msgTypes,
	}.Build()
	File_message_room_proto = out.File
	file_message_room_proto_goTypes = nil
	file_message_room_proto_depIdxs = nil
}
