syntax = "proto3";

package message;

import "google/api/annotations.proto";


option go_package = "api/client/message;climsg";

// System service
service SystemTCPService {
  rpc HeartBeat (CSHeartBeat) returns (SCHeartBeat){
    option (google.api.http) = {
      post: "/system/heartbeat"
      body: "*"
    };
  };
}

// Handshake body. Client encrypts with "server RSA public key"
message CSHandshake {
  string token = 1; // Token received from account/v1/login
  int64 server_id = 2; // Server ID
  bytes pub = 3; // Client RSA public key
}

// Handshake response. Client decrypts with "client RSA private key"
message SCHandshake {
  int32 start_index = 1; // Client initial sequence number
  bytes key = 2; // AES key
}

message CSHeartBeat {
  int64 client_time = 1; // Client timestamp, accurate to seconds. Valid if the difference with server time is less than 10s
}

message SCHeartBeat {
  int64 server_time = 1; // Server timestamp, accurate to seconds
  Code code = 2;

  enum Code {
    ErrServer = 0; // Please try again later
    Success = 1; // Success
    ErrTime = 2; // Timestamp error
  }
}

// Server unknown error. Returned when the server reports an error after the request protocol and the error is unknown
message SCServerUnknownErr {
  int32 mod = 1;
  int32 seq = 2;
  string msg = 3;
}

// Server triggers logout
message SCServerLogout {
  Code code = 1;

  enum Code {
    Server = 0; // Unknown reason
    Waiting = 1; // Retry later
    Auth = 2; // Authentication failed
    ConflictingLogin = 3; // Logged in by another account
    KickedOut = 4; // Kicked out
    Banned = 5; // Banned
  }
}
