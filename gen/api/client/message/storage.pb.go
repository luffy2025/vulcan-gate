// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: message/storage.proto

package climsg

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SCUsePack_Code int32

const (
	SCUsePack_ErrServer       SCUsePack_Code = 0 // Please try again later
	SCUsePack_Success         SCUsePack_Code = 1 // Success
	SCUsePack_ErrItemNotExist SCUsePack_Code = 2 // Item does not exist
	SCUsePack_ErrItemLimit    SCUsePack_Code = 3 // Usage restricted
)

// Enum value maps for SCUsePack_Code.
var (
	SCUsePack_Code_name = map[int32]string{
		0: "ErrServer",
		1: "Success",
		2: "ErrItemNotExist",
		3: "ErrItemLimit",
	}
	SCUsePack_Code_value = map[string]int32{
		"ErrServer":       0,
		"Success":         1,
		"ErrItemNotExist": 2,
		"ErrItemLimit":    3,
	}
)

func (x SCUsePack_Code) Enum() *SCUsePack_Code {
	p := new(SCUsePack_Code)
	*p = x
	return p
}

func (x SCUsePack_Code) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SCUsePack_Code) Descriptor() protoreflect.EnumDescriptor {
	return file_message_storage_proto_enumTypes[0].Descriptor()
}

func (SCUsePack_Code) Type() protoreflect.EnumType {
	return &file_message_storage_proto_enumTypes[0]
}

func (x SCUsePack_Code) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SCUsePack_Code.Descriptor instead.
func (SCUsePack_Code) EnumDescriptor() ([]byte, []int) {
	return file_message_storage_proto_rawDescGZIP(), []int{2, 0}
}

// Push: Item has been updated
type SCPushItemUpdate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         map[int64]uint64       `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"` // Items with updates<item config ID, current amount>. 0 means the item has been deleted
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SCPushItemUpdate) Reset() {
	*x = SCPushItemUpdate{}
	mi := &file_message_storage_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SCPushItemUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCPushItemUpdate) ProtoMessage() {}

func (x *SCPushItemUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_message_storage_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCPushItemUpdate.ProtoReflect.Descriptor instead.
func (*SCPushItemUpdate) Descriptor() ([]byte, []int) {
	return file_message_storage_proto_rawDescGZIP(), []int{0}
}

func (x *SCPushItemUpdate) GetItems() map[int64]uint64 {
	if x != nil {
		return x.Items
	}
	return nil
}

// Request: Use pack
type CSUsePack struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` // Pack ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CSUsePack) Reset() {
	*x = CSUsePack{}
	mi := &file_message_storage_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSUsePack) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSUsePack) ProtoMessage() {}

func (x *CSUsePack) ProtoReflect() protoreflect.Message {
	mi := &file_message_storage_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSUsePack.ProtoReflect.Descriptor instead.
func (*CSUsePack) Descriptor() ([]byte, []int) {
	return file_message_storage_proto_rawDescGZIP(), []int{1}
}

func (x *CSUsePack) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// Response: Use pack
type SCUsePack struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          SCUsePack_Code         `protobuf:"varint,1,opt,name=code,proto3,enum=message.SCUsePack_Code" json:"code,omitempty"`
	Id            int64                  `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`                                                                                                                    // Item ID
	ChangedItems  map[int64]uint64       `protobuf:"bytes,3,rep,name=changed_items,json=changedItems,proto3" json:"changed_items,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"` // Items with updates<item config ID, current amount>. 0 means the item has been deleted
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SCUsePack) Reset() {
	*x = SCUsePack{}
	mi := &file_message_storage_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SCUsePack) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCUsePack) ProtoMessage() {}

func (x *SCUsePack) ProtoReflect() protoreflect.Message {
	mi := &file_message_storage_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCUsePack.ProtoReflect.Descriptor instead.
func (*SCUsePack) Descriptor() ([]byte, []int) {
	return file_message_storage_proto_rawDescGZIP(), []int{2}
}

func (x *SCUsePack) GetCode() SCUsePack_Code {
	if x != nil {
		return x.Code
	}
	return SCUsePack_ErrServer
}

func (x *SCUsePack) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SCUsePack) GetChangedItems() map[int64]uint64 {
	if x != nil {
		return x.ChangedItems
	}
	return nil
}

// Storage
type UserStorageProto struct {
	state            protoimpl.MessageState          `protogen:"open.v1"`
	Amounts          map[int64]uint64                `protobuf:"bytes,1,rep,name=amounts,proto3" json:"amounts,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`                                          // Numeric items<item config ID, amount>
	Packs            map[int64]*ItemPackProto        `protobuf:"bytes,2,rep,name=packs,proto3" json:"packs,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`                                               // Packs<pack ID, amount>
	RecoverableItems map[int64]*ItemRecoverableProto `protobuf:"bytes,3,rep,name=recoverable_items,json=recoverableItems,proto3" json:"recoverable_items,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Recoverable items<config ID, properties>
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *UserStorageProto) Reset() {
	*x = UserStorageProto{}
	mi := &file_message_storage_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserStorageProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserStorageProto) ProtoMessage() {}

func (x *UserStorageProto) ProtoReflect() protoreflect.Message {
	mi := &file_message_storage_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserStorageProto.ProtoReflect.Descriptor instead.
func (*UserStorageProto) Descriptor() ([]byte, []int) {
	return file_message_storage_proto_rawDescGZIP(), []int{3}
}

func (x *UserStorageProto) GetAmounts() map[int64]uint64 {
	if x != nil {
		return x.Amounts
	}
	return nil
}

func (x *UserStorageProto) GetPacks() map[int64]*ItemPackProto {
	if x != nil {
		return x.Packs
	}
	return nil
}

func (x *UserStorageProto) GetRecoverableItems() map[int64]*ItemRecoverableProto {
	if x != nil {
		return x.RecoverableItems
	}
	return nil
}

// Pack structure
type ItemPackProto struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DataId        int64                  `protobuf:"varint,1,opt,name=data_id,json=dataId,proto3" json:"data_id,omitempty"`             // Pack DataID
	ReceivedAt    int64                  `protobuf:"varint,2,opt,name=received_at,json=receivedAt,proto3" json:"received_at,omitempty"` // Received time
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ItemPackProto) Reset() {
	*x = ItemPackProto{}
	mi := &file_message_storage_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ItemPackProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemPackProto) ProtoMessage() {}

func (x *ItemPackProto) ProtoReflect() protoreflect.Message {
	mi := &file_message_storage_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemPackProto.ProtoReflect.Descriptor instead.
func (*ItemPackProto) Descriptor() ([]byte, []int) {
	return file_message_storage_proto_rawDescGZIP(), []int{4}
}

func (x *ItemPackProto) GetDataId() int64 {
	if x != nil {
		return x.DataId
	}
	return 0
}

func (x *ItemPackProto) GetReceivedAt() int64 {
	if x != nil {
		return x.ReceivedAt
	}
	return 0
}

// Recoverable numeric properties
type ItemRecoverableProto struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Count            uint64                 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`                                                  // Current amount
	Max              uint64                 `protobuf:"varint,2,opt,name=max,proto3" json:"max,omitempty"`                                                      // Maximum
	RecoverPerSecond float32                `protobuf:"fixed32,3,opt,name=recover_per_second,json=recoverPerSecond,proto3" json:"recover_per_second,omitempty"` // Recovery speed, n/s
	UpdatedAt        int64                  `protobuf:"varint,4,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`                         // Last updated timestamp, unit: second
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ItemRecoverableProto) Reset() {
	*x = ItemRecoverableProto{}
	mi := &file_message_storage_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ItemRecoverableProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemRecoverableProto) ProtoMessage() {}

func (x *ItemRecoverableProto) ProtoReflect() protoreflect.Message {
	mi := &file_message_storage_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemRecoverableProto.ProtoReflect.Descriptor instead.
func (*ItemRecoverableProto) Descriptor() ([]byte, []int) {
	return file_message_storage_proto_rawDescGZIP(), []int{5}
}

func (x *ItemRecoverableProto) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ItemRecoverableProto) GetMax() uint64 {
	if x != nil {
		return x.Max
	}
	return 0
}

func (x *ItemRecoverableProto) GetRecoverPerSecond() float32 {
	if x != nil {
		return x.RecoverPerSecond
	}
	return 0
}

func (x *ItemRecoverableProto) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

var File_message_storage_proto protoreflect.FileDescriptor

var file_message_storage_proto_rawDesc = string([]byte{
	0x0a, 0x15, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x88,
	0x01, 0x0a, 0x10, 0x53, 0x43, 0x50, 0x75, 0x73, 0x68, 0x49, 0x74, 0x65, 0x6d, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x12, 0x3a, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x43, 0x50,
	0x75, 0x73, 0x68, 0x49, 0x74, 0x65, 0x6d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x49, 0x74,
	0x65, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x1a,
	0x38, 0x0a, 0x0a, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x1b, 0x0a, 0x09, 0x43, 0x53, 0x55,
	0x73, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x9f, 0x02, 0x0a, 0x09, 0x53, 0x43, 0x55, 0x73, 0x65,
	0x50, 0x61, 0x63, 0x6b, 0x12, 0x2b, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x17, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x43, 0x55,
	0x73, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x49, 0x0a, 0x0d, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x5f, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x53, 0x43, 0x55, 0x73, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x2e, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0c,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x1a, 0x3f, 0x0a, 0x11,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x49, 0x0a,
	0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x0d, 0x0a, 0x09, 0x45, 0x72, 0x72, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10,
	0x01, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x72, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x4e, 0x6f, 0x74, 0x45,
	0x78, 0x69, 0x73, 0x74, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x45, 0x72, 0x72, 0x49, 0x74, 0x65,
	0x6d, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x10, 0x03, 0x22, 0xe0, 0x03, 0x0a, 0x10, 0x55, 0x73, 0x65,
	0x72, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x40, 0x0a,
	0x07, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12,
	0x3a, 0x0a, 0x05, 0x70, 0x61, 0x63, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x70, 0x61, 0x63, 0x6b, 0x73, 0x12, 0x5c, 0x0a, 0x11, 0x72,
	0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x74, 0x65,
	0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x10, 0x72, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x61, 0x62, 0x6c, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x1a, 0x3a, 0x0a, 0x0c, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x50, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2c, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x49,
	0x74, 0x65, 0x6d, 0x50, 0x61, 0x63, 0x6b, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x62, 0x0a, 0x15, 0x52, 0x65, 0x63, 0x6f, 0x76,
	0x65, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x33, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x49, 0x0a, 0x0d, 0x49,
	0x74, 0x65, 0x6d, 0x50, 0x61, 0x63, 0x6b, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x17, 0x0a, 0x07,
	0x64, 0x61, 0x74, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x64,
	0x61, 0x74, 0x61, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x64, 0x41, 0x74, 0x22, 0x8b, 0x01, 0x0a, 0x14, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x61, 0x78, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x03, 0x6d, 0x61, 0x78, 0x12, 0x2c, 0x0a, 0x12, 0x72, 0x65, 0x63, 0x6f, 0x76,
	0x65, 0x72, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x10, 0x72, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x50, 0x65, 0x72, 0x53,
	0x65, 0x63, 0x6f, 0x6e, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x32, 0x64, 0x0a, 0x11, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x54,
	0x43, 0x50, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4f, 0x0a, 0x07, 0x55, 0x73, 0x65,
	0x50, 0x61, 0x63, 0x6b, 0x12, 0x12, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x43,
	0x53, 0x55, 0x73, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x1a, 0x12, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x53, 0x43, 0x55, 0x73, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x22, 0x1c, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x16, 0x3a, 0x01, 0x2a, 0x22, 0x11, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x2f, 0x75, 0x73, 0x65, 0x2f, 0x70, 0x61, 0x63, 0x6b, 0x42, 0x1b, 0x5a, 0x19, 0x61, 0x70,
	0x69, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x3b, 0x63, 0x6c, 0x69, 0x6d, 0x73, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_message_storage_proto_rawDescOnce sync.Once
	file_message_storage_proto_rawDescData []byte
)

func file_message_storage_proto_rawDescGZIP() []byte {
	file_message_storage_proto_rawDescOnce.Do(func() {
		file_message_storage_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_message_storage_proto_rawDesc), len(file_message_storage_proto_rawDesc)))
	})
	return file_message_storage_proto_rawDescData
}

var file_message_storage_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_message_storage_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_message_storage_proto_goTypes = []any{
	(SCUsePack_Code)(0),          // 0: message.SCUsePack.Code
	(*SCPushItemUpdate)(nil),     // 1: message.SCPushItemUpdate
	(*CSUsePack)(nil),            // 2: message.CSUsePack
	(*SCUsePack)(nil),            // 3: message.SCUsePack
	(*UserStorageProto)(nil),     // 4: message.UserStorageProto
	(*ItemPackProto)(nil),        // 5: message.ItemPackProto
	(*ItemRecoverableProto)(nil), // 6: message.ItemRecoverableProto
	nil,                          // 7: message.SCPushItemUpdate.ItemsEntry
	nil,                          // 8: message.SCUsePack.ChangedItemsEntry
	nil,                          // 9: message.UserStorageProto.AmountsEntry
	nil,                          // 10: message.UserStorageProto.PacksEntry
	nil,                          // 11: message.UserStorageProto.RecoverableItemsEntry
}
var file_message_storage_proto_depIdxs = []int32{
	7,  // 0: message.SCPushItemUpdate.items:type_name -> message.SCPushItemUpdate.ItemsEntry
	0,  // 1: message.SCUsePack.code:type_name -> message.SCUsePack.Code
	8,  // 2: message.SCUsePack.changed_items:type_name -> message.SCUsePack.ChangedItemsEntry
	9,  // 3: message.UserStorageProto.amounts:type_name -> message.UserStorageProto.AmountsEntry
	10, // 4: message.UserStorageProto.packs:type_name -> message.UserStorageProto.PacksEntry
	11, // 5: message.UserStorageProto.recoverable_items:type_name -> message.UserStorageProto.RecoverableItemsEntry
	5,  // 6: message.UserStorageProto.PacksEntry.value:type_name -> message.ItemPackProto
	6,  // 7: message.UserStorageProto.RecoverableItemsEntry.value:type_name -> message.ItemRecoverableProto
	2,  // 8: message.StorageTCPService.UsePack:input_type -> message.CSUsePack
	3,  // 9: message.StorageTCPService.UsePack:output_type -> message.SCUsePack
	9,  // [9:10] is the sub-list for method output_type
	8,  // [8:9] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_message_storage_proto_init() }
func file_message_storage_proto_init() {
	if File_message_storage_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_message_storage_proto_rawDesc), len(file_message_storage_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_message_storage_proto_goTypes,
		DependencyIndexes: file_message_storage_proto_depIdxs,
		EnumInfos:         file_message_storage_proto_enumTypes,
		MessageInfos:      file_message_storage_proto_msgTypes,
	}.Build()
	File_message_storage_proto = out.File
	file_message_storage_proto_goTypes = nil
	file_message_storage_proto_depIdxs = nil
}
