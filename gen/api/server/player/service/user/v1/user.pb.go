// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: player/service/user/v1/user.proto

package servicev1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetByIdRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetByIdRequest) Reset() {
	*x = GetByIdRequest{}
	mi := &file_player_service_user_v1_user_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetByIdRequest) ProtoMessage() {}

func (x *GetByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_player_service_user_v1_user_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetByIdRequest.ProtoReflect.Descriptor instead.
func (*GetByIdRequest) Descriptor() ([]byte, []int) {
	return file_player_service_user_v1_user_proto_rawDescGZIP(), []int{0}
}

func (x *GetByIdRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetByIdResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	User          *UserCacheProto        `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetByIdResponse) Reset() {
	*x = GetByIdResponse{}
	mi := &file_player_service_user_v1_user_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetByIdResponse) ProtoMessage() {}

func (x *GetByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_player_service_user_v1_user_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetByIdResponse.ProtoReflect.Descriptor instead.
func (*GetByIdResponse) Descriptor() ([]byte, []int) {
	return file_player_service_user_v1_user_proto_rawDescGZIP(), []int{1}
}

func (x *GetByIdResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetByIdResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetByIdResponse) GetUser() *UserCacheProto {
	if x != nil {
		return x.User
	}
	return nil
}

type UserListByIdRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            []int64                `protobuf:"varint,1,rep,packed,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserListByIdRequest) Reset() {
	*x = UserListByIdRequest{}
	mi := &file_player_service_user_v1_user_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserListByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserListByIdRequest) ProtoMessage() {}

func (x *UserListByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_player_service_user_v1_user_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserListByIdRequest.ProtoReflect.Descriptor instead.
func (*UserListByIdRequest) Descriptor() ([]byte, []int) {
	return file_player_service_user_v1_user_proto_rawDescGZIP(), []int{2}
}

func (x *UserListByIdRequest) GetId() []int64 {
	if x != nil {
		return x.Id
	}
	return nil
}

type UserListByIdResponse struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	Code          int32                     `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message       string                    `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Users         map[int64]*UserCacheProto `protobuf:"bytes,3,rep,name=users,proto3" json:"users,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserListByIdResponse) Reset() {
	*x = UserListByIdResponse{}
	mi := &file_player_service_user_v1_user_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserListByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserListByIdResponse) ProtoMessage() {}

func (x *UserListByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_player_service_user_v1_user_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserListByIdResponse.ProtoReflect.Descriptor instead.
func (*UserListByIdResponse) Descriptor() ([]byte, []int) {
	return file_player_service_user_v1_user_proto_rawDescGZIP(), []int{3}
}

func (x *UserListByIdResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UserListByIdResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UserListByIdResponse) GetUsers() map[int64]*UserCacheProto {
	if x != nil {
		return x.Users
	}
	return nil
}

type GetBasicByIdRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBasicByIdRequest) Reset() {
	*x = GetBasicByIdRequest{}
	mi := &file_player_service_user_v1_user_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBasicByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBasicByIdRequest) ProtoMessage() {}

func (x *GetBasicByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_player_service_user_v1_user_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBasicByIdRequest.ProtoReflect.Descriptor instead.
func (*GetBasicByIdRequest) Descriptor() ([]byte, []int) {
	return file_player_service_user_v1_user_proto_rawDescGZIP(), []int{4}
}

func (x *GetBasicByIdRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetBasicByIdResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	User          *UserBasicCacheProto   `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBasicByIdResponse) Reset() {
	*x = GetBasicByIdResponse{}
	mi := &file_player_service_user_v1_user_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBasicByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBasicByIdResponse) ProtoMessage() {}

func (x *GetBasicByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_player_service_user_v1_user_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBasicByIdResponse.ProtoReflect.Descriptor instead.
func (*GetBasicByIdResponse) Descriptor() ([]byte, []int) {
	return file_player_service_user_v1_user_proto_rawDescGZIP(), []int{5}
}

func (x *GetBasicByIdResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetBasicByIdResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetBasicByIdResponse) GetUser() *UserBasicCacheProto {
	if x != nil {
		return x.User
	}
	return nil
}

type GetBasicListByIdRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            []int64                `protobuf:"varint,1,rep,packed,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBasicListByIdRequest) Reset() {
	*x = GetBasicListByIdRequest{}
	mi := &file_player_service_user_v1_user_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBasicListByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBasicListByIdRequest) ProtoMessage() {}

func (x *GetBasicListByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_player_service_user_v1_user_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBasicListByIdRequest.ProtoReflect.Descriptor instead.
func (*GetBasicListByIdRequest) Descriptor() ([]byte, []int) {
	return file_player_service_user_v1_user_proto_rawDescGZIP(), []int{6}
}

func (x *GetBasicListByIdRequest) GetId() []int64 {
	if x != nil {
		return x.Id
	}
	return nil
}

type GetBasicListByIdResponse struct {
	state         protoimpl.MessageState         `protogen:"open.v1"`
	Code          int32                          `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message       string                         `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Users         map[int64]*UserBasicCacheProto `protobuf:"bytes,3,rep,name=users,proto3" json:"users,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBasicListByIdResponse) Reset() {
	*x = GetBasicListByIdResponse{}
	mi := &file_player_service_user_v1_user_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBasicListByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBasicListByIdResponse) ProtoMessage() {}

func (x *GetBasicListByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_player_service_user_v1_user_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBasicListByIdResponse.ProtoReflect.Descriptor instead.
func (*GetBasicListByIdResponse) Descriptor() ([]byte, []int) {
	return file_player_service_user_v1_user_proto_rawDescGZIP(), []int{7}
}

func (x *GetBasicListByIdResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetBasicListByIdResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetBasicListByIdResponse) GetUsers() map[int64]*UserBasicCacheProto {
	if x != nil {
		return x.Users
	}
	return nil
}

type UserCacheProto struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Basic         *UserBasicCacheProto   `protobuf:"bytes,1,opt,name=basic,proto3" json:"basic,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserCacheProto) Reset() {
	*x = UserCacheProto{}
	mi := &file_player_service_user_v1_user_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserCacheProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserCacheProto) ProtoMessage() {}

func (x *UserCacheProto) ProtoReflect() protoreflect.Message {
	mi := &file_player_service_user_v1_user_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserCacheProto.ProtoReflect.Descriptor instead.
func (*UserCacheProto) Descriptor() ([]byte, []int) {
	return file_player_service_user_v1_user_proto_rawDescGZIP(), []int{8}
}

func (x *UserCacheProto) GetBasic() *UserBasicCacheProto {
	if x != nil {
		return x.Basic
	}
	return nil
}

type UserBasicCacheProto struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Id             int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	IdStr          string                 `protobuf:"bytes,2,opt,name=id_str,json=idStr,proto3" json:"id_str,omitempty"`
	Account        string                 `protobuf:"bytes,3,opt,name=account,proto3" json:"account,omitempty"`
	Name           string                 `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	CreatedTime    int64                  `protobuf:"varint,5,opt,name=created_time,json=createdTime,proto3" json:"created_time,omitempty"`
	LoginTime      int64                  `protobuf:"varint,6,opt,name=login_time,json=loginTime,proto3" json:"login_time,omitempty"`
	LastOnlineTime int64                  `protobuf:"varint,7,opt,name=last_online_time,json=lastOnlineTime,proto3" json:"last_online_time,omitempty"`
	LastOnlineIp   string                 `protobuf:"bytes,8,opt,name=last_online_ip,json=lastOnlineIp,proto3" json:"last_online_ip,omitempty"`
	Detail         string                 `protobuf:"bytes,9,opt,name=detail,proto3" json:"detail,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *UserBasicCacheProto) Reset() {
	*x = UserBasicCacheProto{}
	mi := &file_player_service_user_v1_user_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserBasicCacheProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserBasicCacheProto) ProtoMessage() {}

func (x *UserBasicCacheProto) ProtoReflect() protoreflect.Message {
	mi := &file_player_service_user_v1_user_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserBasicCacheProto.ProtoReflect.Descriptor instead.
func (*UserBasicCacheProto) Descriptor() ([]byte, []int) {
	return file_player_service_user_v1_user_proto_rawDescGZIP(), []int{9}
}

func (x *UserBasicCacheProto) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UserBasicCacheProto) GetIdStr() string {
	if x != nil {
		return x.IdStr
	}
	return ""
}

func (x *UserBasicCacheProto) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *UserBasicCacheProto) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserBasicCacheProto) GetCreatedTime() int64 {
	if x != nil {
		return x.CreatedTime
	}
	return 0
}

func (x *UserBasicCacheProto) GetLoginTime() int64 {
	if x != nil {
		return x.LoginTime
	}
	return 0
}

func (x *UserBasicCacheProto) GetLastOnlineTime() int64 {
	if x != nil {
		return x.LastOnlineTime
	}
	return 0
}

func (x *UserBasicCacheProto) GetLastOnlineIp() string {
	if x != nil {
		return x.LastOnlineIp
	}
	return ""
}

func (x *UserBasicCacheProto) GetDetail() string {
	if x != nil {
		return x.Detail
	}
	return ""
}

var File_player_service_user_v1_user_proto protoreflect.FileDescriptor

var file_player_service_user_v1_user_proto_rawDesc = string([]byte{
	0x0a, 0x21, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x16, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x20, 0x0a, 0x0e, 0x47, 0x65, 0x74,
	0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x7b, 0x0a, 0x0f, 0x47,
	0x65, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3a, 0x0a, 0x04,
	0x75, 0x73, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x61, 0x63, 0x68, 0x65, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0x25, 0x0a, 0x13, 0x55, 0x73, 0x65, 0x72,
	0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22,
	0xf5, 0x01, 0x0a, 0x14, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x49, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x4d, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05,
	0x75, 0x73, 0x65, 0x72, 0x73, 0x1a, 0x60, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x3c, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x43, 0x61, 0x63, 0x68, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x25, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x42, 0x61,
	0x73, 0x69, 0x63, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x85,
	0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x42, 0x61, 0x73, 0x69, 0x63, 0x42, 0x79, 0x49, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3f, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x42, 0x61, 0x73, 0x69, 0x63, 0x43, 0x61, 0x63, 0x68, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0x29, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x42, 0x61, 0x73,
	0x69, 0x63, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x82, 0x02, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x42, 0x61, 0x73, 0x69, 0x63, 0x4c, 0x69,
	0x73, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x51, 0x0a, 0x05,
	0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x61, 0x73, 0x69, 0x63, 0x4c, 0x69, 0x73,
	0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x1a,
	0x65, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x41, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b,
	0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x73, 0x69,
	0x63, 0x43, 0x61, 0x63, 0x68, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x53, 0x0a, 0x0e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x61,
	0x63, 0x68, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x41, 0x0a, 0x05, 0x62, 0x61, 0x73, 0x69,
	0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x73, 0x69, 0x63, 0x43, 0x61, 0x63, 0x68, 0x65, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x52, 0x05, 0x62, 0x61, 0x73, 0x69, 0x63, 0x22, 0x94, 0x02, 0x0a, 0x13,
	0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x73, 0x69, 0x63, 0x43, 0x61, 0x63, 0x68, 0x65, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x69, 0x64, 0x5f, 0x73, 0x74, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x64, 0x53, 0x74, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6c,
	0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x6c, 0x61,
	0x73, 0x74, 0x5f, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6f, 0x6e, 0x6c,
	0x69, 0x6e, 0x65, 0x5f, 0x69, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c, 0x61,
	0x73, 0x74, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x32, 0xb7, 0x04, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x74, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x64, 0x12, 0x26, 0x2e,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x18,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12, 0x12, 0x10, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x69, 0x64, 0x12, 0x89, 0x01, 0x0a, 0x0c, 0x47, 0x65, 0x74,
	0x42, 0x61, 0x73, 0x69, 0x63, 0x42, 0x79, 0x49, 0x64, 0x12, 0x2b, 0x2e, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x61, 0x73, 0x69, 0x63, 0x42, 0x79, 0x49, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x42, 0x61, 0x73, 0x69, 0x63, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x12, 0x16, 0x2f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x62, 0x61, 0x73, 0x69,
	0x63, 0x2f, 0x69, 0x64, 0x12, 0x88, 0x01, 0x0a, 0x0c, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73,
	0x74, 0x42, 0x79, 0x49, 0x64, 0x12, 0x2b, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x12, 0x15, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x2f, 0x69, 0x64, 0x12,
	0x9a, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x42, 0x61, 0x73, 0x69, 0x63, 0x4c, 0x69, 0x73, 0x74,
	0x42, 0x79, 0x49, 0x64, 0x12, 0x2f, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x42, 0x61, 0x73, 0x69, 0x63, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x42, 0x61, 0x73, 0x69, 0x63, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x12,
	0x1b, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x62,
	0x61, 0x73, 0x69, 0x63, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x2f, 0x69, 0x64, 0x42, 0x2d, 0x5a, 0x2b,
	0x61, 0x70, 0x69, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x76,
	0x31, 0x3b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
})

var (
	file_player_service_user_v1_user_proto_rawDescOnce sync.Once
	file_player_service_user_v1_user_proto_rawDescData []byte
)

func file_player_service_user_v1_user_proto_rawDescGZIP() []byte {
	file_player_service_user_v1_user_proto_rawDescOnce.Do(func() {
		file_player_service_user_v1_user_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_player_service_user_v1_user_proto_rawDesc), len(file_player_service_user_v1_user_proto_rawDesc)))
	})
	return file_player_service_user_v1_user_proto_rawDescData
}

var file_player_service_user_v1_user_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_player_service_user_v1_user_proto_goTypes = []any{
	(*GetByIdRequest)(nil),           // 0: player.service.user.v1.GetByIdRequest
	(*GetByIdResponse)(nil),          // 1: player.service.user.v1.GetByIdResponse
	(*UserListByIdRequest)(nil),      // 2: player.service.user.v1.UserListByIdRequest
	(*UserListByIdResponse)(nil),     // 3: player.service.user.v1.UserListByIdResponse
	(*GetBasicByIdRequest)(nil),      // 4: player.service.user.v1.GetBasicByIdRequest
	(*GetBasicByIdResponse)(nil),     // 5: player.service.user.v1.GetBasicByIdResponse
	(*GetBasicListByIdRequest)(nil),  // 6: player.service.user.v1.GetBasicListByIdRequest
	(*GetBasicListByIdResponse)(nil), // 7: player.service.user.v1.GetBasicListByIdResponse
	(*UserCacheProto)(nil),           // 8: player.service.user.v1.UserCacheProto
	(*UserBasicCacheProto)(nil),      // 9: player.service.user.v1.UserBasicCacheProto
	nil,                              // 10: player.service.user.v1.UserListByIdResponse.UsersEntry
	nil,                              // 11: player.service.user.v1.GetBasicListByIdResponse.UsersEntry
}
var file_player_service_user_v1_user_proto_depIdxs = []int32{
	8,  // 0: player.service.user.v1.GetByIdResponse.user:type_name -> player.service.user.v1.UserCacheProto
	10, // 1: player.service.user.v1.UserListByIdResponse.users:type_name -> player.service.user.v1.UserListByIdResponse.UsersEntry
	9,  // 2: player.service.user.v1.GetBasicByIdResponse.user:type_name -> player.service.user.v1.UserBasicCacheProto
	11, // 3: player.service.user.v1.GetBasicListByIdResponse.users:type_name -> player.service.user.v1.GetBasicListByIdResponse.UsersEntry
	9,  // 4: player.service.user.v1.UserCacheProto.basic:type_name -> player.service.user.v1.UserBasicCacheProto
	8,  // 5: player.service.user.v1.UserListByIdResponse.UsersEntry.value:type_name -> player.service.user.v1.UserCacheProto
	9,  // 6: player.service.user.v1.GetBasicListByIdResponse.UsersEntry.value:type_name -> player.service.user.v1.UserBasicCacheProto
	0,  // 7: player.service.user.v1.UserService.GetById:input_type -> player.service.user.v1.GetByIdRequest
	4,  // 8: player.service.user.v1.UserService.GetBasicById:input_type -> player.service.user.v1.GetBasicByIdRequest
	2,  // 9: player.service.user.v1.UserService.UserListById:input_type -> player.service.user.v1.UserListByIdRequest
	6,  // 10: player.service.user.v1.UserService.GetBasicListById:input_type -> player.service.user.v1.GetBasicListByIdRequest
	1,  // 11: player.service.user.v1.UserService.GetById:output_type -> player.service.user.v1.GetByIdResponse
	5,  // 12: player.service.user.v1.UserService.GetBasicById:output_type -> player.service.user.v1.GetBasicByIdResponse
	3,  // 13: player.service.user.v1.UserService.UserListById:output_type -> player.service.user.v1.UserListByIdResponse
	7,  // 14: player.service.user.v1.UserService.GetBasicListById:output_type -> player.service.user.v1.GetBasicListByIdResponse
	11, // [11:15] is the sub-list for method output_type
	7,  // [7:11] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_player_service_user_v1_user_proto_init() }
func file_player_service_user_v1_user_proto_init() {
	if File_player_service_user_v1_user_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_player_service_user_v1_user_proto_rawDesc), len(file_player_service_user_v1_user_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_player_service_user_v1_user_proto_goTypes,
		DependencyIndexes: file_player_service_user_v1_user_proto_depIdxs,
		MessageInfos:      file_player_service_user_v1_user_proto_msgTypes,
	}.Build()
	File_player_service_user_v1_user_proto = out.File
	file_player_service_user_v1_user_proto_goTypes = nil
	file_player_service_user_v1_user_proto_depIdxs = nil
}
